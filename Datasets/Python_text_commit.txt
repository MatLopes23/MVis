virt facts: allow guest/host to have >1 virt tech (#70832)

Change:
- Allow systems to declare multiple virt techs. For example if a system
  is both a docker container, but virtualized on KVM, show both. If a
  system is set up to run virtualbox and KVM VMs, show both.

- This is done by introducing new facts keys:
  - virtualization_tech_guest
  - virtualization_tech_host

- Backwards compatibility is preserved by keeping track of the previous
  return-points and refusing to update those keys after we would have
  returned, but now returning them at the end, so that the new keys can
  accumulate their data.

Test Plan:
- Local
- CI

Tickets:
- Refs #66304
- Refs #17151
- Refs #17058
- Probably others

Signed-off-by: Rick Elrod <rick@elrod.me>RHEV virt facts: Detect vdsmd in addition to vdsm (#70901)

Change:
- Look for the `vdsmd` process in addition to `vdsm` as before.

Tickets:
- Fixes #66147

Signed-off-by: Rick Elrod <rick@elrod.me>virtualization facts: check /dev/kvm as a fallback (#70829)

Change:
- On Linux, there are situations where a host might be a KVM host but
  not have the kernel module enabled (it might be compiled in instead).
  In these cases, /dev/kvm will still exist, and rather than reporting
  NA, we should report that the host is a KVM host.

Test Plan:
- Local

Signed-off-by: Rick Elrod <rick@elrod.me>facts virtual: detect KVM when product_name is 'KVM Server' (#66780)

* facts virtual: detect KVM when product_name is 'KVM Server'

* added changelog fragment for "facts virtual: detect KVM when product_name is 'KVM Server'"setup: more reliably detect container environment (#66183)

* virtual facts: /proc/<pid>/environ is NULL-separated
* non-empty "container" env is a guest container
* This is consistent with `systemd-detect-virt --container`
* fact utils: line_sep option: specify delim for split
* allow using the same function to split null-delimited objectsAdd support for podman in virtualization facts (#64981)

Check additional file check virtualization facts for podman

Fixes: #64954

Signed-off-by: Abhijeet Kasurde <akasurde@redhat.com>Detect virtualization facts when VM on Nutanix AHV hypervisor (#58327)

- /sys/devices/virtual/dmi/id/product_name == 'AHV'
- /sys/devices/virtual/dmi/id/sys_vendor == 'Nutanix'Fix virtualization role for DigitalOcean droplets (#41062)

Fixes #41061facts: set virtualization_role for KVM hosts (#50770)

* facts: set virtualization_role for KVM hosts

Fixes #49734

* Add changelogClose all open filehandle (#50544)

Signed-off-by: Abhijeet Kasurde <akasurde@redhat.com>simplify vm_guest detection code (#49378)

- remove a lot of repetition
  - change lists to tuples since they are faster to assignFix GCE and scaleway VM detection (#47193)

* Fix Google cloud engine & Scaleway VM detectionFix virt role detection for Hetzner cloud servers (#42023)

See also https://wiki.hetzner.de/index.php/CloudServer/enFix unset ansible_virtualization_role (#39514)

Error was:
AttributeError("'str' object has no attribute 'startwith'",)

Closes #39138We need to return virtual_facts after VMWare platform detection (#38237)
continue fact gathering even without dmidecode (#34925)

* continue fact gathering even without dmidecode

If dmidecode is not available we still wan to continue with fact
gathering.
On certain platforms dmidecode just won't work
fixes to virtual facts

fixes #36038fix new EC2 C5 instance virtualization_type identification (#35063)

* fix new EC2 C5 instance virtualization_type identification

Fixes #35051

Signed-off-by: Adam Miller <admiller@redhat.com>
Detect OpenStack guests on RDO based installs, Newton and newer. (#35452)

The product string (used as the DMI product name) changed from
"OpenStack Nova" to "OpenStack Compute" between Mitaka and Newton
in the OpenStack RDO packaging.Fix virt role detection for kvm if no other match (#35403)

This fixes an indention bug introduced in
45a9f967749ec68e2077fe1d1d32dd37660ab376
that was causing the virtualization_role to be set to 'host'
for many cases incorrectly.

Fixes https://github.com/ansible/ansible/pull/21621
(the issue mentioned in the pr)added new IBM Power KVM guest recognisation (#35169)

Signed-off-by: Toshaan Bharvani <tab@toshaan.com>facts: Get virtual facts about VMware (#34132)

This fixes fact gathering of VMware guest machines with
older Linux Kernel versions. These older Kernels do not support /sys
filesystem which is used to gather virtualization related facts.
'dmidecode' is the safest option to find out virtualization related facts.

Fixes: #21573

Signed-off-by: Abhijeet Kasurde <akasurde@redhat.com>Fix invalid string escape sequences.Fix ansible_virtualization_role fact on CloudLinux (#27191)

CloudLinux and OpenVZ have common roots, but CloudLinux does not really
provide OS virtualization so it should not be regarded as a 'openvz'
system. This change adds a check for the existance of the LVE kernel
module which only exists on CloudLinux.

Fixes: https://github.com/ansible/ansible/issues/26424Detect UEFI VMware guests (#26590)

VMware provides a different DMI product name for VMs booted via UEFI vs BIOS.

VMware provides a different DMI product name for VMs booted via UEFI ('VMware7,1') vs BIOS ('VMware Virtual Platform')

Fixes #26517facts: Add linux virtio module detection (#25578)

Detect as kvm guest if virtio linux kernel module is loadedFacts Refresh (2.4 roadmap) (#23012)

Facts Refresh (2.4 roadmap)

This commit implements most of the 2.4 roadmap 'Facts Refresh'
- move facts.py to facts/__init__.py
- move facts Distribution() to its own class
- add a facts/utils.py
- move get_file_content and get_uname_version to facts/utils.py
- move Facts() class from facts/__init__ to facts/facts.py
- mv get_file_lines to facts/utils.py
- mv Ohai()/Facter() class to facts/ohai.py and facter.py
- Start moving fact Hardware() classes to facts/hardware/*.py
- mv HPUX() hardware class to facts/hardware/hpux.py
- move SunOSHardware() fact class to facts/hardware/sunos.py
- move OpenBSDHardware() class to facts/hardware/openbsd.py
- mv FreeBsdHardware() and DragonFlyHardware() to facts/hardware/
- mv NetBSDHardware() to facts/hardware/netbsd.py
- mv Darwin() hardware class to facts/hardware/darwin.py
- pep8/etc cleanups on facts/hardware/*.py
- Mv network facts classes to facts/network/*.py
- mv Virtual fact classes to facts/virtual
- mv Hardware.get_sysctl to facts/sysctl.py:get_sysctl

- Also mv get_uname_version from facts/utils.py -> distribution.py
  since distribution.py is the only thing using it.

- add collector.py with new BaseFactCollector
- add a subclass for AnsibleFactCollector
- hook up dict key munging FactNamespaces
- add some test cases for testing the names of facts
- mv timeout stuff to facts.timeout

- rm ansible_facts()/get_all_facts() etc

- Instead of calling facts.ansible_facts(), fact collection
  api used by setup.py is now to create an AnsibleFactCollector()
  and call it's collect method.

- replace Facts.get_user_facts with UserFactCollector
- add a 'systems' facts package, mv UserFactCollector there
- mv get_dns_facts to DnsFactCollector
- mv get_env_facts to EnvFactCollector
- include the timeout length in exception message

- modules and module_utils that use AnsibleFactCollector
  can now theoretically set the 'valid_subsets'

  May be useful for network facts module that currently have
  to reimplement a good chunk of facts.py to get gather_subsets
  to work.

- get_local_facts -> system/LocalFactCollector
- get_date_time -> system/date_time.py
- get_fips_facts -> system/fips.py
- get_caps_facts() -> system/caps.py
- get_apparmor_facts -> system/apparmor.py
- get_selinux_facts -> system/selinux.py
- get_lsb_facts -> system/lsb.py
- get_service_mgr_facts -> system/service_mgr.py
- Facts.is_systemd_managed ->  system/service_mgr.py
- get_pkg_mgr_facts -> system/pkg_mgr.py
- Facts()._get_mount_size_facts() -> facts.utils.get_mount_size()

- add unit test for EnvFactCollector
- add a test case for minimal gather_subsets
- add test case for collect_ids
- Make gather_subset match existing behavior or '!all'

    If 'gather_subset' is provided as '!all', the existing behavior
    (in 2.2/2.3) is that means 'dont collect any facts except those
    from the Facts() class'. So 'skip everything except
    'apparmor', 'caps', 'date_time', 'env', 'fips', 'local', 'lsb',
    'pkg_mgr', 'python', 'selinux', 'service_mgr', 'user', 'platform', etc.

    The new facts setup was making '!all' mean no facts at all, since
    it can add/exclude at a finer granularity. Since that makes more
    sense for the ansible collector, and the set of minimal facts to
    collect is really more up to setup.py to decide we do just that.

    So if setup.py needs to always collect some gather_subset, even
    on !all, setup.py needs to have the that subset added to the
    list it passes as minimal_gather_subset.

    This should fix some intg tests that assume '!all' means that
    some facts are still collected (user info and env for example).

    If we want to make setup.py collect a more minimal set, we can do that.

- force facts_dicts.keys() to a list so py3 works
- split fact collector tests to test_collectors.py

- convert Facter(Facts) -> other/facter.py:FacterFactCollector

- add FactCollector.collect_with_namespace()

    regular .collect() will return a dict with the key names
    using the base names ('ip_address', 'service_mgr' etc)

    .collect_with_namespace() will return a dict where the key names
    have been transformed with the collectors namespace, if there is
    one. For most, this means a namespace that adds 'ansible_' to the
    start of the key name.

    For 'FacterFactCollector', the namespace transforms the key to
    'facter_*'.

- add test cases for collect_with_namespace

- move all the concrete 'which facts does setup.py' stuff to setup.py

    The caller of AnsibleFactCollector.from_gather_subset() needs to
    pass in the list of collector classes now.

- update system/setup.py to import all of the fact classes and pass
  in that list.
- split the Distribution fact class up a bit

    extracted the 'distro release' file handling (ie, linux
    boxes with /etc/release, /etc/os-release etc) into its
    own class.
- extract get_cmdline_facts -> cmdline.py
- extract get_public_ssh_host_keys -> system/ssh_pub_keys.py
- extract get_platform_facts -> system/platform.py

  platform.py may be a good candidate for further splitting.

- rm test for plain Facts() base class
- let the base class for Collector unit tests provide collected_facts

    some Collectors and/or their migrated Facts() subsclasses need
    to look at facts collected by other modules ('ansible_architecture'
    the main one...).

    Collector.collect() has the collected_facts arg for this, so add
    a class variable to BaseFactsTest so we can specify it.

- mv Ohai to other/ohai.py and convert to Collector
- update hardware/*.py to return facts (no side effects)

- mv AnsibleFactCollector to setup.py
- extra collector class gathering to module method in
  facts/__init__.py (collector_classes_from_gather_subset)
- add a CollectorMetaDataCollector collector used to provide
  the 'gather_setup' fact
- add unit test module for 'setup' module
  (test/units/modules/system/setup.py)

- Collector init now doesnt need a module, but collect does

    An instance of a FactCollector() isnt tied to a AnsibleModule
    instance, but the collect() method can be, so optionally pass
    in module to FactCollector.collect() (everywhere)

- add a default_collectors for list of default collectors

  import and use it from setup.py module

  eventually, would like to replace this with a plugin loader
  style class finder/loader

- unit tests for module_utils/facts/__init__.py
- add unit tests for ohai facts collector
- remove self.facts side effect on populate() in hardware/sunos.py
- convert OpenBSDHardware() to rm side effects on self.facts
- try to rm some self.facts side effects in Network()

    plumb in collected_facts from populate() where it is needed.

    stop passing collected_facts into Network() [via cached_facts=,
    where it eventually becomes self.facts]

- nothing provides Fact() cached_facts arg now, rm it

    Facts() should be internal only implementation so nothing
    should be using it.

    Of course, now someone will.

- add a Collector.name attr to build a map of name->_fact_ids

    To properly exclude a gather_subset spec like '!hardware', we
    need to know that 'hardware' also means 'devices', 'dmi', etc.
    Before, '!hardware' would remove the 'hardware' collector name
    but not 'devices'. Since both would end up in id_collector_map,
    we would still end up with the HardwareCollector in the collector
    list. End result being that '!hardware' wouldn't stop hardware
    from being collected.

    So we need to be able to build that map, so add the Collector.name
    attribute that is the primary name (like 'hardware') and let
    Collector._fact_ids be the other fact ids that a collector is
    responsible for.

    Construct the aliases_map of Collector.name -> set of _fact_ids
    in fact/__init__.py get_collector_names, and use it when we are
    populating the exclude set.

- refactor of distribution.py

    make the big OS_FAMILY literal a little easier to read
    Also keys can now be any string instead of python literals

    99% sure the test for 'KDE Neon' was wrong
    I don't see how/where it should or could get 'Neon' instead
    of 'KDE Neon' as provided in os-release NAME=

    Use 'distribution' string for key to OS_MAP

    ie, we dont need to make it a valid python label anymore so dont.

    move _has_dist_file to module as _file_exists
    easier to mock without mucking with os.path

    mv platform.system() calls to within get_distribution_facts() instead
    of Distribution() init.

- remove _json compat module

    The code in here was to support:

      -a 'json' python module that was not the standard one included
      with python since 2.6.

      - potentially fallback to simplejson if 'json' was not available.

    'json' is available for all supported python versions now so
    no longer needed.

- mv get_collector_names -> facts.collector
- mv collector_classes_from_gather_subset -> facts.collector
- mv collector tests from test_facts -> test_collector

- Use six's reduce() in sunos/netbsd hardware facts

- rm extraneous get_uname_version in utils

  only system/distribution.py uses it

- Remove Facts() subclass metaclass usage

  - using fact_id and a platform id for matching collectors

    gut most of Facts() subclasses

    rm Facts() subclasses with weird metaclass

    only add collectors that match the fact_ids and the platform_info
    to the list of collectors used.

    atm, a collectors platform_id will default to 'Generic', and
    any platform matches 'Generic'

    goal is to select collector classes including matching the
    systems platform in collector.py, instead of relying on
    metaclasses in hardware/*. To finish this, the various
    Facts() subclasses will need to be replaced entirely with
    Collector() subclasses.

    use collector classmethod platform_match() to match the platform

    This lets the particular class decide if it is compatible with
    a given platform_info. platform_info is a dict like obj, so it could be
    expanded in the future.

    Add a default platform_match to BaseFactCollector that matches
    platform_info['system'] == cls._platform

    They were needed previously to trigger a module
    load on all the collector classes when we import
    facts/hardare so that the Hardware() and related
    classes that used __new__ and find_all_subclasses()
    would work.

    Now that is done in collectors based on platform matching
    at runtime we dont need to do it py module import/parse
    time. So the non empty __init__.pys are no longer needed
    and their is a more flexible mechanism for selection
    platform specific stuff.

    facts/facts.py is no longer used, rm'ed

- if we dont find an implement class for gather spec.. just ignore it.

  Would be useful to add a warn to warn about this case.

- Fix SD-UX typo (should be HP-UX)

- Port fix for #21893 (0 sockets) to this branch

    This readds the change from 8ad182059d5a085e4f8ecfe8ae63bad14a7dc01c
    that got lost in merge/rebase

    Fixes #21893

- port sunos fact locale fix for #24542 to this branch

    based on e558ec19cd1fd9d00e299cf1938d4ca3cec85cda

    Fixes #24542

    Solaris fact fix (#24793)

    ensure locale for solaris fact gathering

    fixes issue with locale interfering with proper reading of decimals

- raise exceptions in the air like we just dont care.

    Pretty much ignore any not exit exception in facts
    collection. And add some test cases.

- added new selinux fact to clarify python lib

    the selinux fact is boolean false when the library is not installed,
    a dictionary/hash otherwise, but this is ambigous
    added new fact so we can eventually remove the type dichtomy and normalize it as a dict

    Re-add of devel commit 85c7a7b844bf429fc9cc0ffce5dd9bf05ed47b5a to
    the new code layout, since it got removed in merge/rebasefeat(permissions): Option to disable event:admin for members

Add an organization-level option to change the default permissions for the member role to include or exclude the 'event:admin' role, and couple Discard & Delete to event:admin.

Moves the Attachment role setting to the Membership section of organization settings.fix(app-platform): don't send issue_ignored webhook for issue unresolved action (#15453)

* dont send issue_ignored webhook for issue unresolved

* Write testchore: blacken take 2 (#14360)

#skipsentryref: (Django 1.9) Convert request.DATA to request.data

This very interesting pr converts uses of request.DATA to request.data. Just a change required by
DRF 3.x:
https://www.django-rest-framework.org/community/3.0-announcement/#the-data-and-query_params-properties

I'll do the changes to `FILES` separately.ref: (Django 1.9) Bump djangorestframework to 3.0.5 as an intermediate step to get to 3.3.x

Upgrade to next major version of django rest framework. This diff is fairly large, but this is the
minimum set of changes I could make to have the upgrade pass. Mostly things are drop in renames,
so there aren't really sweeping changes here.

Things done:

- serializer.object replaced with serializer.validated_data. For standard serializers this is a
  drop in replacement. For model serializers we get a dictionary rather than the instance, so need
  to translate usage accordingly.
- on serializer fields, replace allow_none with allow_null
- on field validation methods in serializers (ie validate_<fieldname>) change parameters to just
  value, rather than attrs, source. This means that values are just passed directly to the
  validation method rather than us having to look them up. In cases where we use attrs to look up
  other values we do so in validate
- replaced uses of init_data with initial_data on serializers
- add allow_blank and allow_null as necessary to replicate previous behaviour. These need to be
  specified explicitly now.
- Replace uses of Serializer.base_fields with Serializer().fields. These are equivalent
- Convert all WritableField classes to Field. Fields are now writeable by default.
- Replace our vendorized ListField with the DRF version
- For custom fields, rename from_native to to_internal_value, and to_native to to_representation.
  These are drop in replacement get_default_fields has been removed. get_fields works as a
  replacement, but doesn't operate in quite the same way, so restructed the validators for monitors.fix(analytics): Consolidate issue resolved signal  (#12412)
ref(api): Move extra query arg passing to update/delete helpersfeat(api): Add organization group index put method (#11732)

ref(api): Move ProjectGroupIndexEndpoint.put into helper to support mutli-projectref(integrations): Audit logs for install/uninstall (#19010)

* ref(integrations): Audit logs for install/uninstall

* update test

* move up superFix for legacy browser filter changes in audit logs (#15943)

Fixes ISSUE-590

The value that was saved to audit logs can be a few different types depending on
which filter is used, with legacy browser filters having a few different states.
Change the save functionality to save better values in audit logs going forward
and change the audit log display function to handle all the possible values.

/cc @markstory @wmakfeat(api): Allow invite requests to be approved (#15099)
feat(invites): Make invite modal permission aware (#15039)

The member invite modal has learned to create invite requests. Members
may now use this modal to suggest that a user be invited.ref(app-platform): Add install tokens Destroyer (#14210)

* ref(app-platform): Add install tokens Destroyer
Feat (integrations) write to sentry app installation token table (#14172)
(fix): AuditLog Data Display (#13405)

Ensure that we take of state when current_state is false by making sure we only deal with sets.(feat): Display Project Settings Inbound Filters (#12932)

* fixed the display

* added six cause flake8 was complaining

* Added tests

* refactored/cleaned up code in audit_logref(audit-log): Log sso config updates (#12744)
Add plan cancelled to audit log (#12713)
ref(auditlog): Add audit logs for sentry apps (#12487)

* ref(auditlog): Add audit logs for sentry apps

* add testsfeat(require-2fa): Remove 2FA noncompliant users from organization (#9447)
feat: Audit Log Entry for Project Edits (#8158)

* feat: Audit Log Entry for Project Edits

We can now view changes in the project's slug in the audit log.fix(audit-log): Make clear when ondemand set to unlimited (#8129)
fix(api): Create audit log entry when editing member details (#8023)
fix(auditlog): Fix audit log entry for Org Restore (#8081)

* fix(auditlog): Fix audit log entry for Org Restore

Fix the audit log entry for ORG.RESTORE. Also include audit log entry for require_2fa.

* fix testfeat(auditlog): Add Trial and Plan Events to Audit Log (#6671)

* feat(auditlog): Add Trial and Plan Events to Audit Log

Adding trial and plan event types for audit log entries so hosted
Sentry can include these in customer audit logs.

See https://github.com/getsentry/sentry/pull/6617

* incrementing for meredith's branch

* removing merge artifactfeat(auditlog): Add audit logs for integrations (#7430)

* feat(auditlog): Add audit logs for integrations

Display which integration was enabled, edited, or disabled from a project.

* add tests

* add tests

* add tests

* update constant value to make room for othersfix: UnicodeDecode error in audit log serialization

Fixes SENTRY-5T5feat(auditlog): Add audit log for org settings (#6666)

* [WIP] feat(auditlog): Add audit log for org settings

Audit log will now display which organization setting was updated.

* add check for org settings changes, display the changed setting, add tests

* display the new value of updated org setting

* fix conflict

* fix for tests

* display old value and new value and rename dict

* update CHANGESfeat(servicehooks): Add project-level service hooks implementation

This adds a new feature called service hooks, which are simply webhooks registered to a project.

These can be created via the API, and eventually the UI, and are fairly similar to the GitHub model.feat(auditlog): Add audit logs for ondemand spend (#6617)

* feat(auditlog): Add audit logs for ondemand spend

* changing event numberAllow org owners to transfer projects across orgs (#5614)

* syntax and unused imports

* add accept transfer endpoint

* import Http404

* resolve merge

* add audit log for project transfer request

* audit log for accept project transfer

* add transaction ids

* change activity log type

* add from_organization to request project transfer email

* Add generic signing module

* add sign/unsign for data in url

* checks for expired signature and bad signature

* remove not used variable

* add transfer project request tests

* use urlencode

* refactor and add error message for unfound email

* add some accept transfer tests

* remove dupe 'try'

* add check for project's org

* use absolute_uri

* refactor team query and owner email check

* fix typo

* fix test

* moar tests

* another test

* use transfer_to for project transferinitial swath of yapf formatting changespep8: format src/sentryAdd Rule create/edit/remove to AuditLog. (#4187)
Add more labels for audit logDont show api keys in notesMerge branch 'master' into redesign/react

Conflicts:
	src/sentry/buffer/redis.py
	src/sentry/models/user.py
	src/sentry/static/sentry/less/sentry.less
	src/sentry/templates/sentry/bases/organization.html
	src/sentry/templates/sentry/layout.html
	src/sentry/templates/sentry/organization-home.html
	src/sentry/templates/sentry/organization-members.html
	tests/sentry/web/frontend/test_organization_home.pyMerge branch 'master' into redesign/react

Conflicts:
	src/sentry/templates/sentry/organization-members.html
	src/sentry/templates/sentry/projects/keys.html
	src/sentry/templates/sentry/projects/manage.htmlMerge branch 'master' into redesign/react

Conflicts:
	src/sentry/api/endpoints/organization_details.py
	src/sentry/api/serializers/models/group.py
	src/sentry/conf/server.py
	src/sentry/models/user.py
	src/sentry/static/sentry/less/sentry.less
	src/sentry/static/sentry/scripts/app.js
	src/sentry/static/sentry/scripts/charts.js
	src/sentry/templates/sentry/account/recover/index.html
	src/sentry/templates/sentry/bases/admin.html
	src/sentry/templates/sentry/layout.html
	src/sentry/templates/sentry/login.html
	src/sentry/templates/sentry/organization-auth-provider-settings.html
	src/sentry/templates/sentry/organization-settings.html
	src/sentry/templates/sentry/plugins/bases/issue/create_issue.html
	src/sentry/templates/sentry/projects/manage.html
	src/sentry/templates/sentry/projects/rules/new.html
	src/sentry/templates/sentry/register.html
	tests/sentry/api/endpoints/test_project_group_index.pyMerge branch 'redesign/react' into redesign/stylesMerge branch 'master' into redesign/reactMerge branch 'master' into redesign/react

Conflicts:
	src/sentry/static/sentry/less/sentry.less
	src/sentry/templates/sentry/help/platform_index.html
	src/sentry/templates/sentry/projects/manage.html
	src/sentry/templates/sentry/projects/manage_tags.html
	src/sentry/web/urls.pyMerge branch 'master' into org_sidebar

Conflicts:
	.jshintrc
	Makefile
	bin/load-mocks
	bower.json
	package.json
	setup.py
	src/sentry/admin.py
	src/sentry/api/base.py
	src/sentry/api/endpoints/auth_index.py
	src/sentry/api/endpoints/event_details.py
	src/sentry/api/endpoints/group_details.py
	src/sentry/api/endpoints/project_details.py
	src/sentry/api/endpoints/project_group_index.py
	src/sentry/api/endpoints/team_details.py
	src/sentry/api/endpoints/team_groups_new.py
	src/sentry/api/endpoints/team_groups_trending.py
	src/sentry/api/endpoints/team_index.py
	src/sentry/api/fields/__init__.py
	src/sentry/api/serializers/models/event.py
	src/sentry/api/serializers/models/group.py
	src/sentry/api/serializers/models/pending_team_member.py
	src/sentry/api/serializers/models/project.py
	src/sentry/api/serializers/models/team.py
	src/sentry/api/serializers/models/team_member.py
	src/sentry/api/views/help_index.py
	src/sentry/api/views/help_section.py
	src/sentry/conf/server.py
	src/sentry/constants.py
	src/sentry/event_manager.py
	src/sentry/filters/builtins.py
	src/sentry/models/group.py
	src/sentry/models/project.py
	src/sentry/models/teammember.py
	src/sentry/receivers/core.py
	src/sentry/search/django/backend.py
	src/sentry/search/utils.py
	src/sentry/static/sentry/app/utils.js
	src/sentry/static/sentry/fonts/sentry-simple.eot
	src/sentry/static/sentry/fonts/sentry-simple.svg
	src/sentry/static/sentry/fonts/sentry-simple.ttf
	src/sentry/static/sentry/fonts/sentry-simple.woff
	src/sentry/static/sentry/less/fonts.less
	src/sentry/static/sentry/less/select2.less
	src/sentry/static/sentry/less/sentry.less
	src/sentry/static/sentry/scripts/app.js
	src/sentry/static/sentry/scripts/sentry.charts.js
	src/sentry/static/sentry/scripts/sentry.stream.js
	src/sentry/static/sentry/scripts/views.js
	src/sentry/static/sentry/styles/global.min.css
	src/sentry/static/sentry/styles/sentry.css
	src/sentry/static/sentry/styles/wall.css
	src/sentry/templates/sentry/bases/settings.html
	src/sentry/templates/sentry/bases/stream.html
	src/sentry/templates/sentry/bases/team.html
	src/sentry/templates/sentry/dashboard.html
	src/sentry/templates/sentry/groups/details.html
	src/sentry/templates/sentry/groups/event_list.html
	src/sentry/templates/sentry/groups/group_list.html
	src/sentry/templates/sentry/help/api_index.html
	src/sentry/templates/sentry/help/api_section.html
	src/sentry/templates/sentry/help/basic_page.html
	src/sentry/templates/sentry/help/index.html
	src/sentry/templates/sentry/help/platform_details.html
	src/sentry/templates/sentry/help/platform_index.html
	src/sentry/templates/sentry/layout.html
	src/sentry/templates/sentry/partial/_event_details.html
	src/sentry/templates/sentry/partial/interfaces/http.html
	src/sentry/templates/sentry/plugins/bases/tag/widget.html
	src/sentry/templates/sentry/projects/base.html
	src/sentry/templates/sentry/projects/edit_key.html
	src/sentry/templates/sentry/projects/keys.html
	src/sentry/templates/sentry/projects/list.html
	src/sentry/templates/sentry/projects/manage.html
	src/sentry/templates/sentry/projects/notifications.html
	src/sentry/templates/sentry/projects/plugins/configure.html
	src/sentry/templates/sentry/projects/plugins/list.html
	src/sentry/templates/sentry/projects/rules/list.html
	src/sentry/templates/sentry/select_team.html
	src/sentry/templates/sentry/teams/groups/details.html
	src/sentry/templates/sentry/teams/groups/list.html
	src/sentry/templates/sentry/teams/groups/members.html
	src/sentry/templates/sentry/teams/groups/new.html
	src/sentry/templates/sentry/teams/groups/projects.html
	src/sentry/templates/sentry/teams/groups/remove.html
	src/sentry/templates/sentry/teams/manage.html
	src/sentry/templates/sentry/teams/members/accept_invite_unauthenticated.html
	src/sentry/templates/sentry/teams/members/edit.html
	src/sentry/templates/sentry/teams/members/index.html
	src/sentry/templates/sentry/teams/members/new.html
	src/sentry/templates/sentry/teams/members/remove.html
	src/sentry/templates/sentry/teams/new.html
	src/sentry/templates/sentry/teams/projects/index.html
	src/sentry/templates/sentry/teams/projects/new.html
	src/sentry/templates/sentry/teams/remove.html
	src/sentry/templates/sentry/wall.html
	src/sentry/templatetags/sentry_helpers.py
	src/sentry/utils/cursors.py
	src/sentry/web/api.py
	src/sentry/web/forms/teams.py
	src/sentry/web/frontend/groups.py
	src/sentry/web/frontend/help_page.py
	src/sentry/web/frontend/help_platform_details.py
	src/sentry/web/frontend/help_platform_index.py
	src/sentry/web/frontend/projects/remove.py
	src/sentry/web/frontend/teams.py
	src/sentry/web/helpers.py
	src/sentry/web/urls.py
	tests/js/index.html
	tests/js/spec/OrderedElementsViewSpec.js
	tests/sentry/api/endpoints/test_broadcast_index.py
	tests/sentry/api/endpoints/test_group_details.py
	tests/sentry/api/endpoints/test_project_details.py
	tests/sentry/api/endpoints/test_project_group_index.py
	tests/sentry/api/endpoints/test_project_index.py
	tests/sentry/api/endpoints/test_team_groups_new.py
	tests/sentry/api/endpoints/test_team_groups_trending.py
	tests/sentry/receivers/test_core.py
	tests/sentry/search/test_utils.py
	tests/sentry/web/frontend/groups/tests.py
	tests/sentry/web/frontend/projects/tests.py
	tests/sentry/web/frontend/teams/tests.py
	tests/sentry/web/frontend/test_help_page.py[bbc] Add support for another embed pattern (closes #18643)[bbc] add support for BBC Radio Play pages(closes #17022)[bbc] Add support for bbcthree (closes #16612)[bbc] Add proper default to _search_json_ld call[bbc] PEP 8[bbc] Add support for morph embeds (Closes #10239)[bbc] improve extraction

- extract f4m and dash formats
- improve format sorting and listing
- improve extraction of articles with `otherSettings.playlist`[bbc] Improve extraction from sxml playlists[bbc] Extend vpid regex (Closes #9003)[bbc] Improve title and description extraction (Closes #8826, closes #8822)[bbc] Fix BBC Extractor to work with 'School Report'[bbc] Use _search_json_ld[bbc] Add another pattern for playlist.sxml (Closes #7743)[bbc] Extract _ID_REGEX and ad one more video id pattern (Closes #7724)[bbc] PEP 8[bbc] Extract article JSON and actualize tests[bbc] Remove duration[bbc] Support playlists of data-playable[bbc] Improve data-playable regex[bbc] Add one more scenario for data-playable embeds[bbc] Make playlist title optional[bbc] Support multiple videos in articles embedded with playlist.sxml[bbc] Add support for videos in news articles embedded with data-playable[bbc] Add support for vxp-playlist-data embeds (Closes #6453)[bbc] Fix regex[bbc] Add support for direct bbc.co.uk embedsMerge branch 'atomicdryad-pr-bbcnews'bpo-5028: Fix up rest of documentation for tokenize documenting line (GH-13686)



https://bugs.python.org/issue5028bpo-5028: fix doc bug for tokenize (GH-11683)



https://bugs.python.org/issue5028closes bpo-34515: Support non-ASCII identifiers in lib2to3. (GH-8950)
Revert "bpo-30406: Make async and await proper keywords (#1669)" (GH-6143)

This reverts commit ac317700ce7439e38a8b420218d9a5035bba92ed.

(Reverts only the lib2to3 part.)bpo-30406: Make async and await proper keywords (#1669)

Per PEP 492, 'async' and 'await' should become proper keywords in 3.7.Merge 3.5 (Issue #24619)Merge 3.5 (Issue #24619)PEP 0492 -- Coroutines with async and await syntax. Issue #24017.#19620: merge with 3.3.Merged revisions 76062 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

................
  r76062 | benjamin.peterson | 2009-11-02 12:12:12 -0600 (Mon, 02 Nov 2009) | 70 lines

  Merged revisions 74359,75081,75088,75213,75278,75303,75427-75428,75734-75736,75865,76059-76061 via svnmerge from
  svn+ssh://pythondev@svn.python.org/sandbox/trunk/2to3/lib2to3

  ........
    r74359 | benjamin.peterson | 2009-08-12 17:23:13 -0500 (Wed, 12 Aug 2009) | 1 line

    don't pass the deprecated print_function option
  ........
    r75081 | benjamin.peterson | 2009-09-26 22:02:57 -0500 (Sat, 26 Sep 2009) | 1 line

    let 2to3 work with extended iterable unpacking
  ........
    r75088 | benjamin.peterson | 2009-09-27 11:25:21 -0500 (Sun, 27 Sep 2009) | 1 line

    look on the type only for __call__
  ........
    r75213 | benjamin.peterson | 2009-10-03 10:09:46 -0500 (Sat, 03 Oct 2009) | 5 lines

    revert 75212; it's not correct

    People can use isinstance(x, collections.Callable) if they expect objects with
    __call__ in their instance dictionaries.
  ........
    r75278 | benjamin.peterson | 2009-10-07 16:25:56 -0500 (Wed, 07 Oct 2009) | 4 lines

    fix whitespace problems with fix_idioms #3563

    Patch by Joe Amenta.
  ........
    r75303 | benjamin.peterson | 2009-10-09 16:59:11 -0500 (Fri, 09 Oct 2009) | 1 line

    port latin-1 and utf-8 cookie improvements
  ........
    r75427 | benjamin.peterson | 2009-10-14 20:35:57 -0500 (Wed, 14 Oct 2009) | 1 line

    force floor division
  ........
    r75428 | benjamin.peterson | 2009-10-14 20:39:21 -0500 (Wed, 14 Oct 2009) | 1 line

    silence -3 warnings about __hash__
  ........
    r75734 | benjamin.peterson | 2009-10-26 16:25:53 -0500 (Mon, 26 Oct 2009) | 2 lines

    warn on map(None, ...) with more than 2 arguments #7203
  ........
    r75735 | benjamin.peterson | 2009-10-26 16:28:25 -0500 (Mon, 26 Oct 2009) | 1 line

    remove unused result
  ........
    r75736 | benjamin.peterson | 2009-10-26 16:29:02 -0500 (Mon, 26 Oct 2009) | 1 line

    using get() here is a bit pointless
  ........
    r75865 | benjamin.peterson | 2009-10-27 15:49:00 -0500 (Tue, 27 Oct 2009) | 1 line

    explain reason for warning
  ........
    r76059 | benjamin.peterson | 2009-11-02 11:43:47 -0600 (Mon, 02 Nov 2009) | 1 line

    tuples are no longer used for children
  ........
    r76060 | benjamin.peterson | 2009-11-02 11:55:40 -0600 (Mon, 02 Nov 2009) | 1 line

    revert r76059; apparently some fixers rely on Leaf no () for children
  ........
    r76061 | benjamin.peterson | 2009-11-02 12:06:17 -0600 (Mon, 02 Nov 2009) | 1 line

    make fix_tuple_params keep the tree valid #7253
  ........
................Run 2to3 on this library.Merged revisions 61596-61597 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r61596 | martin.v.loewis | 2008-03-18 23:43:46 -0500 (Di, 18 Mär 2008) | 2 lines

  Import lib2to3.
........
  r61597 | martin.v.loewis | 2008-03-18 23:58:04 -0500 (Di, 18 Mär 2008) | 3 lines

  Initialized merge tracking via "svnmerge" with revisions "1-61595" from
  svn+ssh://pythondev@svn.python.org/sandbox/trunk/2to3/lib2to3
........[utils] Improve subtitles_filename (closes #22753)[YoutubeDL] Honour all --get-* options with --flat-playlist (closes #22493)[YoutubeDL] check annotations availabilty(closes #18582)Fix W504 and disable W503 (closes #20863)Start moving to ytdl-org[YoutubeDL] Fix typo in media extension compatibility checker
Merge pull request #12909 from remitamine/raw-sub

[YoutubeDL] write raw subtitle files[YoutubeDL] Ensure dir existence for each requested format (closes #14116)Keep in sync with ffmpeg's current malformed AAC bitstream wording (closes #13587)add Basic support for Smooth Streaming protocol(#8118)Merge branch 'lkho-pr/#10268'[YoutubeDL] Properly process unable-to-download-error on python2[YoutubeDL] Carry long lines and improve readability[YoutubeDL] Fix typo in m3u8_native fixupMerge pull request #8718 from remitamine/m3u8-fixup

Add fixup for media files produced by HlsNative downloader(fixes #4776)Merge branch 'master' of github.com:rg3/youtube-dlRename error_to_str to error_to_compat_str[YoutubeDL] More error_to_strProperly convert errors to strings[YoutubeDL] Clarify incompatible formats merge message

When `-f` is not specified it's misleading to see `You have requested ...` as user did not actually request any formats.[YoutubeDL] Improve description file naming[YoutubeDL] Improve annotations file naming[YoutubeDL] Improve JSON info file naming[YoutubeDL] Improve audio/video-only file naming[YoutubeDL] Ensure correct extension is always present for a merged file (Closes #5535)[YoutubeDL] Filter requested info fields on `--load-info` as well

In order to properly handle JSON info files generated by youtube-dl versions prior to 4070b458ece46a29dad9be2312a7daa48bb2f1d7[YoutubeDL] pep8: use 'k not in' instead of 'not k in'[YoutubeDL] Do not write requested info in info JSON file (Closes #5562, closes #5564)Merge pull request #5552 from zouhair/master

Typo "incompatible" instead of "uncompatible"[YoutubeDL] mp3 is compatible with mp4[YoutubeDL] Respect explicit `--merge-format-output` for uncompatible formats as well[YoutubeDL] Merge incompatible formats into mkv (#5456)Detect already merged videos

Without the '--keep-video' option the two files would be downloaded again and even using the option, ffmpeg would be run again, which for some videos can take a long time.
We use a temporary file with ffmpeg so that the final file only exists if it successFFmpegMergerPP: use the new system for specifying which files can be deleteRemove the 'stitle' field

A warning has been printed for more than 2 years (since 97cd3afc7525394c46398f1526d412d081c02085)Merge remote-tracking branch 'origin/master'

Conflicts:
	youtube_dl/YoutubeDL.pyMerge remote-tracking branch 'origin/master'Merge branch 'subtitles-rework'

(Closes PR #4964)[ffmpeg] Make available a property[ffmpeg] Add --ffmpeg-location[YoutubeDL] Do not perform filter matching on partial results (Fixes #4921)[YoutubeDL] Always set the '_filename' field in the info_dict (reported in #4053)

It's also useful when you use the '--write-info-json' option.[YoutubeDL] clarify hook documentation[YoutubeDL] Implement --write-all-thumbnails (Closes #2269)[downloader] Improve downloader selection[youtube] Fixup DASH m4a headers

This fixes #2288, #2506, #2607, #3681, #4741, #4767.check for overwriting files in the downloader (fixes #3916, closes #3829)[youtube|ffmpeg] Automatically correct video with non-square pixels (Fixes #4674)Don't write the description file if info_dict['description'] is None (#3166)Merge pull request #4501 from AndroKev/master

only add video-id to archive, when successfulMerge pull request #4395 from cryptonaut/issue2883

Handle --get-url with merged formats (fixes #2883)Merge remote-tracking branch 'jtwaleson/master'Merge remote-tracking branch 'jtwaleson/master'[cache] Fix writing to paths with unicode characters

* Use "compat_getenv"
* "write_json_file" now expects the filename to be a string[ffmpeg] Warn if ffmpeg/avconv version is too old (Fixes #4026)New option --dump-single-json (#4003)[YouTubeDL] Best practices (Closes #3370)Deletes temp files after postprocess merge unless -k option is specified[YoutubeDL] Show download URL when -v is set

This will allow us to debug issues like #3204Merge pull request #2725 from foolscap/subtitles-error-fix

Fix subtitle download error reporting (Fixes #2724)Correct check for empty dirname (Fixes #2683)YoutubeDL: Use its `urlopen` method for downloading the thumbnail.Do not count unmatched videos for --max-downloads (Fixes #2211)Merge pull request #2153 from jaimeMF/ffmpeg-merger-check-install

Don’t try to merge the formats if ffmpeg or avconv are not installedMerge remote-tracking branch 'jaimeMF/merge-formats'Prepare widespread unicode literal use[bliptv] Remove support for direct downloads

This is now handled by the generic IEMerge remote-tracking branch 'origin/master'Merge remote-tracking branch 'jaimeMF/split-downloaders'Merge pull request #1984 from alimirjamali/patch-1

Incorrect variable is used to check whether thumbnail existsApply --no-overwrites for --write-* files as well (Fixes #1980)Add --get-duration (Fixes #859)Fix thumbnail filename determination (Fixes #1945)Add filename to --dump-json output (Fixes #1908)Add a workaround for terminals without bidi support (Fixes #1912)Print full title in --get-title output (#1806)Merge remote-tracking branch 'dz0ny/patch-1'Add an option to dump json informationMerge branch 'master' of github.com:rg3/youtube-dlMerge pull request #1675 from rzhxeo/fix

Check if description and thumbnail are None to prevent crashMerge remote-tracking branch 'origin/master'

Conflicts:
	youtube_dl/YoutubeDL.pyMerge remote-tracking branch 'origin/master'Merge branch 'download-archive'

Conflicts:
	youtube_dl/YoutubeDL.py
	youtube_dl/__init__.pyMerge branch 'master' of github.com:rg3/youtube-dlCatch socket.error before IOError

Since python 2.6 it's a child class.Merge remote-tracking branch 'origin/master'Print playpath with --get-url (Fixes #1334)Add a post processor for embedding subtitles in mp4 videos (closes #1052)Merge pull request #937 from jaimeMF/subtitles_rework

Subtitles reworkMerge branch 'master' of github.com:rg3/youtube-dlDon't try to save the thumbnail if it's None

It means the extractor couldn't find itUse determine_ext when saving the thumbnail

Urls that contain a query produced filenames with wrong extensionsAdd the option "--write-auto-sub" to download automatic subtitles from Youtube

Now automatic subtitles are only downloaded if the option is given.
(closes #903)Merge remote-tracking branch 'jaimeMF/youtubedl_class'[YoutubeDL] Ensure ext exists for automatic captions[YoutubeDL] Sanitize byte string format URLs (#13951)[YoutubeDL] Make sure format id is not empty[YoutubeDL] Improve default format specification (closes #13704)[YoutubeDL] Skip malformed formats for better extraction robustness[YoutubeDL] Sanitize more fields (#13313)Add faked X-Forwarded-For to formats' HTTP headers[YoutubeDL] Improve protocol auto determining (closes #11720)Fix "invalid escape sequences" error on Python 3.6[YoutubeDL] check only for None Value in thumbnails sorting[YoutubeDL] add fallback value for thumbnails values in thumbnails sorting[YoutubeDL] Autocalculate ext when ext is None[YoutubeDL] Fix incomplete formats check[YoutubeDL] Fix format selection with filters (Closes #10083)[YoutubeDL] Force string conversion on non string video ids[YoutubeDL] Sanitize single thumbnail URL[YoutubeDL] Fix sanitizing subtitles' url[YoutubeDL] Sanitize final URLs (Closes #8991)Merge pull request #8821 from remitamine/list-thumbnails-order

[YoutubeDL] check for --list-thumbnails immediately after processing them[YoutubeDL] Allow bestvideo+bestaudio for any extractor[YoutubeDL] Sanitize format_id (Closes #8494)[YoutubeDL] Ensure protocol is always presentMerge pull request #8245 from dstftw/auto-generate-title-fields

[YoutubeDL] Auto generate title fields corresponding to the *_number fieldsFix typos

Closes #8200.[YoutubeDL] Autocalculate ext for subtitles when missingMerge remote-tracking branch 'jaimemf/format_spec_groups' (closes #6124)Merge pull request #6303 from jaimeMF/dash_no_live

[YoutubeDL] don't default to 'bestvideo+bestaudio/best' for live videosMerge branch 'gebn-moviefap'Merge branch 'PeterDing-youku'[YoutubeDL] Handle out-of-range timestamps (#5826)[YoutubeDL] Make sure all formats have unique format_idMerge branch 'dstftw-best-fallback-on-outdated-avconv'[YoutubeDL] Fix PEP8 W503Merge pull request #5641 from dstftw/preserve-best-for-stdout-outtmpl

[YoutubeDL] Do not force bestvideo+bestaudio when outtmpl is stdoutMerge pull request #5523 from jaimeMF/remove-format-limit

Remove the --max-quality option[YoutubeDL] Allow bestvideo+bestaudio/best strategy for ted extractor[YoutubeDL] Make `bestvideo+bestaudio/best` default format when merger is availableDon't accept '-1' as format, 'all' is clearer[YoutubeDL] Fix video+audio format field (Closes #4880)[YoutubeDL] Calculate thumbnail IDs automatically[YoutubeDL] Fix video+audio format_id (Closes #4824)Merge remote-tracking branch 'codesparkle/master'[YoutubeDL] set the 'thumbnails' field if the info_dict has the 'thumbnails' field

Since the '--write-thumbnail' uses the 'thumbnails' field and we didn't updated the info_dict, it wouldn't detect the thumbnail. (fixes #4812)[YoutubeDL] Set format_id for video+audio (Closes #3634)Add --list-thumbnails[YoutubeDL] Fill the info dict 'http_headers' field with all the headers available

Useful for external tools using the json output.

The methods '_calc_headers' and '_calc_cookies' have been copied from the downloader/external, now they just use "info_dict['http_headers']".Merge remote-tracking branch 'aft90/merge-output-format'

Conflicts:
	youtube_dl/YoutubeDL.py[YoutubeDL] Copy over format metadata when merging (Fixes #4671)[YoutubeDL] Avoid negative timestamps on Windows[YoutubeDL] Fix bug in the detection of formats that don't contain video (fixes #4150)

If the format requested was not available, we called the method '.get' in None.[YoutubeDL] Don't dowload formats for merging if the first doesn't contain the video (#4132)[YoutubeDL] Allow downloading multiple formats with ,[cnn] Improve thumbnail extraction[spiegeltv] Simplify and PEP8[YouTubeDL] Throw an early error if the info_dict result is invalid[franceculture] Add extractor (Fixes #2669)Rename upload_timestamp to timestamp[vevo] Centralize timestamp handling[playvid] Simplify (#2539)[youtube] Add support for search result URLs (Fixes #2495)Add display_id fieldSome pep8 style fixesDefault to -f best-audio when only audio is requestedSet required properties for format mergingAdd temporary _sort_formats helper functionMerge remote-tracking branch 'rzhxeo/youtube'Use index in formt string (Fixes vevo test on Python 2.6)Make "requested format not available" expected (#1655)mixcloud does not do any format selectionLet extractors omit ext in formatsMerge remote-tracking branch 'origin/master'fix typosExtend #980 with --max-quality supportMerge remote-tracking branch 'jaimeMF/format_selection'Merge pull request #4255 from pypa/bugfix/4226
Merge pull request #4169 from pypa/feature/vendor-update

Update vendored dependencies, relevant API usage, and CI configRevert "remove ALL the things!"

This reverts commit 57e54dc690b4c3f543c99bcb40d523125355a9f4.

# Conflicts:
#	setup.py

Signed-off-by: Kenneth Reitz <me@kennethreitz.org>Merge branch 'master' of github.com:kennethreitz/pipenvMerge pull request #3298 from pypa/bugfix/3148

Fix direct url dependency resolutionMerge pull request #3096 from pypa/update-vendor

Update vendorMerge pull request #2368 from pypa/update-vendored-deps

Update vendored depsMerge pull request #2035 from pypa/update-vendor

Update vendored dependencies vendor all the things!Fixed #31645 -- Enhanced the migration warning for migrate commmand.

Added the list of apps with changes not reflected in migrations.Changed `'%s' % value` pattern to `str(value)`.Removed unnecessary tuple wrapping of single format string argument.Fixed #31402 -- Added migrate --check option.

Command exits with non-zero status if unapplied migrations exist.Refs #31055 -- Added --database option to the check management command.

This avoids enabling the ``database`` checks unless they are explicitly
requested and allows to disable on a per-alias basis which is required
when only creating a subset of the test databases.

This also removes unnecessary BaseCommand._run_checks() hook.Fixed #25884 -- Fixed migrate --run-syncdb when specifying an app label.Fixed #29198 -- Added migrate --plan option.Fixed #29506 -- Added validation for migrate's app_label option.

Thanks MyungSeKyo for the report and the initial patch.Removed unnecessary trailing commas and spaces in various code.
Refs #23968 -- Removed unnecessary lists, generators, and tuple calls.
Fixed #27666 -- Delayed rendering of recursivly related models in migration operations.Fixed #27100 -- Included already applied migration changes in the pre-migrate state.

Refs #24100.

Thanks Tim for the review.Fixed #27044 -- Included already applied migration changes in the post-migrate state when the execution plan is empty.

Refs #24100.

Thanks tkhyn for the report and Tim for the review.Fixed flake8 2.6 warnings.Fixed #24100 -- Made the migration signals dispatch its plan and apps.

Thanks Markus for your contribution and Tim for your review.Fixed #25850 -- Made migrate/makemigrations error on inconsistent history.Refs #26315 -- Cleaned up argparse options in commands.

* Removed type coercion. Options created by argparse are already coerced
  to the correct type.
* Removed fallback default values. Options created by argparse already
  have a default value.
* Used direct indexing. Options created by argparse are always set. This
  eliminates the need to use dict.get().Fixed #26150 -- Sorted app_labels in migrate command outputRefs #23359 -- Removed the migrate --list option per deprecation timeline.Fixed #25047 -- Improved "Conflicting migrations" error message.Fixed #25231 -- Added recording of squashed migrations in the migrate command.

Ensured squashed migrations are recorded as applied when the
migrate command is run and all of the original migrations
have been previously applied.Renamed RemovedInDjangoXYWarnings for new roadmap.

Forwardport of ae1d663b7913f6da233c55409c4973248372d302
from stable/1.8.x plus more.Fixed #24184 -- Prevented automatic soft-apply of migrations

Previously Django only checked for the table name in CreateModel
operations in initial migrations and faked the migration automatically.
This led to various errors and unexpected behavior. The newly introduced
--fake-initial flag to the migrate command must be passed to get the
same behavior again. With this change Django will bail out in with a
"duplicate relation / table" error instead.

Thanks Carl Meyer and Tim Graham for the documentation update, report
and review.Removed support for syncing apps without migrations per deprecation timeline.

Kept support for creating models without migrations when running tests
(especially for Django's test suite).Removed support for custom SQL per deprecation timeline.Removed support for initial_data fixtures per deprecation timeline.Removed pre_syncdb and post_syncdb signals per deprecation timeline.Refs #23359 -- Removed double newline from output of migrate --list

Thanks Berker Peksag for the review.Fixed #23359 -- Added showmigrations command to list migrations and plan.

Thanks to Collin Anderson, Tim Graham, Gabe Jackson, and Marc Tamlyn
for their input, ideas, and review.Fixed #23975 -- Restored pre_migrate signal if all apps have migrations.

Thanks kmmbvnr for the report.Fixed #20968 -- Checked Spatialite metadata before migrations

Thanks Kenial S. Lee for the initial patch and Tim Graham for
the review.Revert "Fixed #23650 -- Prevented migrate from calling checks 3 times"

This reverts commit 8d6e1afe0be0570253a508f43e2ef89ae640984e.
call_command now always set skip_checks to True (tested in
user_commands).Fixed #23650 -- Prevented migrate from calling checks 3 times

Thanks Ilya Baryshev for the report and Tim Graham for the review.Limited lines to 119 characters in django/

refs #23395.Removed unused migrate optionFixed #22487: Don't flush out data from before normal TestCasesClean up syncdb parts of migrate output if no synced appsSwapped placeholders in [sql]migrate command errorFixed #22863: Improve clarity of makemigrations for non-db paramsConverted remaining management commands to argparseFixed #22485: Include all unmigrated apps in project state by default.Used app_label instead of appname.

The last component of the dotted path to the application module is
consistently referenced as the application "label". For instance it's
AppConfig.label. appname could be confused with AppConfig.name, which is
the full dotted path.Made the AppConfig API marginally more consistent.

Eliminated the app_ prefix that was more confusing than useful.Renamed AppCache to Apps.

Also renamed app_cache to apps and "app cache" to "app registry".

Deprecated AppCache.app_cache_ready() in favor of Apps.ready().Stopped iterating on INSTALLED_APPS.

Used the app cache's get_app_configs() method instead.Removed module-level functions for the app cache.

Since the original ones in django.db.models.loading were kept only for
backwards compatibility, there's no need to recreate them. However, many
internals of Django still relied on them.

They were also imported in django.db.models. They never appear in the
documentation, except a quick mention of get_models and get_app in the
1.2 release notes to document an edge case in GIS. I don't think that
makes them a public API.

This commit doesn't change the overall amount of global state but
clarifies that it's tied to the app_cache object instead of hiding it
behind half a dozen functions.Migration VCS conflict detection and --merge for makemigrationsMigrate prompts if you need makemigrations, runserver prompts for migrateFirst pass on squashmigrations command; files are right, execution not.Add --list option to migrate commandMerge pull request #376 from andrewgodwin/schema-alteration

Schema alterationImprove URL extraction[udemy] Extract asset captions[udemy] Extract stream URLs (closes #16372)[udemy] Extract outputs renditions (closes #16289, closes #16291, closes #16320, closes #16321, closes #16334, closes #16335)[udemy] Extract more HLS formats[udemy] Fix subtitles extraction (closes #13812)[udemy] Fix extraction for outputs' format entries without URL (closes #13192)[udemy] Add support for react rendition (closes #12744)[udemy] Stringify video id[udemy:course] Skip non-video lectures[udemy] Switch to api 2.0 (Closes #9035)[udemy] Improve format_id[udemy] Drop outputs' formats

Always results in 403[udemy] Add outputs metadata to view_html formats[udemy] Fix outputs' formats format_id[udemy] Use custom sorting[udemy] Extract formats from view_html (Closes #8979)[udemy] Extract formats from outputs[udemy] Improve course enrolling[udemy] Improve course id v4 regex[udemy] Update course id regex to cover v4 layout (Closes #8753, closes #8868, closes #8870)[udemy] Fix typo[udemy] Semi-switch to api 2.0 (Closes #7704)

* Use api 2.0 to get lectures since it provides more formats
* Fix authorization for api 2.0
* Autotry enrolling in the course for single lectures
* Extract additional metadata rom asset['data']['outputs'][udemy] Extract formats from data.outputs (#7704)pep8 and minor beautification all around[udemy] Generalize download json and fix login[udemy] Set session cookies to API requests (Closes #4124, closes #4219, closes #4308)[udemy] Initial support for free courses (#1617)Fixed #29019 -- Added ManyToManyField support to REQUIRED_FIELDS.Fixed #27801 -- Made createsuperuser fall back to environment variables for password and required fields.Fixed #29616 -- Fixed createsuperuser for user models that don't have a password field.Made createsuperuser code more DRY.Fixed #29628 -- Made createsuperuser validate password against username and required fields.Fixed #28044 -- Unified the logic for createsuperuser's interactive and --noinput modes.
Fixed #28571 -- Added a prompt to bypass password validation in createsuperuser.Fixed #28591 -- Added an error message for createsuperuser --username= (blank).Refs #23919 -- Removed unneeded force_str callsFixed E128 flake8 warnings in django/.Fixed #25457 -- Improved formatting of password validation errors in management command output.Fixed #25089 -- Added password validation to createsuperuser/changepassword.Removed unnecessary if statement in createsuperuser command.Fixed #24910 -- Added createsuperuser support for non-unique USERNAME_FIELDs

Clarified docs to say that a non-unique USERNAME_FIELD is permissable
as long as the custom auth backend can support it.Removed unnecessary arguments in .get method callsRenamed Field.rel attribute to remote_field

Field.rel is now deprecated. Rel objects have now also remote_field
attribute. This means that self == self.remote_field.remote_field.

In addition, made the Rel objects a bit more like Field objects. Still,
marked ManyToManyFields as null=True.Use "catch" instead of "trap" for exceptions.

This is the idiomatic word in the Python world.Fixed #21832 -- Updated prompt, tests, and docs to show that USERNAME_FIELD supports FK after 9bc2d76.

Also added get_input_data() hook in createsuperuser.

Thanks Chris Jerdonek and Tim Graham for review.Fixed #21755 -- Added ForeignKey support to REQUIRED_FIELDS.

This allows specifying ForeignKeys in REQUIRED_FIELDS when using a
custom User model.

Thanks cjerdonek and bmispelon for suggestion and timgraham for review.Removed BaseCommand.stdin introduced in 116d39842dab2569013856e9f3701a7cb6554f09.

This option is not actually very useful in the general case
because it doesn't override sys.stdin.

It's still marginally useful for testing some features of
the createsuperuser command so it was moved there.
This commit also makes the detection of a TTY in createsuperuser
a bit more robust, after a suggestion of appolo13.Fixed #7423 -- Skip superuser creation when not running in a TTY.

Thanks to trac user galaxy4sale for the original report
and to AeroNotix for the patch.Fixed #19807 -- Sanitized getpass input in createsuperuser

Python 2 getpass on Windows doesn't accept unicode, even when
containing only ascii chars.
Thanks Semmel for the report and tests.Updated createsuperuser to use unicode_literals. Refs #19757.Fixed #19745 -- Forced resolution of verbose names in createsupersuser

Thanks Baptiste Mispelon for the report and Preston Holmes for the review.Fixed #19725 -- Made createsuperuser handle non-ascii prompts

Thanks Michisu for the report.Fixed #19596 -- Use `_default_manager` instead of `objects` in the auth app.

This is needed to support custom user models which don't define a manager
named `objects`.Fixed #19067 -- Clarified handling of username in createsuperuser.

Thanks to clelland for the report, and Preston Holmes for the draft patch.Fixed #19077, #19079 -- Made USERNAME_FIELD a required field, and modified UserAdmin to match.Fixed #19041 -- Corrected the handling of default usernames in createsuperuser.Fixed #3011 -- Added swappable auth.User models.

Thanks to the many people that contributed to the development and review of
this patch, including (but not limited to) Jacob Kaplan-Moss, Anssi
Kääriäinen, Ramiro Morales, Preston Holmes, Josh Ourisman, Thomas Sutton,
and Roger Barnes, as well as the many, many people who have contributed to
the design discussion around this ticket over many years.

Squashed commit of the following:

commit d84749a0f034a0a6906d20df047086b1219040d0
Merge: 531e771 7c11b1a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 18:37:04 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 531e7715da545f930c49919a19e954d41c59b446
Merge: 29d1abb 1f84b04
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 07:09:23 2012 +0800

    Merged recent trunk changes.

commit 29d1abbe351fd5da855fe5ce09e24227d90ddc91
Merge: 8a527dd 54c81a1
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:49:46 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8a527dda13c9bec955b1f7e8db5822d1d9b32a01
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:48:05 2012 +0800

    Ensure sequences are reset correctly in the presence of swapped models.

commit e2b6e22f298eb986d74d28b8d9906f37f5ff8eb8
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 17:53:05 2012 +0800

    Modifications to the handling and docs for auth forms.

commit 98aba856b534620aea9091f824b442b47d2fdb3c
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 15:28:57 2012 +0800

    Improved error handling and docs for get_user_model()

commit 0229209c844f06dfeb33b0b8eeec000c127695b6
Merge: 6494bf9 8599f64
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 14:50:11 2012 +0800

    Merged recent Django trunk changes.

commit 6494bf91f2ddaaabec3ec017f2e3131937c35517
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 21:38:44 2012 +0800

    Improved validation of swappable model settings.

commit 5a04cde342cc860384eb844cfda5af55204564ad
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 07:15:14 2012 +0800

    Removed some unused imports.

commit ffd535e4136dc54f084b6ac467e81444696e1c8a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:31:28 2012 +0800

    Corrected attribute access on for get_by_natural_key

commit 913e1ac84c3d9c7c58a9b3bdbbb15ebccd8a8c0a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:12:34 2012 +0800

    Added test for proxy model safeguards on swappable models.

commit 280bf19e94d0d534d0e51bae485c1842558f4ff4
Merge: dbb3900 935a863
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:16:49 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit dbb3900775a99df8b6cb1d7063cf364eab55621a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:09:27 2012 +0800

    Fixes for Python 3 compatibility.

commit dfd72131d8664615e245aa0f95b82604ba6b3821
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:54:30 2012 +0800

    Added protection against proxying swapped models.

commit abcb027190e53613e7f1734e77ee185b2587de31
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:11:10 2012 +0800

    Cleanup and documentation of AbstractUser base class.

commit a9491a87763e307f0eb0dc246f54ac865a6ffb34
Merge: fd8bb4e 08bcb4a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:46:49 2012 +0800

    Merge commit '08bcb4aec1ed154cefc631b8510ee13e9af0c19d' into t3011

commit fd8bb4e3e498a92d7a8b340f0684d5f088aa4c92
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:20:14 2012 +0800

    Documentation improvements coming from community review.

commit b550a6d06d016ab6a0198c4cb2dffe9cceabe8a5
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:52:47 2012 +0800

    Refactored skipIfCustomUser into the contrib.auth tests.

commit 52a02f11107c3f0d711742b8ca65b75175b79d6a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:46:10 2012 +0800

    Refactored common 'get' pattern into manager method.

commit b441a6bbc7d6065175715cb09316b9f13268171b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:41:33 2012 +0800

    Added note about backwards incompatible change to admin login messages.

commit 08bcb4aec1ed154cefc631b8510ee13e9af0c19d
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:33 2012 +0300

    Splitted User to AbstractUser and User

commit d9f5e5addbad5e1a01f67e7358e4f5091c3cad81
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:02 2012 +0300

    Reworked REQUIRED_FIELDS + create_user() interaction

commit 579f152e4a6e06671e1ac1e59e2b43cf4d764bf4
Merge: 9184972 93e6733
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:37 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 918497218c58227f5032873ff97261627b2ceab2
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:19 2012 +0800

    Deprecate AUTH_PROFILE_MODULE and get_profile().

commit 334cdfc1bb6a6794791497cdefda843bca2ea57a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:00:12 2012 +0800

    Added release notes for new swappable User feature.

commit 5d7bb22e8d913b51aba1c3360e7af8b01b6c0ab6
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 19:59:49 2012 +0800

    Ensure swapped models can't be queried.

commit 57ac6e3d32605a67581e875b37ec5b2284711a32
Merge: f2ec915 abfba3b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 14:31:54 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit f2ec915b20f81c8afeaa3df25f80689712f720f8
Merge: 1952656 5e99a3d
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:29:51 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 19526563b54fa300785c49cfb625c0c6158ced67
Merge: 2c5e833 c4aa26a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:22:26 2012 +0800

    Merge recent changes from master.

commit 2c5e833a30bef4305d55eacc0703533152f5c427
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 07:53:46 2012 +0800

    Corrected admin_views tests following removal of the email fallback on admin logins.

commit 20d1892491839d6ef21f37db4ca136935c2076bf
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 01:00:37 2012 +0800

    Added conditional skips for all tests dependent on the default User model

commit 40ea8b888284775481fc1eaadeff267dbd7e3dfa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:47:02 2012 +0800

    Added documentation for REQUIRED_FIELDS in custom auth.

commit e6aaf659708cf6491f5485d3edfa616cb9214cc0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:20:02 2012 +0800

    Added first draft of custom User docs.

    Thanks to Greg Turner for the initial text.

commit 75118bd242eec87649da2859e8c50a199a8a1dca
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 11:17:26 2012 +0800

    Admin app should not allow username discovery

    The admin app login form should not allow users to discover the username
    associated with an email address.

commit d088b3af58dad7449fc58493193a327725c57c22
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 10:32:13 2012 +0800

    Admin app login form should use swapped user model

commit 7e82e83d67ee0871a72e1a3a723afdd214fcefc3
Merge: e29c010 39aa890
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Fri Sep 7 23:45:03 2012 +0800

    Merged master changes.

commit e29c010beb96ca07697c4e3e0c0d5d3ffdc4c0a3
Merge: 8e3fd70 30bdf22
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:12:57 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8e3fd703d02c31a4c3ac9f51f5011d03c0bd47f6
Merge: 507bb50 26e0ba0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:09:09 2012 +0800

    Merged recent changes from trunk.

commit 507bb50a9291bfcdcfa1198f9fea21d4e3b1e762
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:41:37 2012 +0800

    Modified auth app so that login with alternate auth app is possible.

commit dabe3628362ab7a4a6c9686dd874803baa997eaa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:10:51 2012 +0800

    Modified auth management commands to handle custom user definitions.

commit 7cc0baf89d490c92ef3f1dc909b8090191a1294b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 14:17:28 2012 +0800

    Added model Meta option for swappable models, and made auth.User a swappable model[py3] Replaced raw_input by input

The six addition has been borrowed from:
https://bitbucket.org/gutworth/six/changeset/733ef740Fixed #18325 -- Wrapped self.stdout/stderr in OutputWrapper classFixes #17327 -- Add --database option to createsuperuser and change password management commands

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17665 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixes #15778 -- createsuperuser fails on international characters in system user names. Thanks for the patch, Hynek Cernoch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16182 bcc190cf-cafb-0310-a4f2-bffc1f526a37Tiny grammar fix in createsuperuser command.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16154 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #15371 -- Ensure that a superuser created with the createsuperuser management command with --noinput has an invalid password, not a blank password. Thanks to yishaibeeri for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15631 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #7077 and #7431 -- Use getpass.getuser instead of pwd.getpwuid to determine the current system user's username in the createsuperuser management command to enable the feature on Windows. getpass.getuser automatically falls back to the previous method.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14607 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #14354 -- Normalized the handling of empty/null passwords in contrib.auth. This also updates the createsuperuser command to be more testable, and migrates some auth doctests. Thanks to berryp for the report, and Laurent Luce for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14053 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #5753 -- Allow createsuperuser to work in situations where there
might be a valid password database entry for the current user id.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9158 bcc190cf-cafb-0310-a4f2-bffc1f526a37Removed oldforms, validators, and related code:
 * Removed `Manipulator`, `AutomaticManipulator`, and related classes.
 * Removed oldforms specific bits from model fields:
   * Removed `validator_list` and `core` arguments from constructors.
   * Removed the methods:
     * `get_manipulator_field_names`
     * `get_manipulator_field_objs`
     * `get_manipulator_fields`
     * `get_manipulator_new_data`
     * `prepare_field_objs_and_params`
     * `get_follow`
   * Renamed `flatten_data` method to `value_to_string` for better alignment with its use by the serialization framework, which was the only remaining code using `flatten_data`.
 * Removed oldforms methods from `django.db.models.Options` class: `get_followed_related_objects`, `get_data_holders`, `get_follow`, and `has_field_type`.
 * Removed oldforms-admin specific options from `django.db.models.fields.related` classes: `num_in_admin`, `min_num_in_admin`, `max_num_in_admin`, `num_extra_on_change`, and `edit_inline`.
 * Serialization framework
   * `Serializer.get_string_value` now calls the model fields' renamed `value_to_string` methods.
   * Removed a special-casing of `models.DateTimeField` in `core.serializers.base.Serializer.get_string_value` that's handled by `django.db.models.fields.DateTimeField.value_to_string`.
 * Removed `django.core.validators`:
   * Moved `ValidationError` exception to `django.core.exceptions`.
   * For the couple places that were using validators, brought over the necessary code to maintain the same functionality.
 * Introduced a SlugField form field for validation and to compliment the SlugField model field (refs #8040).
 * Removed an oldforms-style model creation hack (refs #2160).

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8616 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #7394: fixed bug with syncdb and createsuperuser introduced in [7590]. Thanks, av0000@mail.ru


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7598 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #5614: added 'manage.py createsuperuser'. Thanks, programmerq.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7590 bcc190cf-cafb-0310-a4f2-bffc1f526a37refs(incidents): Remove incident suspects commits

This code is no longer used, so we may as well remove. This removes all related code other than the
model. We modify the model to have no foreign keys, which allows us to safely remove the model, and
then the db table, in subsequent prs.

Migration SQL: Notice that it only removes the foreign key to incidents, since there was never a db
level constraint on commits to begin with.
```
BEGIN;
--
-- Alter field commit on incidentsuspectcommit
--
--
-- Alter field incident on incidentsuspectcommit
--
SET CONSTRAINTS "sentry_incid_incident_id_5c60addfbe11bb86_fk_sentry_incident_id" IMMEDIATE; ALTER TABLE "sentry_incidentsuspectcommit" DROP CONSTRAINT "sentry_incid_incident_id_5c60addfbe11bb86_fk_sentry_incident_id";
COMMIT;
```fix(releases) - Only update Commits if they've changed

- Right now if a release gets set_commits run multiple times with the
  same commits, we trigger many many updates. This way we'll only
  trigger one update.fix(releases) - Truncate emails longer than 75 chars

- Fixes SENTRY-E78fix(releases) - Only update author name when it changes (#16490)

* fix(releases) - Only update author name when it changes

- Switch from `create_or_update` to `get_or_create`, since
  `create_or_update` will run an update every time even if the data is
  the same.
- With these changes we should only update when the name has changed.meta(typo): Fix multiple typos (#15197)

* fix: Fix multiple typos

Fixes typos in comments, string literals, test names, etc.

* Revert intentional typo

Revert localhost -> lolcalhost

* Update src/sentry/db/models/query.py

Co-Authored-By: Alberto Leal <mail4alberto@gmail.com>
Co-Authored-By: Min ho Kimfeat(api): Recalculate incident suspects if related commits are changed (SEN-776)

We want to recalculate suspects for an incident if the commits for a release are changed.fix(release) Fix project release API removing commit messages when not provided (#12391)

When the project release API is used and existing commit references are
used, if the API request does not contain the commit message & timestamp
those properties would be replaced with incorrect data. Which should not
happen.feat(app-platform): Issue Resolved webhooks (#11574)

- Adds Sentry App webhooks for when an Issue is resolved
- Consolidates Sentry App task code into one file
- Consolidates Sentry App signal receiving into one filefix(releases) Fix incorrect transaction management (#11359)

I made a mistake in my previous change where I missed required
transaction.atomic() blocks. Currently when an integrity error is hit
the entire set_commits operation fails which is not great.

Fixes SENTRY-8Z1
Fixes SENTRY-8Z0fix(releases) Fix integrity errors in release creation (#11014)

I've found a few integrity errors coming out of release commit creation
steps. Using `create_or_update` should yield less error prone code as
integrity errors are handled and converted into updates.

I've removed a bit of redundant update logic for commits. Only updating
the commit message, author and date when the current values are none
goes against expectations that PUT endpoints normally have.

We don't need to update CommitFileChange records so we can catch any
IntegrityErrors that are raised.

Fixes SENTRY-8GT
Fixes SENTRY-8KJ

feat(releases) Collect timing information on release commit creation (#11038)

We have a few internal Issues that point to either our locks not being
long enough or something worse. Before moving forward with #11014
it would be good to confirm or rule out my hunch about locks expiring.metrics: Add group resolved, assigned, ignored metrics (#10988)
fix(integrations): Ensure status is synced from commit/pr resolutionfix(integrations): Use timestamp returned by gh when backfilling commits (#9808)
lint: Mass convert str.format to unicode.format (#9615)

Replaces: #6449fix: Fix latest commit (#8952)

Sort commits by `timestamp` not `date_added`, which isn't a valid attribute

This is a follow up to #8903 which introduced the incorrect changefix(commits): Fix latest_commit (#8903)

set_commit() sorts commits by reverse order and does not rely on commit list passed in in order

Fix for ISSUE-27fix(db): Add index on organization_id and merge_commit_sha in pr table (#8568)

 feat(integrations): Commits for GitHubApps (#8550)

* feat(integrations): Commits for GitHubApps

* feat(integrations): Support commits for GitHub App repos

* avoid try/except duplicationfeat(owners): Overhaul unreleased changes

- Add LatestRelease schema and begin begin filling it
- Move to dashboard behind 'organizations:unreleased-changes' feature
- Automatically create ReleaseHeadCommit rows when commit list is passed manuallyRevert "feat: Support Django 1.8"

This reverts commit 00f1c09f5e7900384cb075f1df1e6dd9c47bf6fb.feat: Support Django 1.8

This updates South to run on Django 1.8, and modifies the constraints of Sentry to allow the version.

Specific changes:

- Adapt South to support Django 1.6 through 1.8
- Adapted file upload API to detect default name behavior
- Remove default datetime values from migrations (they're static values and invalid)
- Merged migrate/syncdb behavior into unified command which understands how to apply schema
- Disable deferred fields (only/defer) on querysets
- Switch to values_list in most places (we should avoid using values)
- Remove any invalid uses of select_related
- Adapt Model.update to support used newer expression classes
- Make User.last_login nullable
- Prevent duplicate plugins in INSTALLED_APPSfeat(Releases): Create PullRequest Model (#6635)

* changerequest model & migration

* track activity, add new activity serializer, and write grouplink rows

* refactor commitlink into it's own file

* diplay grouplinks 

feat(workflow): Use GroupLink for commit resolution (#6504)

* use grouplink in resolutionuse lock in set_commits flow to prevent duplicate ReleaseCommits fixes SENTRY-3DA (#5702)
Merge pull request #5598 from getsentry/workflow/improve-commit-resolution

workflow: improve resolution by commit metadataMerge pull request #5590 from getsentry/workflow/improve-resolution

workflow: correct resolution behavior for "in release"make sure we use saved authors in materialized author list (#5575)
scope auth to webhooks and repos (#5480)

* scope auth to webhooks and repos

* update for file changes

* commit links

* feature flag instead of early adopter[releases] materialize various stats (#5510)

This adds various attributes to Release which will be used (in the future) to return more performant API responses.fix backfilling for existing commits with missing data, add test for backfilling (#5366)
make sure to skip commits in backfilling too (#5378)
mark groups as resolved when commits are associated with releases (#5125)

* mark groups as resolved when commits are associated with releases

* update changesadd organization release endpoints (#4775)

* wip - organization releases endpoint

* fix commits in org endpoint, add more tests

* add project permissions check to OrganizationReleases endpoint get

* update changes

* add project permissions checking to post requests

* add scenarios, create base view class

* add organization release details endpoint

* get rid of locks when creating releases since they're not needed anymore

* remove todos

* lint

* fix changes[downloader/rtmp] Fix downloading in verbose mode (closes #16736)[downloader/rtmp] Generalize download messages and report time elapsed on finish[downloader/rtmp] Gracefully handle live streams interrupted by userimprove coding style[refactor] Do not specify redundant None as second argument in dict.get()Merge pull request #7579 from ashutosh-mishra/typo_fix

Typo fix, found while going through the code.[downloader/rtmp] Respect --no-continue option

now when downloading a "rtmp-file" the --no-continue option works![downloader/rtmp] Fix a typo[downloader/rtmp] Fix arguments encoding and simplify retry logic (Closes #5528)Default to continuedl=True

We already do this in the CLI interface, so it should be just fine.[rmtp] Encode filename before invoking subprocess

This fixes #5066.
Reproducible with
LC_ALL=C youtube-dl "http://www.prosieben.de/tv/germanys-next-topmodel/video/playlist/ganze-folge-episode-2-das-casting-in-muenchen"Merge branch 'progress-as-hook2'Merge remote-tracking branch 'bastik/dev-dctp'[rtl2] PEP8, simplify, make rtmp tests run (#470)Merge remote-tracking branch 'David-Development/rtl2.py'[downloader] Lay groundwork for external downloaders.

This comes with a very simply implementation for wget; the real work is in setting up the infrastructure.Improve code styleMerge remote-tracking branch 'origin/master'rtmp and hls downloaders: Clarify error message when the external tools are not installed

Ask to install them, as we do in the postprocessor.
We get some reports with it, like #3061 or #3048.[naver] Add rtmp formats (fixes #3054)[rtmp] Add support for multiple AFM data entriesDo not resume live streams

No resuming or seeking in live streams is possible (c) man rtmpdumpUse unicode literalsReport no connect as errorHandle rtmpdump's no connection return valueRemove superfluous whitespaceUse meaningful return value constants for rtmpdump[bbc.co.uk] Add support for bbc.co.uk radio programmes (Closes #2184)[niconico] Improve uploader metadata extraction robustness (closes #14135)
[niconico] Support videos with multiple formats (closes #13522)[niconico] Support HTML5-only videos (closes #13806)[niconico] improve error reporting (#13696)[niconico] Allow login via cookies

Some codes are borrowed from #7968, which is by @jlhg

Closes #7968[niconico] Remove codes for downloading anonymously

Apparently Niconico now blocks playing without an account

Closes #11170[compat] Add compat_urllib_parse_urlencode and eliminate encode_dict

encode_dict functionality has been improved and moved directly into compat_urllib_parse_urlencode
All occurrences of compat_urllib_parse.urlencode throughout the codebase have been replaced by compat_urllib_parse_urlencode

Closes #8974Switch codebase to use sanitized_Request instead of
compat_urllib_request.Request

[downloader/dash] Use sanitized_Request

[downloader/http] Use sanitized_Request

[atresplayer] Use sanitized_Request

[bambuser] Use sanitized_Request

[bliptv] Use sanitized_Request

[brightcove] Use sanitized_Request

[cbs] Use sanitized_Request

[ceskatelevize] Use sanitized_Request

[collegerama] Use sanitized_Request

[extractor/common] Use sanitized_Request

[crunchyroll] Use sanitized_Request

[dailymotion] Use sanitized_Request

[dcn] Use sanitized_Request

[dramafever] Use sanitized_Request

[dumpert] Use sanitized_Request

[eitb] Use sanitized_Request

[escapist] Use sanitized_Request

[everyonesmixtape] Use sanitized_Request

[extremetube] Use sanitized_Request

[facebook] Use sanitized_Request

[fc2] Use sanitized_Request

[flickr] Use sanitized_Request

[4tube] Use sanitized_Request

[gdcvault] Use sanitized_Request

[extractor/generic] Use sanitized_Request

[hearthisat] Use sanitized_Request

[hotnewhiphop] Use sanitized_Request

[hypem] Use sanitized_Request

[iprima] Use sanitized_Request

[ivi] Use sanitized_Request

[keezmovies] Use sanitized_Request

[letv] Use sanitized_Request

[lynda] Use sanitized_Request

[metacafe] Use sanitized_Request

[minhateca] Use sanitized_Request

[miomio] Use sanitized_Request

[meovideo] Use sanitized_Request

[mofosex] Use sanitized_Request

[moniker] Use sanitized_Request

[mooshare] Use sanitized_Request

[movieclips] Use sanitized_Request

[mtv] Use sanitized_Request

[myvideo] Use sanitized_Request

[neteasemusic] Use sanitized_Request

[nfb] Use sanitized_Request

[niconico] Use sanitized_Request

[noco] Use sanitized_Request

[nosvideo] Use sanitized_Request

[novamov] Use sanitized_Request

[nowness] Use sanitized_Request

[nuvid] Use sanitized_Request

[played] Use sanitized_Request

[pluralsight] Use sanitized_Request

[pornhub] Use sanitized_Request

[pornotube] Use sanitized_Request

[primesharetv] Use sanitized_Request

[promptfile] Use sanitized_Request

[qqmusic] Use sanitized_Request

[rtve] Use sanitized_Request

[safari] Use sanitized_Request

[sandia] Use sanitized_Request

[shared] Use sanitized_Request

[sharesix] Use sanitized_Request

[sina] Use sanitized_Request

[smotri] Use sanitized_Request

[sohu] Use sanitized_Request

[spankwire] Use sanitized_Request

[sportdeutschland] Use sanitized_Request

[streamcloud] Use sanitized_Request

[streamcz] Use sanitized_Request

[tapely] Use sanitized_Request

[tube8] Use sanitized_Request

[tubitv] Use sanitized_Request

[twitch] Use sanitized_Request

[twitter] Use sanitized_Request

[udemy] Use sanitized_Request

[vbox7] Use sanitized_Request

[veoh] Use sanitized_Request

[vessel] Use sanitized_Request

[vevo] Use sanitized_Request

[viddler] Use sanitized_Request

[videomega] Use sanitized_Request

[viewvster] Use sanitized_Request

[viki] Use sanitized_Request

[vk] Use sanitized_Request

[vodlocker] Use sanitized_Request

[voicerepublic] Use sanitized_Request

[wistia] Use sanitized_Request

[xfileshare] Use sanitized_Request

[xtube] Use sanitized_Request

[xvideos] Use sanitized_Request

[yandexmusic] Use sanitized_Request

[youku] Use sanitized_Request

[youporn] Use sanitized_Request

[youtube] Use sanitized_Request

[patreon] Use sanitized_Request

[extractor/common] Remove unused import

[nfb] PEP 8[niconico] Simplify format infoMerge pull request #5975 from chaoskagami/niconico_qualitynote

Quality note for niconico[niconico] Fix so* video extraction (fixes #4874) (#2087)[niconico] Try to extract all optional fields from various sources[niconico] Remove credentials from tests and enhance title extraction

All test videos can be downloaded without username and password now.[niconico] Fix extraction and update tests (closes #5511)Merge branch 'ndac-todoroki-niconico_nm'[niconico] Use '_match_id'[niconico] Catch deleted videos (closes #4064)[niconico] Fix ignored --netrc flag

See issue #3753Merge pull request #3180 from hakatashi/niconico-without-authentication

[niconico] Download without authenticationMerge branch 'hakatashi-niconico-channel-video'[niconico] ModernizeUse the new '_download_xml' helper in more extractors[niconico] Clarify download[niconico] Simplify and make work with old Python versions

The website requires SSLv3, otherwise it just times out during SSL negotiation.Merge remote-tracking branch 'takuya0301/niconico'[swfinterp] Add more builtins and improve static variables[swfinterp] Add support for more complicated constants[swfinterp] Basic support for constants (only ints for now)[swfinterp] Intepret more multinames[swfinterp] Allow function patchingMerge remote-tracking branch 'upstream/master' into MLB

Conflicts:
	youtube_dl/extractor/mlb.py[puhutv] Remove no longer available HTTP formats (closes #25124)[puhutv] improve extraction

- fix subtitles extraction
- transform HLS URLs to http URLs
- improve metadata extraction[puhutv] Improve extraction (closes #16269)[puhutv] Add extractor (closes #16010)CLN - Change string formatting in plotting (#29781)
ENH: When using another plotting backend, minimize pre-processing (#28647)
ENH: Allow plotting backend to be an option (#28622)

* Allow backend to be an optionCLN: assorted cleanups, mostly post-black fixups (#28857)
CLN: catch Exception less (#28309)
STYLE: Apply black formattingPLT: Cleaner plotting backend API, and unify Series and DataFrame accessors (#27009)
[kaltura] Check source format URL (#21290)[kaltura] Ignore Widevine encrypted video (.wvm)

There is currently no public method to decrypt this, and there may be
other streams available that can be downloaded.

Example URL, has `.wvm` and `.mp4` formats:
https://www.voot.com/shows/bigg-boss-s11/11/538936/bigg-boss-extra-dose-arshi-s-quirky-demand/541700[kaltura] Fix typo in subtitles extraction (closes #13569)[kaltura] improve embed partner id extraction(fixes #12041)[kaltura] Add fallback for fileExt[kaltura] Improve uploader_id extraction[kaltura] Improve widget ID extraction (closes #11480)[kaltura] Improve audio detection[kaltura] Skip chun format[kaltura] Fallback ext calculation on caption's format[kaltura] Assume ttml to be default subtitles' extension[kaltura] Add subtitles support when entry_id is unknown beforehand (Closes #10279)[kaltura] remove debugging line[kaltura] extract subtitles and reduce requests[kaltura] fix extraction error for videos from multiple kaltura servers[kaltura] add support videos stored on custom kaltura servers(closes #5557)[kaltura] Respect kaltura session[kaltura] optimize url info extractionMerge pull request #8827 from remitamine/safari

[safari] extract free and preview videos(#7491)Simplify formats accumulation for f4m/m3u8/smil formats

Now all _extract_*_formats routines return a listMerge pull request #7851 from remitamine/kaltura

[kaltura] extract more formats[kaltura] Clean description[kaltura] Improve[kaltura] Add support for referrer protected videos (#7409)[kaltura] Strictify _VALID_URL[kaltura] add html5 player urls[download/external] pass rtmp_conn to ffmpeg[downloader/external] Pass -loglevel to ffmpeg downloader (closes #13183)[downloader/external] Add missing import and PEP8[external:ffmpeg] In test harness, limit to 10k download size

Otherwise, if you screw up a playlist test by including a playlist
dictionary key, you'll be there for eons while it downloads all the
files before erroring out.[external:ffmpeg] do not assume that ffmpeg unknown version format is new[turner] fix downloading of secure hls formats using ffmpeg(closes #11358)(closes #11373)(closes #11800)[downloader/external:ffmpeg] minimize the use of aac_adtstoasc filter[downloader/external] Recommend --hls-prefer-native for SOCKS users

Related: #10490[downloader/external] Clarify that ffmpeg doesn't support SOCKS

Ref: #10304[downloader/external] Add another env for proxies in ffmpeg/avconv

Related sources:
https://git.libav.org/?p=libav.git;a=blob;f=libavformat/http.c;h=8fe8d11e1edfdbb04a8726db2c49cfef3f572aac;hb=HEAD#l152
https://git.libav.org/?p=libav.git;a=blob;f=libavformat/tls.c;h=fab243e93e20034e88e619188c13a44a5d8ccdb9;hb=HEAD#l63
https://github.com/FFmpeg/FFmpeg/blob/f8e89d8/libavformat/http.c#L191
https://github.com/FFmpeg/FFmpeg/blob/f8e89d8/libavformat/tls.c#L92[downloader/external] Call ffmpeg with with HTTP_PROXY env variable set (#9437)[downloader/external] Add temp fix ffmpeg m3u8 downloads (Closes #9394)Merge pull request #9195 from remitamine/ffmpeg-pipe

[downloader/external] enable piping for FFmpegFD(closes #2124)[external/downloader] fix rtmp downloading using FFmpegFDMerge pull request #8611 from remitamine/ffmpegfd

[downloader/external] Add FFmpegFDMerge pull request #3627 from pypa/update-pip

Update pip to version 19.0.3restore sanitypatched directory

Signed-off-by: Kenneth Reitz <me@kennethreitz.org>getting desperate here

Signed-off-by: Kenneth Reitz <me@kennethreitz.org>[downloader/http] Request last data block of exact remaining size

Always request last data block of exact size remaining to download if possible not the current block size.[downloader/http] Finish downloading once received data length matches expected

Always do this if possible, i.e. if Content-Length or expected length is known, not only in test.
This will save unnecessary last extra loop trying to read 0 bytes.[downloader/http] Fix resume when writing ot stdout (closes #16699)[downloader/http] Randomize HTTP chunk sizeIntroduce --http-chunk-size[http] Rework HTTP downloader
* Simplify code and split into separate routines to facilitate maintaining
* Make retry mechanism work on errors during actual download not only during connection establishment phase
* Retry on ECONNRESET and ETIMEDOUT during reading data from network
* Retry on content too short and various timeout errors
* Show error description on retry
* Closes #506, closes #809, closes #2849, closes #4240, closes #6023, closes #8625, closes #9483Fixed #31661 -- Removed period in makemigrations history check warning.Fixed #31504 -- Allowed calling makemigrations without an active database connection.Fixed #30031 -- Added --no-header option to makemigrations/squashmigrations.
Fixed #29831 -- Added validation for makemigrations --name.Refs #29469 -- Reused get_app_config() error message in makemigrations error.Fixed #29469 -- Added a helpful makemigrations error if app_label contains dots.
Fixed #28860 -- Removed unnecessary len() calls.Refs #23919 -- Removed most of remaining six usage

Thanks Tim Graham for the review.Refs #25604 -- Removed makemigrations --exit option per deprecation timeline.Fixed #27461 -- Fixed incorrect allow_migrate() arguments in makemigrations.
Fixed #27200 -- Provided makemigration's allow_migrate() with model_name.Fixed #27142, #27110 -- Made makemigrations consistency checks respect database routers.

Partially reverted refs #27054 except for one of the tests as this
solution supersedes that one.

Thanks Shai Berger for the review.Fixed #26930 -- Prevented makemigrations from accessing an empty database.

Thanks Liz Lemon for the report and investigation and
Claude Paroz for the test.Fixed #25604 -- Added makemigrations --check option.

Command exits with non-zero status if changes without migrations exist.Fixed #23407 -- Extended coverage of makemigrations --noinput option.

Changed --noinput option in makemigrations to suppress all user prompts,
not just when combined with --merge.Fixed #23968 -- Replaced list comprehension with generators and dict comprehensionFixed #23728 -- Added the --exit option to makemigrations.

If no changes that need migrations are found, `makemigrations --exit`
exits with error code 1.Fixed #23302 -- Added --name/-n option to makemigrations commandFixed #22791 -- Invoke interactive questioner only for conflicts in specified apps.

Thanks bendavis78 for the report and Tim Graham for the review.Fixed #22848: Ignore no-migrations errors during makemigrations onlyFixed #22777: Add dependency on through for autodetected M2M addsFixed #22676 -- makemigrations --dry-run should not ask for defaults

Made the fix in InteractiveMigrationQuestioner class code, rather than
MigrationAutodetector, because --dry-run shouldn't affect whether
MigrationAutodetector will detect non-nullable fields, but the
questioner should skip the question and returns a None for default
(since that won't be used anyway) if --dry-run is used.Fixed #22576: Ensure makemigrations doesn't touch the database.Cleanup failing test w/contenttypes and remove useless graph loadFix bad conflict detection during makemigrationsAdd --empty option to makemigrationsFixed #21968: Bad detection of old-style apps to add initial migrationDeprecated get_app().Fix poor variable name (flake8 warning)Add --dry-run option to makemigrationsFixed #21280 -- Don't generate empty migration filesFixed #20977 -- Fixed writing migrations to disk on Python 3[test_download] Fix download tests for lazy extractors (closes #13554, closes #13757)
[test_download] Fix order when testing file's md5[test_download] Fix testing playlists with single video and add comments[test_download] Match info dicts against tests before matching info file[test_download] typo in comment[test_download] Improve diagnostic on wrong 'id'[travis] Run tests in parallel

[test_download] Print test names in case of network errors

[test_download] Add comments for nose parameters

[test_download] Modify outtmpl to prevent info JSON filename conflicts

Thanks @jaimeMF for the idea.

[travis] Only download tests should be run in parallel[test/test_download] Use extract_flat = 'in_playlist' for playlist items

Some playlist extractors return a 'url' result, which wouldn't be resolved.Merge pull request #6428 from dstftw/improve-generic-smil-support

Improve generic SMIL support[tests] Allow multi_video to be tested as playlists[test_download] Remove references to "file" in test definitionsexpect_info_dict actual-expected argument consistency[tests] Remove useless u prefixes[tests] Don't auto init YoutubeDL

It would print the debug headers for each test.
And nose uses a StringIO object for stdout, which in python 2.x doesn't have the 'encoding' attribute.[test_download] Improve error message[generic] Add a test case for direct links with broken HEAD (#4032)[vimeo:likes] Add new extractor (Fixes #3835)[test_download] Check expected file minsize and md5 only when download is not skipped[test_download] Expect a minimum file size

This should detect when we're downloading a small text file by accident.Move playlist tests to extractors.

From now on, test_download will run these tests. That means we benefit not only from the networking setup in there, but also from the other tests (for example test_all_urls to find problems with _VALID_URLs).[test_download] Improve playlist handling[generic] Fix rss under Python 2.x and move test to extractor[googlesearch] Move test to extractorAllow playlist test definitions in test_download.

This moves playlist tests where they belong, i.e. to the extractors themselves.
Additionally, all our network interaction configuration for tests in test_download now applies to playlist tests as well.[instagram] Add support for user profiles (Fixes #2606)[test] Move expect_info_dict out of test_downloadMake missing test definition fields an error

If the result is not testable (for example, because a description changes often), either pass in a type or a regular expression (a string starting with 're:')[test_download] Move assertions before debugging output[ninegag] Fix extraction[tests] Raise an exception if test definition is invalid (Found in #2460)[trutube] Support multiple formats (#2433)[test_download] Skip over BadStatusLine errors

An error like https://travis-ci.org/rg3/youtube-dl/jobs/18317799#L449 is almost certainly the server's fault.[everyonesmixtape] Add support (Fixes #2161)Adapt test to changed .info.json nametests: don't run the test if any of the extractors listed in the 'add_ie' field is marked as not workingSet the 'extractor_key' field in the info_dict

It's the string returned by the class method 'ie_key', which allows to retrieve the extractor with 'get_info_extractor'Add the 'webpage_url' field to info_dict

The url for the video page, it must allow to reproduce the result.
It's automatically set by YoutubeDL if it's missing.Merge remote-tracking branch 'origin/master'[tests] don't fail on network errors

This is suboptimal, but at least this way we will need to look at the logs
only to check for network errors that happen too often, instead of
parsing a ton of lines each time to see if there is some true test failingtests: build the filename from the info_dict if the 'file' key is missing

It will need to have the 'id' and 'ext' keys to work.Simplify tests

* Make them directly executable again
* Move common stuff (md5, parameters) to helper
* Never import *
* General clean upMove try_rm to test helpersAlso print the field that fails if it is a md5 checksumPrint which IE is being skipped in test_downloadAdd function add_default_info_extractors to YoutubeDL

It adds to the list the ies returned by ge_extractorsCorrect module nameRemove mentions of old InfoExtractors moduleImprove error reporting for downloadsImprovge error reportingMerge branch 'search_regex' - PR #872 - closes #847Remove a commented line I forgot.

[ci skip]Create a function in InfoExtractors that returns the InfoExtractor class with the given nameretry on UnavailableVideoErrorimport all IEs when testing to resemble more closely the real envMerge pull request #736 from rg3/retry

Exception stacking and test retrySwitch ComedyCentral test to a permanent URL (They delete full episodes older than a month)Drop md5: spec for now (unused and breaks int values)Download progress hooksRemove .part files before and after testsadd test for infoqSimplify test parameter initializationAdapt test_download to support playlists, and remove race conditionsRevert "In tests.json file and md5 join in a 'files' list to handle multiple-file IEs"

This made the JSON structure really unreadable and was a quick fix.

This reverts commit 6535e9511fc18eee2fc640c77fd42a4a39791915.In tests.json file and md5 join in a 'files' list to handle multiple-file IEsMerge branch 'master' of github.com:rg3/youtube-dlstreamlined and simplified dynamic tests generation; readded a couple of test featuresMerge remote-tracking branch 'gcmalloc/master' into fork_master[pbs] Fix extraction (closes #17109)[pbs] Improve extraction (closes #16623, closes #16684)[pbs] fix embed data extraction(fixes #16474)[pbs] extract chapters informationDon't list master m3u8 playlists in format list (closes #12832)Improve geo bypass mechanism
* Rename options to preffixly match with --geo-verification-proxy
* Introduce _GEO_COUNTRIES for extractors
* Implement faking IP right away for sites with known geo restriction[pbs] Improve geo restriction detection and use geo bypass mechanism[pbs] fix extraction for geo restricted videos(#7095)[pbs] Clarify comment on http formats[pbs] Fix description extraction and update tests[pbs] add test for videos with undocumented http formats and remove unused import[pbs] check all http formats and remove unnecessary request

- some of the quality that not reported in the documentation
are available(4500k, 6500k)
- the videoInfo request doesn't work for a long time[pbs] Check manually constructed http links (Closes #9921)[pbs] extract srt and vtt subtitles[pbs] remove duplicate format[pbs] extract only the formats that we know that they will be available as http format

https://projects.pbs.org/confluence/display/coveapi/COVE+Video+Specifications[pbs] fix the least bitrate http url construction[pbs] extract all http formats[pbs] Extract all formats (Closes #8538)[pbs] Improve description extraction[pbs] Revert prefer portalplayer[pbs] Switch to portal player by default (Closes #8491)[pbs] Update API URL (Closes #7565)[pbs] Carry long lineMerge pull request #7105 from remitamine/pbs

[pbs] detect errors from http error code[pbs] No need to escape colon[pbs] Clean up title construction rationaleMerge pull request #6292 from atomicdryad/pr-fix_pbs_titles

pbs: fix vague 'Full Episode' titles; prepend name of show[pbs] Add support for subtitles (Closes #6184)[pbs] Add `format_id` for direct links[pbs] Add support for HD (Closes #3564, closes #5390)[pbs] Catch geoblocking errors (closes #4516)[pbs] Add support for tabbed frontline videos (Closes #4006)[pbs] Add support for series/jwplayer type video (Fixes #3849)[pbs] Add support for frontline videos (Closes #3414 #3405)[pbs] Add support for video ratings[pbs] Add support for article pages (Fixes #870)Add an extractor for PBS (closes #870 and #873)Fix idlelib.help comments (GH-15669)
bpo-38022: IDLE: upgrade help.html to sphinx 2.x HTML5 output (GH-15664)

The HTML5 output from Sphinx 2.x adds  '<p>' tags within list elements.  Using a new prevtag attribute, ignore these instead of emitting unwanted '\n\n'.

Also stop looking for 'first' classes on tags (no longer present) and fix the bug of double-spacing instead of single spacing after <pre> blocks.merge headsMerge with 3.5Issue #16893: Add idlelib.help.copy_strip() to copy-rstrip Doc/.../idle.html.
Change destination to help.html.  Adjust NEWS entries.Merge with 3.5Merge pull request #1962 from techalchemy/feature/requirements-refactor

Requirements Refactor (ready to merge, after conflict resolution)Merge pull request #2255 from pypa/drop-pip9

Drop pip9/Vendor and patch pip 10Refs #31051 -- Made dumpdata do not sort dependencies if natural foreign keys are not used.

There is no need to sort dependencies when natural foreign keys are not
used.Fixed #31051 -- Allowed dumpdata to handle circular references in natural keys.

Since #26291 forward references in natural keys are properly handled by
loaddata, so sorting depenencies in dumpdata doesn't need to break on
cycles. This patch allows circular references in natural keys by
breaking sort_depenencies() on loops.Fixed typos in docs, comments, and exception messages.Fixed #30159 -- Removed unneeded use of OrderedDict.

Dicts preserve order since Python 3.6.Removed unnecessary parens in various code.
Used OrderedDict.fromkeys() to initialize OrderedDict with None values.
Refs #23919 -- Used yield from.
Fixed #26826 -- Stripped spaces from dumpdata pks arguments

Thanks Kevin Graham Foster for the report and Tim Graham for the review.Fixed #20468 -- Added loaddata --exclude option.

Thanks Alex Morozov for the initial patch.Refs #26144 -- Used proxy_for_model instead of mro inspection.Fixed #26144 -- Warned when dumping proxy model without concrete parent.Fixed #22258 -- Added progress status for dumpdata when outputting to file

Thanks Gwildor Sok for the report and Tim Graham for the review.Fixed #24776 -- Improved apps.get_app_config() error message on fully-qualified package names.Fixed #24351, #24346 -- Changed the signature of allow_migrate().

The new signature enables better support for routing RunPython and
RunSQL operations, especially w.r.t. reusable and third-party apps.

This commit also takes advantage of the deprecation cycle for the old
signature to remove the backward incompatibility introduced in #22583;
RunPython and RunSQL won't call allow_migrate() when when the router
has the old signature.

Thanks Aymeric Augustin and Tim Graham for helping shape up the patch.

Refs 22583.Removed dumpdata --natural option and serializers use_natural_keys parameter.

Per deprecation timeline; refs #13252.Fixed #23660 -- Moved sort_dependencies to core.Fixed a few ResourceWarning in the test suite. Refs #22680.Merge pull request #2465 from coder9042/ticket_22258

Fixed #22257 -- Added file output option to dumpdata command.Fixed #21188 -- Introduced subclasses for to-be-removed-in-django-XX warnings

Thanks Anssi Kääriäinen for the idea and Simon Charette for the
review.Fixed #22025 -- Listing app followed by app.Model in dumpdata command

When invoked as follows:

  $ python manage.py dumpdata blogapp blogapp.Tag

Django would throw a TypeError. This commit fixes the problem and provides
a test.Took advantage of the new get_model API. Refs #21702.Removed the only_with_models_module argument of get_model[s].

Now that the refactorings are complete, it isn't particularly useful any
more, nor very well named. Let's keep the API as simple as possible.

Fixed #21689.Changed get_model to raise an exception on errors.

Returning None on errors required unpythonic error checking and was
inconsistent with get_app_config.

get_model was a private API until the previous commit, but given that it
was certainly used in third party software, the change is explained in
the release notes.

Applied the same change to get_registered_model, which is a new private
API introduced during the recent refactoring.Refactored dumpdata with app configs instead of models modules.Moved apps back in the toplevel django namespace.

Reverted 4a56a93cc458e9ab4dcab95d9f5067d4975dd1a2.Moved the new app cache inside core.Made it possible to create apps without a models module.

This commit reverts f44c4a5d0f and 39bbd165.

django.test.simple will be updated in a separate commit as it requires
invasive changes.Deprecated get_apps().Fixed #13252 -- Added ability to serialize with natural primary keys.

Added ``--natural-foreign`` and ``--natural-primary`` options and
deprecated the ``--natural`` option to the ``dumpdata`` management
command.

Added ``use_natural_foreign_keys`` and ``use_natural_primary_keys``
arguments and deprecated the ``use_natural_keys`` argument to
``django.core.serializers.Serializer.serialize()``.

Thanks SmileyChris for the suggestion.Merge pull request #1582 from rca/12756-missing-yaml-module-serializer-error-message

Fixed #12756: Improved error message when yaml module is missing.Deprecated SortedDict (replaced with collections.OrderedDict)

Thanks Loic Bistuer for the review.Fixed #20509 - Proper parsing for dumpdata --pks option.

Thanks weipin for the report and Baptiste Mispelon for the patch.Fixed #16330 -- added --pks option in dumpdata command

Thanks to guettli for the initial ticket and patch, with additional work
from mehmetakyuz and Kevin Brolly.Fixed #5423 -- Made dumpdata output one row at a time.

This should prevent storing all rows in memory when big sets of
data are dumped.
See ticket for heroic contributors.Fixed #18013 -- Use the new 'as' syntax for exceptions.

Thanks Clueless for the initial patch.
Note that unittest has been purposely left out (external package only used by Python 2.6).Fixed #13760 -- Cleaned up unnecessary default option handling in a bunch of management commands. Thanks to Paul McMillan for the report and to adamv and Claude Paroz for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17028 bcc190cf-cafb-0310-a4f2-bffc1f526a37Kill some more dead code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16795 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #14162 - Dumpdata needs an option to use the base manager instead of the default manager

Thanks to PaulM for suggestion and patch.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@13669 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #12775 -- Modified the --exclude argument to dumpdata to allow exclusion of individual models. Thanks to emulbreh for the suggestion, and Joshua Ginsberg for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13511 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #13308 -- Ensured that dumpdata correctly interacts with router allow_syncdb directions. Thanks to Francis (wizard_2) for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12940 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #1142 -- Added multiple database support.

This monster of a patch is the result of Alex Gaynor's 2009 Google Summer of Code project.
Congratulations to Alex for a job well done.

Big thanks also go to:
 * Justin Bronn for keeping GIS in line with the changes,
 * Karen Tracey and Jani Tiainen for their help testing Oracle support
 * Brett Hoerner, Jon Loyens, and Craig Kimmerer for their feedback.
 * Malcolm Treddinick for his guidance during the GSoC submission process.
 * Simon Willison for driving the original design process
 * Cal Henderson for complaining about ponies he wanted.

... and everyone else too numerous to mention that helped to bring this feature into fruition.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11952 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #7052 -- Added support for natural keys in serialization.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11863 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #11428 -- Ensured that SQL generating commands and dumpdata don't include proxy models in their output. Thanks to Anssi Kaariainen for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11343 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #11286 -- Ensured that dumpdata uses the default manager, rather than always using the manager called `objects`. Thanks to Marc Remolt for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10967 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #10381 -- Fixed some a machine-dependent test failure after r9921.

The patch is from Russell, but I'm applying it because I want my tests to pass
again (and he doesn't see the failure).

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9964 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #5610 -- Added the ability for dumpdata to take individual model names, as well as entire applications. Thanks to David Reynolds for his work on this patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9921 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #7436 -- Corrected a fix from [7615] that broke some test cases. Don't you just love unintended consequences? Thanks to telenieko for the report, and the buildbot for pointing out my mistake.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7629 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #7254 -- Added an '--exclude' option to dumpdata, allowing specific applications to be removed from the dump output. Thanks to Carl Karsten for the idea and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7615 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed [6932] so that "django-admin.py help dumpdata" works again.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6937 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #4431 -- Added a --traceback option for dumpdata and loaddata (which
shows how it can be used for other commands as well). Thanks, dakrauth.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6936 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #6155 -- Fixed dumpdata to work with the default model manager (necessary
for the rare cases when the 'objects' manager might not even exist). Based on
a  patch from Michael Trier.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6932 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #6110 -- Mark the python format serializer as for internal use only.  Thanks, empty.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6922 bcc190cf-cafb-0310-a4f2-bffc1f526a37Major refactoring of django.core.management -- it's now a package rather than a 1730-line single module. All django-admin/manage.py commands are now stored in separate modules. This is backwards-incompatible for people who used django.core.management functions directly

git-svn-id: http://code.djangoproject.com/svn/django/trunk@5898 bcc190cf-cafb-0310-a4f2-bffc1f526a37[itv] Make SOAP request non fatal and extract metadata from a webpage (closes #16780)[itv] Improve extraction (closes #16253)[itv] Improve extraction, extract more subtitles and duration (closes #14944)[itv] update hls formats extraction[itv] Fix production id extraction (closes #13671)[itv] Extract series metadata[itv] Fix rtmp formats (#12759)[itv] Use native hls[itv] Lower preference for rtmp formats (closes #12759)[itv] Improve geo restriction detection and use geo bypass mechanism[itv] fix extraction in python 2.6[itv] fix subtitle extraction[itv] extract subtitles[itv] Add new extractor(closes #9240)Refs #8936 -- Added ModelAdmin.has_view_or_change_permission().
Refs #29419, #8936 -- Removed change permission requirement for admin actions.

Partially reverted 825f0beda804e48e9197fcf3b0d909f9f548aa47.Fixed #28462 -- Decreased memory usage with ModelAdmin.list_editable.

Regression in 917cc288a38f3c114a5440f0749b7e5e1086eb36.Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>Fixed #28909 -- Simplified code using tuple/list/set/dict unpacking.
Fixed #28496 -- Added ModelAdmin.get_changelist_instance().Fixed #28249 -- Removed unnecessary dict.keys() calls.

iter(dict) is equivalent to iter(dict.keys()).Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.Refs #27795 -- Removed unneeded force_text calls

Thanks Tim Graham for the review.Converted usage of ugettext* functions to their gettext* aliases

Thanks Tim Graham for the review.Used model_ngettext in two more placesFixed #26543 -- Prevented "confirm form submission" browser prompt when reloading after an admin actions failure.Fixed #26919 -- Added the action form's media in the changelist view.Fixed #11313 -- Made ModelAdmin.list_editable more resilient to concurrent edits.

Allowed admin POSTed bulk-edit data to use modeladmin.get_queryset()
so that the ids in the POST data have a chance to match up even if
the objects on the current page changed based on the ordering.Fixed #24417 -- Added ModelAdmin.get_list_select_related()Fixed #22295 -- Replaced permission check for displaying admin user-toolsDeprecated current_app in TemplateResponse and render(_to_response).Used application verbose names in the admin.Fixed E124 pep8 warnings.Fixed #20836 -- Ensure that the ForeignKey's to_field attribute is properly considered by the admin's interface when creating related objects.
Many thanks to Collin Anderson for the report and patch and to Peter Sheats for the test.Added AdminSite attributes for easily changing admin title.
AdminSite now has overridable site_header, site_title and index_title attributes. Changed
each admin view to pass these to the context (in a new AdminSite.each_context() method).
The intent here is to make it easier to override these things in the common case, instead of
having to override a template, which is a bigger burden.Added ModelAdmin.get_search_fields.Fixed #20642 -- Deprecated `Option.get_(add|change|delete)_permission`.

Those methods were only used by `contrib.admin` internally and exclusively
related to `contrib.auth`. Since they were undocumented but used
in the wild the raised deprecation warning point to an also undocumented
alternative that lives in `contrib.auth`.

Also did some PEP8 and other cleanups in the affected modules.Merge pull request #1281 from loic/ticket6903

Fixed #6903 - Preserved admin changelist filters.Merge pull request #938 from darklow/ticket_20111

Added more precise message level for succcess and warning messagesFixed #15363 -- Renamed and normalized to `get_queryset` the methods that return a QuerySet.Fixed #19689 -- Renamed `Model._meta.module_name` to `model_name`.Fixed #17646 -- Added a get_list_filter() method to ModelAdmin. Thanks to rasca for the suggestion and to mateusgondim for the patch.[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.Fixed #16257 -- Added new `ModelAdmin.get_list_display_links()` method to allow for the dynamic display of links on the admin changelist. Thanks to graveyboat for the suggestion and initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17037 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #17090 -- Made the API specification for `ModelAdmin.get_list_display()` more consistent with that of `ModelAdmin.list_display` by separating out the admin action check boxes business. This is backwards-incompatible for those who have been using the still-unreleased `get_list_display()` method. Thanks to Ramiro Morales for the review.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17035 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #15997 -- Added `list_max_show_all` option to `ModelAdmin` in replacement for a global module level variable. Thanks, jsdalton.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16725 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #16604 -- Use new save_related hook when saving objects on the changelist, too. Thanks, pdeglopper.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16599 bcc190cf-cafb-0310-a4f2-bffc1f526a37Removed deprecated admin contrib app AdminSite root_path attribute. Refs #15294, r11250, r16136.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16575 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #14206 - dynamic list_display support in admin

Thanks to gabejackson for the suggestion, and to cyrus for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16340 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #5833 -- Modified the admin list filters to be easier to customize. Many thanks to Honza Král, Tom X. Tobin, gerdemb, eandre, sciyoshi, bendavis78 and Julien Phalip for working on this.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16144 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #15008 -- Replaced all calls in the admin to render_to_response with TemplateResponses for easier customization. Thanks to Chris Adams for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16087 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #11700 -- Stopped admin actions and list_editable fields to show up in popups. Thanks to Simon Meers for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15129 bcc190cf-cafb-0310-a4f2-bffc1f526a37Rectified bugs that were accidentally committed in r14997. Thanks for the heads-up, Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15011 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #14900 -- Added ability to override the paginator class used in a ModelAdmin. Thanks, Adam Vandenberg.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14997 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #13166 - Added JavaScript warnings to admin changelist to help against ambiguity between action and list_editable form submission. Thanks to blinkylights and aaugustin for the report and initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13072 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #12903 - Made translating the admin action selection text easier. Thanks to Ramiro Morales for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12968 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #12962: Made admin delete action work again. Thanks ptone, skevy, mlavin and anyone else I've missed.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@12813 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #12903 - Added plural forms to a few strings in the admin actions template.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12626 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #10615 - Added selection counter to admin change list. Thanks to Martin Mahner for the idea and initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12107 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #9749 - Added hook to ModelAdmin for specifying custom ChangeLists. Thanks to David Larlet and Eric Florenzano.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11910 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #10061 -- Added namespacing for named URLs - most importantly, for the admin site, where the absence of this facility was causing problems. Thanks to the many people who contributed to and helped review this patch.

This change is backwards incompatible for anyone that is using the named URLs
introduced in [9739]. Any usage of the old admin_XXX names need to be modified
to use the new namespaced format; in many cases this will be as simple as a
search & replace for "admin_" -> "admin:". See the docs for more details on
the new URL names, and the namespace resolution strategy.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11250 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #10897 -- Modified use of ngettext to ungettext in admin change messages. Thanks to zuber for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10677 bcc190cf-cafb-0310-a4f2-bffc1f526a37Made a bunch of improvements to admin actions. Be warned: this includes one minor but BACKWARDS-INCOMPATIBLE change.

These changes are:

    * BACKWARDS-INCOMPATIBLE CHANGE: action functions and action methods now share the same signature: `(modeladmin, request, queryset)`. Actions defined as methods stay the same, but if you've defined an action as a standalone function you'll now need to add that first `modeladmin` argument.
    * The delete selected action is now a standalone function registered site-wide; this makes disabling it easy.
    * Fixed #10596: there are now official, documented `AdminSite` APIs for dealing with actions, including a method to disable global actions. You can still re-enable globally-disabled actions on a case-by-case basis.
    * Fixed #10595: you can now disable actions for a particular `ModelAdmin` by setting `actions` to `None`.
    * Fixed #10734: actions are now sorted (by name).
    * Fixed #10618: the action is now taken from the form whose "submit" button you clicked, not arbitrarily the last form on the page.
    * All of the above is documented and tested.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10408 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #10600 -- Allow for format marker reordering in a translatable string.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10141 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #10505: added support for bulk admin actions, including a globally-available "delete selected" action. See the documentation for details.

This work started life as Brian Beck's "django-batchadmin." It was rewritten for inclusion in Django by Alex Gaynor, Jannis Leidel (jezdez), and Martin Mahner (bartTC). Thanks, guys!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10121 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #10533 -- Worked around an apparent limitation of xgettext.

Looks like we have to use the same format specifiers in both singular and
plural forms of a message or the PO file cannot be compiled to MO format. This
commit changes one place in admin that was using different specifiers.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10081 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #8939: added a `list_editable` option to `ModelAdmin`; fields declared `list_editable` may be edited, in bulk, on the changelist page. Thanks, Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10077 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #6470: made the admin use a URL resolver.

This *is* backwards compatible, but `admin.site.root()` has been deprecated. The new style is `('^admin/', include(admin.site.urls))`; users will need to update their code to take advantage of the new customizable admin URLs.

Thanks to Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9739 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #1390 -- Added an app index in the admin interface. Thanks juliae and ext for their work on patches.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8474 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #8078 -- Fixed a Python 2.3 incompatibility in `contrib/admin/options.py`, thanks Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8192 bcc190cf-cafb-0310-a4f2-bffc1f526a37Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37ref(plugins): move new_sentry_plugins into sentry_plugins (#15700)
moved the bulk of plugins from test_only_plugins into new_sentry_plugins (#15468)
migration(plugins): use aws sqs plugin from sentry core (#15428)
Feat/sentry plugin migration v1 (#15299)
bpo-39313: Add an option to RefactoringTool for using exec as a function (GH-17967)



https://bugs.python.org/issue39313


Automerge-Triggered-By: @pablogsalIssue #13930: Adds ability for 2to3 to write its output to a different
directory tree instead of overwriting the input files.  Adds three command
line options: -o/--output-dir, -W/--write-unchanged-files and --add-suffix.Merged revisions 85551,86156-86157,86464 via svnmerge from
svn+ssh://pythondev@svn.python.org/sandbox/trunk/2to3/lib2to3

........
  r85551 | benjamin.peterson | 2010-10-15 23:57:29 +0200 (Fr, 15 Okt 2010) | 1 line

  escape() is now in the html module
........
  r86156 | georg.brandl | 2010-11-04 09:34:57 +0100 (Do, 04 Nov 2010) | 1 line

  Consistency fixes in option parser help texts.
........
  r86157 | georg.brandl | 2010-11-04 09:35:30 +0100 (Do, 04 Nov 2010) | 1 line

  #10286: fix urllib class names.
........
  r86464 | benjamin.peterson | 2010-11-14 16:28:52 +0100 (So, 14 Nov 2010) | 1 line

  match only .py files #10416
........Merged revisions 80934 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

................
  r80934 | benjamin.peterson | 2010-05-07 13:58:23 -0500 (Fri, 07 May 2010) | 69 lines

  Merged revisions 79911,79916-79917,80018,80418,80572-80573,80635-80639,80668,80922 via svnmerge from
  svn+ssh://pythondev@svn.python.org/sandbox/trunk/2to3/lib2to3

  ........
    r79911 | benjamin.peterson | 2010-04-09 15:38:53 -0500 (Fri, 09 Apr 2010) | 1 line

    use absolute import
  ........
    r79916 | benjamin.peterson | 2010-04-09 16:05:21 -0500 (Fri, 09 Apr 2010) | 1 line

    generalize detection of __future__ imports and attach them to the tree
  ........
    r79917 | benjamin.peterson | 2010-04-09 16:11:44 -0500 (Fri, 09 Apr 2010) | 1 line

    don't try to 'fix' relative imports when absolute_import is enabled #8858
  ........
    r80018 | benjamin.peterson | 2010-04-12 16:12:12 -0500 (Mon, 12 Apr 2010) | 4 lines

    prevent diffs from being mangled is multiprocess mode #6409

    Patch by George Boutsioukis.
  ........
    r80418 | benjamin.peterson | 2010-04-23 16:00:03 -0500 (Fri, 23 Apr 2010) | 1 line

    remove unhelpful description
  ........
    r80572 | benjamin.peterson | 2010-04-27 20:33:54 -0500 (Tue, 27 Apr 2010) | 1 line

    use unicode literals
  ........
    r80573 | jeffrey.yasskin | 2010-04-27 23:08:27 -0500 (Tue, 27 Apr 2010) | 6 lines

    Don't transform imports that are already relative.  2to3 turned
      from . import refactor
    into
      from .. import refactor
    which broke the transformation of 2to3 itself.
  ........
    r80635 | benjamin.peterson | 2010-04-29 16:02:23 -0500 (Thu, 29 Apr 2010) | 1 line

    remove imports
  ........
    r80636 | benjamin.peterson | 2010-04-29 16:02:41 -0500 (Thu, 29 Apr 2010) | 1 line

    unicode literal
  ........
    r80637 | benjamin.peterson | 2010-04-29 16:03:42 -0500 (Thu, 29 Apr 2010) | 1 line

    must pass a string to Number
  ........
    r80638 | benjamin.peterson | 2010-04-29 16:05:34 -0500 (Thu, 29 Apr 2010) | 1 line

    unicode literals
  ........
    r80639 | benjamin.peterson | 2010-04-29 16:06:09 -0500 (Thu, 29 Apr 2010) | 1 line

    pass string to Number
  ........
    r80668 | jeffrey.yasskin | 2010-04-30 18:02:47 -0500 (Fri, 30 Apr 2010) | 4 lines

    Make 2to3 run under Python 2.5 so that the benchmark suite at
    http://hg.python.org/benchmarks/ can use it and still run on implementations
    that haven't gotten to 2.6 yet.  Fixes issue 8566.
  ........
    r80922 | benjamin.peterson | 2010-05-07 11:06:25 -0500 (Fri, 07 May 2010) | 1 line

    prevent xrange transformation from wrapping range calls it produces in list
  ........
................Merged revisions 76259,76326,76376-76377,76430,76471,76517 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

................
  r76259 | georg.brandl | 2009-11-14 05:50:51 -0600 (Sat, 14 Nov 2009) | 1 line

  Fix terminology.
................
  r76326 | georg.brandl | 2009-11-16 10:44:05 -0600 (Mon, 16 Nov 2009) | 1 line

  #7302: fix link.
................
  r76376 | georg.brandl | 2009-11-18 13:39:14 -0600 (Wed, 18 Nov 2009) | 1 line

  upcase Python
................
  r76377 | georg.brandl | 2009-11-18 14:05:15 -0600 (Wed, 18 Nov 2009) | 1 line

  Fix markup.
................
  r76430 | r.david.murray | 2009-11-20 07:29:43 -0600 (Fri, 20 Nov 2009) | 2 lines

  Issue 7363: fix indentation in socketserver udpserver example.
................
  r76471 | georg.brandl | 2009-11-23 13:53:19 -0600 (Mon, 23 Nov 2009) | 1 line

  #7345: fix arguments of formatyear().
................
  r76517 | benjamin.peterson | 2009-11-25 12:16:46 -0600 (Wed, 25 Nov 2009) | 29 lines

  Merged revisions 76160-76161,76250,76252,76447,76506 via svnmerge from
  svn+ssh://pythondev@svn.python.org/sandbox/trunk/2to3/lib2to3

  ........
    r76160 | benjamin.peterson | 2009-11-08 18:53:48 -0600 (Sun, 08 Nov 2009) | 1 line

    undeprecate the -p option; it's useful for converting python3 sources
  ........
    r76161 | benjamin.peterson | 2009-11-08 19:05:37 -0600 (Sun, 08 Nov 2009) | 1 line

    simplify condition
  ........
    r76250 | benjamin.peterson | 2009-11-13 16:56:48 -0600 (Fri, 13 Nov 2009) | 1 line

    fix handling of a utf-8 bom #7313
  ........
    r76252 | benjamin.peterson | 2009-11-13 16:58:36 -0600 (Fri, 13 Nov 2009) | 1 line

    remove pdb turd
  ........
    r76447 | benjamin.peterson | 2009-11-22 18:17:40 -0600 (Sun, 22 Nov 2009) | 1 line

    #7375 fix nested transformations in fix_urllib
  ........
    r76506 | benjamin.peterson | 2009-11-24 18:34:31 -0600 (Tue, 24 Nov 2009) | 1 line

    use generator expressions in any()
  ........
................fix print statementMerged revisions 74114 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

................
  r74114 | benjamin.peterson | 2009-07-20 10:33:09 -0500 (Mon, 20 Jul 2009) | 110 lines

  Merged revisions 73771,73811,73840,73842,73848-73849,73861,73957-73960,73964-73969,73972-73974,73977,73981,73984,74065,74113 via svnmerge from
  svn+ssh://pythondev@svn.python.org/sandbox/trunk/2to3/lib2to3

  ........
    r73771 | benjamin.peterson | 2009-07-02 10:56:55 -0500 (Thu, 02 Jul 2009) | 1 line

    force the imports fixer to be run after the import one #6400
  ........
    r73811 | benjamin.peterson | 2009-07-03 09:03:14 -0500 (Fri, 03 Jul 2009) | 1 line

    check for sep, not pathsep when looking for a subpackage #6408
  ........
    r73840 | benjamin.peterson | 2009-07-04 09:52:28 -0500 (Sat, 04 Jul 2009) | 1 line

    don't print diffs by default; it's annoying
  ........
    r73842 | benjamin.peterson | 2009-07-04 09:58:46 -0500 (Sat, 04 Jul 2009) | 1 line

    complain when not showing diffs or writing
  ........
    r73848 | alexandre.vassalotti | 2009-07-04 23:38:19 -0500 (Sat, 04 Jul 2009) | 2 lines

    Fix test_refactor_stdin to handle print_output() method with 4 arguments.
  ........
    r73849 | alexandre.vassalotti | 2009-07-04 23:43:18 -0500 (Sat, 04 Jul 2009) | 5 lines

    Issue 2370: Add fixer for the removal of operator.isCallable() and
    operator.sequenceIncludes().

    Patch contributed by Jeff Balogh (and updated by me).
  ........
    r73861 | benjamin.peterson | 2009-07-05 09:15:53 -0500 (Sun, 05 Jul 2009) | 1 line

    cleanup and use unicode where appropiate
  ........
    r73957 | benjamin.peterson | 2009-07-11 15:49:56 -0500 (Sat, 11 Jul 2009) | 1 line

    fix calls to str() with unicode()
  ........
    r73958 | benjamin.peterson | 2009-07-11 15:51:51 -0500 (Sat, 11 Jul 2009) | 1 line

    more str() -> unicode()
  ........
    r73959 | benjamin.peterson | 2009-07-11 16:40:08 -0500 (Sat, 11 Jul 2009) | 1 line

    add tests for refactor_dir()
  ........
    r73960 | benjamin.peterson | 2009-07-11 16:44:32 -0500 (Sat, 11 Jul 2009) | 1 line

    don't parse files just because they end with 'py' (no dot)
  ........
    r73964 | benjamin.peterson | 2009-07-11 17:30:15 -0500 (Sat, 11 Jul 2009) | 1 line

    simplify
  ........
    r73965 | benjamin.peterson | 2009-07-11 17:31:30 -0500 (Sat, 11 Jul 2009) | 1 line

    remove usage of get_prefix()
  ........
    r73966 | benjamin.peterson | 2009-07-11 17:33:35 -0500 (Sat, 11 Jul 2009) | 1 line

    revert unintended change in 73965
  ........
    r73967 | benjamin.peterson | 2009-07-11 17:34:44 -0500 (Sat, 11 Jul 2009) | 1 line

    avoid expensive checks and assume the node did change
  ........
    r73968 | benjamin.peterson | 2009-07-11 20:46:46 -0500 (Sat, 11 Jul 2009) | 1 line

    use a regular dict for the heads to avoid adding lists in the loop
  ........
    r73969 | benjamin.peterson | 2009-07-11 20:50:43 -0500 (Sat, 11 Jul 2009) | 1 line

    prefix headnode functions with '_'
  ........
    r73972 | benjamin.peterson | 2009-07-11 21:25:45 -0500 (Sat, 11 Jul 2009) | 1 line

    try to make the head node dict as sparse as possible
  ........
    r73973 | benjamin.peterson | 2009-07-11 21:59:49 -0500 (Sat, 11 Jul 2009) | 1 line

    a better idea; add an option to *not* print diffs
  ........
    r73974 | benjamin.peterson | 2009-07-11 22:00:29 -0500 (Sat, 11 Jul 2009) | 1 line

    add space
  ........
    r73977 | benjamin.peterson | 2009-07-12 10:16:07 -0500 (Sun, 12 Jul 2009) | 1 line

    update get_headnode_dict tests for recent changes
  ........
    r73981 | benjamin.peterson | 2009-07-12 12:06:39 -0500 (Sun, 12 Jul 2009) | 4 lines

    detect when "from __future__ import print_function" is given

    Deprecate the 'print_function' option and the -p flag
  ........
    r73984 | benjamin.peterson | 2009-07-12 16:16:37 -0500 (Sun, 12 Jul 2009) | 1 line

    add tests for Call; thanks Joe Amenta
  ........
    r74065 | benjamin.peterson | 2009-07-17 12:52:49 -0500 (Fri, 17 Jul 2009) | 1 line

    pathname2url and url2pathname are in urllib.request not urllib.parse #6496
  ........
    r74113 | benjamin.peterson | 2009-07-20 08:56:57 -0500 (Mon, 20 Jul 2009) | 1 line

    fix deprecation warnings in tests
  ........
................Merged revisions 72368 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

................
  r72368 | benjamin.peterson | 2009-05-05 18:13:58 -0500 (Tue, 05 May 2009) | 53 lines

  Merged revisions 68503,68507,68694,69054,69673,69679-69681,70991,70999,71003,71695 via svnmerge from
  svn+ssh://pythondev@svn.python.org/sandbox/trunk/2to3/lib2to3

  ........
    r68503 | benjamin.peterson | 2009-01-10 14:14:49 -0600 (Sat, 10 Jan 2009) | 1 line

    use variable
  ........
    r68507 | benjamin.peterson | 2009-01-10 15:13:16 -0600 (Sat, 10 Jan 2009) | 1 line

    rewrap
  ........
    r68694 | benjamin.peterson | 2009-01-17 17:55:59 -0600 (Sat, 17 Jan 2009) | 1 line

    test for specific node type
  ........
    r69054 | guilherme.polo | 2009-01-28 10:01:54 -0600 (Wed, 28 Jan 2009) | 2 lines

    Added mapping for the ttk module.
  ........
    r69673 | benjamin.peterson | 2009-02-16 09:38:22 -0600 (Mon, 16 Feb 2009) | 1 line

    fix handling of as imports #5279
  ........
    r69679 | benjamin.peterson | 2009-02-16 11:36:06 -0600 (Mon, 16 Feb 2009) | 1 line

    make Base.get_next_sibling() and Base.get_prev_sibling() properties
  ........
    r69680 | benjamin.peterson | 2009-02-16 11:41:48 -0600 (Mon, 16 Feb 2009) | 1 line

    normalize docstrings in pytree according to PEP 11
  ........
    r69681 | benjamin.peterson | 2009-02-16 11:43:09 -0600 (Mon, 16 Feb 2009) | 1 line

    use a set
  ........
    r70991 | benjamin.peterson | 2009-04-01 15:54:50 -0500 (Wed, 01 Apr 2009) | 1 line

    map urllib.urlopen to urllib.request.open #5637
  ........
    r70999 | benjamin.peterson | 2009-04-01 17:36:47 -0500 (Wed, 01 Apr 2009) | 1 line

    add very alpha support to 2to3 for running concurrently with multiprocessing
  ........
    r71003 | benjamin.peterson | 2009-04-01 18:10:43 -0500 (Wed, 01 Apr 2009) | 1 line

    fix when multiprocessing is not available or used
  ........
    r71695 | benjamin.peterson | 2009-04-17 22:21:29 -0500 (Fri, 17 Apr 2009) | 1 line

    refactor multiprocessing support, so it's less hacky to employ and only loads mp when needed
  ........
................Merged revisions 67806 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

................
  r67806 | benjamin.peterson | 2008-12-15 21:35:28 -0600 (Mon, 15 Dec 2008) | 111 lines

  Merged revisions 67427,67431,67433,67435,67630,67652,67656-67657,67674-67675,67678-67679,67705-67706,67716,67723,67765-67771,67774,67776,67778 via svnmerge from
  svn+ssh://pythondev@svn.python.org/sandbox/trunk/2to3/lib2to3

  ........
    r67427 | benjamin.peterson | 2008-11-28 16:07:41 -0600 (Fri, 28 Nov 2008) | 1 line

    fix spelling in comment
  ........
    r67431 | benjamin.peterson | 2008-11-28 17:14:08 -0600 (Fri, 28 Nov 2008) | 1 line

    add a scripts directory; move things to it
  ........
    r67433 | benjamin.peterson | 2008-11-28 17:18:48 -0600 (Fri, 28 Nov 2008) | 1 line

    run svneol.py
  ........
    r67435 | benjamin.peterson | 2008-11-28 17:25:03 -0600 (Fri, 28 Nov 2008) | 1 line

    rename pre/post_order_mapping to pre/post_order_heads
  ........
    r67630 | alexandre.vassalotti | 2008-12-06 21:51:56 -0600 (Sat, 06 Dec 2008) | 2 lines

    Fix typo in the urllib2.HTTPDigestAuthHandler fixer.
  ........
    r67652 | armin.ronacher | 2008-12-07 15:39:43 -0600 (Sun, 07 Dec 2008) | 5 lines

    Added a fixer that cleans up a tuple argument to isinstance after the tokens
    in it were fixed.  This is mainly used to remove double occurrences of
    tokens as a leftover of the long -> int / unicode -> str conversion.
  ........
    r67656 | armin.ronacher | 2008-12-07 16:54:16 -0600 (Sun, 07 Dec 2008) | 3 lines

    Added missing copyright fo 2to3 fix_isinstance.
  ........
    r67657 | armin.ronacher | 2008-12-07 18:29:35 -0600 (Sun, 07 Dec 2008) | 3 lines

    2to3: intern and reduce fixes now add the imports if missing.  Because that is a common task the fixer_util module now has a function "touch_import" that adds imports if missing.
  ........
    r67674 | benjamin.peterson | 2008-12-08 19:58:11 -0600 (Mon, 08 Dec 2008) | 1 line

    copy permission bits when making backup files #4602
  ........
    r67675 | benjamin.peterson | 2008-12-08 19:59:11 -0600 (Mon, 08 Dec 2008) | 1 line

    add forgotten import
  ........
    r67678 | benjamin.peterson | 2008-12-08 20:08:30 -0600 (Mon, 08 Dec 2008) | 1 line

    fix #4602 for real
  ........
    r67679 | armin.ronacher | 2008-12-09 00:54:03 -0600 (Tue, 09 Dec 2008) | 3 lines

    Removed redudant code from the 2to3 long fixer.  This fixes #4590.
  ........
    r67705 | benjamin.peterson | 2008-12-11 13:04:08 -0600 (Thu, 11 Dec 2008) | 1 line

    put trailers after a range call after the list()
  ........
    r67706 | benjamin.peterson | 2008-12-11 13:17:57 -0600 (Thu, 11 Dec 2008) | 1 line

    add html related modules to the fix_imports mapping
  ........
    r67716 | benjamin.peterson | 2008-12-11 22:16:47 -0600 (Thu, 11 Dec 2008) | 1 line

    consolidate tests
  ........
    r67723 | benjamin.peterson | 2008-12-12 19:49:31 -0600 (Fri, 12 Dec 2008) | 1 line

    fix name
  ........
    r67765 | benjamin.peterson | 2008-12-14 14:05:05 -0600 (Sun, 14 Dec 2008) | 1 line

    run fix_isinstance after fix_long and fix_unicode
  ........
    r67766 | benjamin.peterson | 2008-12-14 14:13:05 -0600 (Sun, 14 Dec 2008) | 1 line

    use run_order instead of order
  ........
    r67767 | benjamin.peterson | 2008-12-14 14:28:12 -0600 (Sun, 14 Dec 2008) | 1 line

    don't retain parenthesis if there is only one item left
  ........
    r67768 | benjamin.peterson | 2008-12-14 14:32:30 -0600 (Sun, 14 Dec 2008) | 1 line

    use insert_child()
  ........
    r67769 | benjamin.peterson | 2008-12-14 14:59:10 -0600 (Sun, 14 Dec 2008) | 1 line

    parenthesize doesn't belong in pygram or FixerBase
  ........
    r67770 | alexandre.vassalotti | 2008-12-14 15:15:36 -0600 (Sun, 14 Dec 2008) | 2 lines

    Fix typo: html.paser -> html.parser.
  ........
    r67771 | benjamin.peterson | 2008-12-14 15:22:09 -0600 (Sun, 14 Dec 2008) | 1 line

    altering .children needs to call changed()
  ........
    r67774 | benjamin.peterson | 2008-12-14 15:55:38 -0600 (Sun, 14 Dec 2008) | 1 line

    employ an evil hack to fix multiple names in the same import statement
  ........
    r67776 | benjamin.peterson | 2008-12-14 16:22:38 -0600 (Sun, 14 Dec 2008) | 1 line

    make a common mixin class for Test_imports and friends
  ........
    r67778 | alexandre.vassalotti | 2008-12-14 17:48:20 -0600 (Sun, 14 Dec 2008) | 2 lines

    Make fix_imports refactor multiple imports as.
  ........
................Merged revisions 66887,66891,66902-66903,66905-66906,66911-66913,66922,66927-66928,66936,66939-66940,66962,66964,66973 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

................
  r66887 | benjamin.peterson | 2008-10-13 16:51:40 -0500 (Mon, 13 Oct 2008) | 1 line

  document how to disable fixers
................
  r66891 | amaury.forgeotdarc | 2008-10-14 16:47:22 -0500 (Tue, 14 Oct 2008) | 5 lines

  #4122: On Windows, Py_UNICODE_ISSPACE cannot be used in an extension module:
  compilation fails with "undefined reference to _Py_ascii_whitespace"

  Will backport to 2.6.
................
  r66902 | skip.montanaro | 2008-10-15 06:49:10 -0500 (Wed, 15 Oct 2008) | 1 line

  easter egg
................
  r66903 | benjamin.peterson | 2008-10-15 15:34:09 -0500 (Wed, 15 Oct 2008) | 1 line

  don't recurse into directories that start with '.'
................
  r66905 | benjamin.peterson | 2008-10-15 16:05:55 -0500 (Wed, 15 Oct 2008) | 1 line

  support the optional line argument for idle
................
  r66906 | benjamin.peterson | 2008-10-15 16:58:46 -0500 (Wed, 15 Oct 2008) | 1 line

  add a much requested newline
................
  r66911 | benjamin.peterson | 2008-10-15 18:10:28 -0500 (Wed, 15 Oct 2008) | 41 lines

  Merged revisions 66805,66841,66860,66884-66886,66893,66907,66910 via svnmerge from
  svn+ssh://pythondev@svn.python.org/sandbox/trunk/2to3/lib2to3

  ........
    r66805 | benjamin.peterson | 2008-10-04 20:11:02 -0500 (Sat, 04 Oct 2008) | 1 line

    mention what the fixes directory is for
  ........
    r66841 | benjamin.peterson | 2008-10-07 17:48:12 -0500 (Tue, 07 Oct 2008) | 1 line

    use assertFalse and assertTrue
  ........
    r66860 | benjamin.peterson | 2008-10-08 16:05:07 -0500 (Wed, 08 Oct 2008) | 1 line

    instead of abusing the pattern matcher, use start_tree to find a next binding
  ........
    r66884 | benjamin.peterson | 2008-10-13 15:50:30 -0500 (Mon, 13 Oct 2008) | 1 line

    don't print tokens to stdout when -v is given
  ........
    r66885 | benjamin.peterson | 2008-10-13 16:28:57 -0500 (Mon, 13 Oct 2008) | 1 line

    add the -x option to disable fixers
  ........
    r66886 | benjamin.peterson | 2008-10-13 16:33:53 -0500 (Mon, 13 Oct 2008) | 1 line

    cut down on some crud
  ........
    r66893 | benjamin.peterson | 2008-10-14 17:16:54 -0500 (Tue, 14 Oct 2008) | 1 line

    add an optional set literal fixer
  ........
    r66907 | benjamin.peterson | 2008-10-15 16:59:41 -0500 (Wed, 15 Oct 2008) | 1 line

    don't write backup files by default
  ........
    r66910 | benjamin.peterson | 2008-10-15 17:43:10 -0500 (Wed, 15 Oct 2008) | 1 line

    add the -n option; it stops backupfiles from being written
  ........
................
  r66912 | hirokazu.yamamoto | 2008-10-16 01:25:25 -0500 (Thu, 16 Oct 2008) | 2 lines

  removed unused _PyUnicode_FromFileSystemEncodedObject.
  made win32_chdir, win32_wchdir static.
................
  r66913 | benjamin.peterson | 2008-10-16 13:52:14 -0500 (Thu, 16 Oct 2008) | 1 line

  document that deque indexing is O(n) #4123
................
  r66922 | benjamin.peterson | 2008-10-16 14:40:14 -0500 (Thu, 16 Oct 2008) | 1 line

  use new showwarnings signature for idle #3391
................
  r66927 | andrew.kuchling | 2008-10-16 15:15:47 -0500 (Thu, 16 Oct 2008) | 1 line

  Fix wording (2.6.1 backport candidate)
................
  r66928 | georg.brandl | 2008-10-16 15:20:56 -0500 (Thu, 16 Oct 2008) | 2 lines

  Add more TOC to the whatsnew index page.
................
  r66936 | georg.brandl | 2008-10-16 16:20:15 -0500 (Thu, 16 Oct 2008) | 2 lines

  #4131: FF3 doesn't write cookies.txt files.
................
  r66939 | georg.brandl | 2008-10-16 16:36:39 -0500 (Thu, 16 Oct 2008) | 2 lines

  part of #4012: kill off old name "processing".
................
  r66940 | georg.brandl | 2008-10-16 16:38:48 -0500 (Thu, 16 Oct 2008) | 2 lines

  #4083: add "as" to except handler grammar as per PEP 3110.
................
  r66962 | benjamin.peterson | 2008-10-17 15:01:01 -0500 (Fri, 17 Oct 2008) | 1 line

  clarify CALL_FUNCTION #4141
................
  r66964 | georg.brandl | 2008-10-17 16:41:49 -0500 (Fri, 17 Oct 2008) | 2 lines

  Fix duplicate word.
................
  r66973 | armin.ronacher | 2008-10-19 03:27:43 -0500 (Sun, 19 Oct 2008) | 3 lines

  Fixed #4067 by implementing _attributes and _fields for the AST root node.
................Merged revisions 66653-66654 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

................
  r66653 | benjamin.peterson | 2008-09-27 16:09:10 -0500 (Sat, 27 Sep 2008) | 49 lines

  Merged revisions 66511,66548-66549,66644,66646-66652 via svnmerge from
  svn+ssh://pythondev@svn.python.org/sandbox/trunk/2to3/lib2to3

  ........
    r66511 | benjamin.peterson | 2008-09-18 21:49:27 -0500 (Thu, 18 Sep 2008) | 1 line

    remove a  useless if __name__ == '__main__'
  ........
    r66548 | benjamin.peterson | 2008-09-21 21:14:14 -0500 (Sun, 21 Sep 2008) | 1 line

    avoid the perils of mutable default arguments
  ........
    r66549 | benjamin.peterson | 2008-09-21 21:26:11 -0500 (Sun, 21 Sep 2008) | 1 line

    some places in RefactoringTool should raise an error instead of logging it
  ........
    r66644 | benjamin.peterson | 2008-09-27 10:45:10 -0500 (Sat, 27 Sep 2008) | 1 line

    fix doctest refactoring
  ........
    r66646 | benjamin.peterson | 2008-09-27 11:40:13 -0500 (Sat, 27 Sep 2008) | 1 line

    don't print to stdout when 2to3 is used as a library
  ........
    r66647 | benjamin.peterson | 2008-09-27 12:28:28 -0500 (Sat, 27 Sep 2008) | 1 line

    let fixer modules and classes have different prefixes
  ........
    r66648 | benjamin.peterson | 2008-09-27 14:02:13 -0500 (Sat, 27 Sep 2008) | 1 line

    raise errors when 2to3 is used as a library
  ........
    r66649 | benjamin.peterson | 2008-09-27 14:03:38 -0500 (Sat, 27 Sep 2008) | 1 line

    fix docstring
  ........
    r66650 | benjamin.peterson | 2008-09-27 14:22:21 -0500 (Sat, 27 Sep 2008) | 1 line

    make use of enumerate
  ........
    r66651 | benjamin.peterson | 2008-09-27 14:24:13 -0500 (Sat, 27 Sep 2008) | 1 line

    revert last revision; it breaks things
  ........
    r66652 | benjamin.peterson | 2008-09-27 16:03:06 -0500 (Sat, 27 Sep 2008) | 1 line

    add tests for lib2to3.refactor
  ........
................
  r66654 | benjamin.peterson | 2008-09-27 16:12:20 -0500 (Sat, 27 Sep 2008) | 1 line

  enable refactor tests
................make lib2to3/main.py syntax py3k validMerged revisions 66174-66175,66177 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

................
  r66174 | benjamin.peterson | 2008-09-02 19:21:32 -0500 (Tue, 02 Sep 2008) | 15 lines

  Merged revisions 66173 via svnmerge from
  svn+ssh://pythondev@svn.python.org/sandbox/trunk/2to3/lib2to3

  ........
    r66173 | benjamin.peterson | 2008-09-02 18:57:48 -0500 (Tue, 02 Sep 2008) | 8 lines

    A little 2to3 refactoring #3637

    This moves command line logic from refactor.py to a new file called
    main.py.  RefactoringTool now merely deals with the actual fixers and
    refactoring; options processing for example is abstracted out.

    This patch was reviewed by Gregory P. Smith.
  ........
................
  r66175 | benjamin.peterson | 2008-09-02 20:53:28 -0500 (Tue, 02 Sep 2008) | 1 line

  update 2to3 script from 2to3 trunk
................
  r66177 | benjamin.peterson | 2008-09-02 21:14:03 -0500 (Tue, 02 Sep 2008) | 9 lines

  Merged revisions 66176 via svnmerge from
  svn+ssh://pythondev@svn.python.org/sandbox/trunk/2to3/lib2to3

  ........
    r66176 | benjamin.peterson | 2008-09-02 21:04:06 -0500 (Tue, 02 Sep 2008) | 1 line

    fix typo
  ........
................[YoutubeDL] Fix playlist entry indexing with --playlist-items (closes #10591, closes #10622)[YoutubeDL] Add support for playlist_uploader and playlist_uploader_id in output template (closes #11427, #15018)[YoutubeDL] Fix playlist range optimization for --playlist-items (closes #14740)[YoutubeDL] Ignore duplicates in --playlist-items
E.g. '--playlist-items 2-4,3-4,3' should result in '[2,3,4]', not '[2,3,4,3,4,3]'[YoutubeDL] Fix out of range --playlist-items for iterable playlists and reduce code duplication (closes #14425)[YoutubeDL] Do not override id, extractor and extractor_key in url_transparent
All these meta fields must be borrowed from final extractor that actually performs extraction.
This commit fixes extractor id in download archives for url_transparent downloads. Previously, 'transparent' extractor was erroneously
used for extractor archive id, e.g. 'eggheadlesson 4n8ugwwj5t' instead of 'wistia 4n8ugwwj5t'.[YoutubeDL] Propagate overridden metadata to IE results of type url (closes #11163)[YoutubeDL] Return early when extraction of url_transparent failsMerge pull request #11901 from ThomasChr/randonplaylistorder

New parameter --playlist-random to randomize playlist download order. Fixes #11889[YoutubeDL] Sanitize url for url and url_transparent extraction results[refactor] Single quotes consistency[YoutubeDL] Do not override ie_key in url_transparent[YoutubeDL] Add playlist finished downloading message (Closes #7517)

Conflicts:
	youtube_dl/YoutubeDL.pyYoutubeDL: ignore indexes from 'playlist_items' that are not in the list (fixes #5706)

We ignore them instead of failing to match the behaviour of the 'playliststart' parameter.[YoutubeDL] Add --playlist-items option (Fixes #2662)Drop hash character in downloader output (#4484)Download playlist items in reverse order

Series of videos are typically uploaded to YouTube playlists in
chronological order.  By default, these videos are downloaded
latest-to-earliest; this is great for seeing the latest videos in a
series, but prevents streaming video in the order that the videos were
produced.  Add an option to download videos in reverse order,
earliest-to-latest.

Conflicts:
	youtube_dl/YoutubeDL.py
	youtube_dl/__init__.py[cnet] Update to new theplatform infrastructure (Fixes #2736)[screenwavemedia] Simplify (#3766)Allow iterators for playlist result entries[YoutubeDL] Fix multi_video check[YoutubeDL] Support new _type multi_video[YoutubeDL] Warn if an extractor returns compat_list[YoutubeDL] Add playlist_id and playlist_title fields (Fixes #4139)[YoutubeDL] Do not apply playlist info to videos when extract_flat is set (#4003)Add --flat-playlist option (Closes #4003)Merge remote-tracking branch 'JGjorgji/fix-leading-zeroes'Merge branch 'paged-lists'

Conflicts:
	test/test_utils.py
	youtube_dl/extractor/youtube.pyAdd webpage_url_basename info_dict field (Fixes #1938)Simplify --playlist-start / --playlist-end interface[wistia] Add extractor[9gag] Add extractorMatch --download-archive during playlist processing (Fixes #1745)Pass the 'download' argument to 'process_video_result' (fixes #1769)Set the extra_info inside YoutubeDL.process_ie_result and set only if the keys are missingSet the playlist_index and playlist fields for already resolved video results.[yahoo] fix typo[yahoo] improve extraction

- add support for live streams(closes #3597)(closes #3779)(closes #22178)
- bypass cookie consent page for european domains(closes #16948)(closes #22576)
- add generic support for embeds(closes #20332)[yahoo] Bypass geo restriction for brightcove (#14210)[yahoo] Use extracted brightcove account id (closes #14210)[yahoo] Add support for custom brigthcove embeds (closes #14210)[brightcove] Fix _extract_url (closes #12782)[yahoo] Add test and improve some content id regex[yahoo] Add another content id regex (closes #11088)[yahoo] Look for Brightcove Legacy Studio embeds(closes #9345)[yahoo] extract more and better formats[yahoo] Recognize brightcove embed (Closes #9995)[yahoo] Improve error detection and update tests[yahoo] Extract all <iframe>s

Fixes test_yahoo_6

(https://ca.finance.yahoo.com/news/hackers-sony-more-trouble-well-154609075.html)[yahoo] Extend _VALID_URL and fix extraction

Closes #9271[yahoo] Add improve content id regexes (Closes #8290)Additional regex for yahoo extractor[yahoo] Support pages that use an alias (fixes #8084)[yahoo] Process query result embedded in webpage[yahoo] Extend _VALID_URLMerge pull request #5328 from yan12125/fix_5226

[Yahoo/NBCSports] Fix 5226 and add support for NBC sports[yahoo] Improve video id detection (fixes #4521)[yahoo] Generalize, support arbitrary subdomains, support iframe videos, capture error message (Closes #2470)Merge remote-tracking branch 'origin/master'Merge pull request #3047 from pulpe/yahoo_thumb

[yahoo] improve thumbnail extraction[yahoo] Improve content id extraction[yahoo] Add support for movies (Fixes #2780)[yahoo] use unicode_literalsRemove unused importsMerge branch 'master' of github.com:rg3/youtube-dlMerge branch 'master' of github.com:rg3/youtube-dl[yahoo] Download the info from another page

The 'meta' field is not always in the video webpage[yahoo] Fix video extraction (fixes #1521)

There's no need to use two different methods.
Now we can also download videos over http if possible.
Also run the test for rtmp videos, but skip the download.Move yahoo into its own fileFix ansible-test pytest plugin loading. (#62119)

* Avoid assertion rewriting in pytest plugins.

Adding PYTEST_DONT_REWRITE to the ansible-test pytest plugin docstrings disables assertion rewriting in pytest for those plugins.

This avoids warnings during test execution if the plugins are loaded multiple times (such as being imported within tests).

* Run ansible-test pytest plugins early.

The ansible-test pytest plugins need to load and run earlier than conftest modules.

To facilitate this, the pytest_configure function is run during loading, which works since they are loaded (but not always run) before conftest modules are loaded.

A check has also been added to the pytest_configure functions to prevent them from running multiple times in the same process.

* Load pytest plugins using an env var.

The -p command line option loads plugins before conftest, but only during collection.
The PYTEST_PLUGINS environment variable loads plugins before confest, both during collection and test execution.Update collections integration targets path. (#61523)

* Update collections integration targets path.

* Fix integration path handling.

* Add collections test target fallback.

Also add warnings and errors for common path mistakes.

* Improve role target detection.Overhaul ansible-test test path handling. (#61416)

* Remove .keep files from test/results/ dirs.

* Remove classification of test/results/ dir.

* Add results_relative to data context.

* Use variables in delegation paths.

* Standardize file writing and results paths.

* Fix issues reported by PyCharm.

* Clean up invocation of coverage command.

It now runs through the injector.

* Hack to allow intercept_command in cover.py.

* Simplify git ignore for test results.

* Use test result tmp dir instead of cache dir.

* Remove old .pytest_cache reference.

* Fix unit test docker delegation.

* Show HTML report link.

* Clean up more results references.

* Move import sanity test output to .tmp dir.

* Exclude test results dir from coverage.

* Fix import sanity test lib paths.

* Fix hard-coded import test paths.

* Fix most hard-coded integration test paths.

* Fix PyCharm warnings.

* Fix import placement.

* Fix integration test dir path.

* Fix Shippable scripts.

* Fix Shippable matrix check.

* Overhaul key pair management.Improve ansible-test env display. (#61339)

* Improve ansible-test env display.
* Fix PyCharm warnings.
* Fix ansible-test ansible-doc sanity test with -e.Speed up units using time.sleep by mocking or shortening sleep time (#61064)

* Speed up units using time.sleep by mocking or shortening sleep time

* Only use durations when not a collectionClean up ansible-test results path handling.

This brings us closer to being able to use `tests/` instead of `test/` in collections.Code cleanup in ansible-test. (#60318)

* Move ansible-test units code into separate dir.
* Fix --explain on "code smell" sanity tests.
* Add --strict-markers to pytest invoctaion.
* Fix classification of units code changes.ref: Simplify event.message field (#16557)

Since we no longer need to also support Django Event, we can now
always use the event.search_message field to refer to the search message
rather than saving it into event.message.

Now event.message is always the same as event.real_message and we can remove the EventCompatibilityProxyfeat: Initial pass on legacy message removal (#10713)

This makes the tests also correctly use message now and passes the right data to snuba for message.ref: Use canonical keys everywhere in sentry itself (#10556)
fix(alerts) AttributeError on int (#9894)

Custom attributes are sometimes int values causing an AttributeError.

Fixes SENTRY-66BAllow conditions based on event type (#4160)
Merge pull request #3763 from getsentry/feature/environment-attribute

Support environment attribute in rule conditionHandle empty stacktraces on exceptions

Fixes SENTRY-YA

/cc @getsentry/infrastructureFixed #28996 -- Simplified some boolean constructs and removed trivial continue statements.Refs #27648 -- Removed support for (iLmsu) regex groups in url() patterns.

Per deprecation timeline.Refs #27656 -- Updated django.utils docstring verbs according to PEP 257.Fixed #27648 -- Deprecated (iLmsu) regex groups in url() patterns.
Refs #27025 -- Fixed "invalid escape sequence" warnings in Python 3.6.

http://bugs.python.org/issue27364Fixed #16362 -- Allowed lookaround assertions in URL patterns.Fixed typos in code comments.Fixed many typos in comments and docstrings.

Thanks Piotr Kasprzyk for help with the patch.Merge branch 'master' of https://github.com/django/django[py3] Ported django.utils.regex_helper.Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.Replaced foo.next() by next(foo).

This new syntax for next() has been introduced in Python 2.6 and is
compatible with Python 3.Fixed #17492 -- Allow reversal of named backreferences. Thanks nate_b

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17336 bcc190cf-cafb-0310-a4f2-bffc1f526a37Changed the reverse() call for creating URLs to convert a "." in the reg-exp
pattern to a "." in the final output. This hides what is probably a bug in the
pattern (the user almost certainly should have written "\."), but it will avoid
a large number of "bug" reports about reverse().


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8929 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #8726 -- When doing reverse URL resolving, make sure we're consistently
dealing with unicode strings throughout by promoting up from UTF-8 as necessary.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8777 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #8725 -- Handle empty URL patterns in reverse().


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8763 bcc190cf-cafb-0310-a4f2-bffc1f526a37A rewrite of the reverse URL parsing: the reverse() call and the "url" template tag.

This is fully backwards compatible, but it fixes a bunch of little bugs. Thanks
to SmileyChris and Ilya Semenov for some early patches in this area that were
incorporated into this change.

Fixed #2977, #4915, #6934, #7206.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8760 bcc190cf-cafb-0310-a4f2-bffc1f526a37Started to work on the regex reverse-engineering phase.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7850 bcc190cf-cafb-0310-a4f2-bffc1f526a37Refs #18325 -- Removed unnecessary line endings in management commands.

The OutputWrapper automatically adds \n when it’s not present.Fixed #30693 -- Removed separate import of os.path in django.core.management.templates.
Fixed #30393 -- Added validation of startapp's directory option.Made startapp/project's overlaying error message use 'app' or 'project'.
Fixed #30147 -- Simplified directory creation with os.makedirs(..., exist_ok=True).Removed default mode='r' argument from calls to open().Refs #23919 -- Replaced errno checking with PEP 3151 exceptions.
Refs #23919 -- Replaced io.open() with open().

io.open() is an alias for open() on Python 3.Refs #23919 -- Removed encoding preambles and future importsOptimized file copy in TemplateCommandRemoved unneeded no_settings_commands hardcoded list

Thanks Tim Graham for the review.Fixed #27171 -- Added unicode_literals and coding preamble to all files in startapp template on Python 2.
Fixed #25968 -- Changed project/app templates to use a "py-tpl" suffix.

Debian packages unconditionally byte-compile .py files on installation and
do not silence errors by design. Therefore, we need a way of shipping these
invalid .py files without a .py extension but ensuring that when we
template them, they end up as .py.

We don't special-case .py files so that the all the TemplateCommand
command-line options (eg. extra_files and extensions) still work entirely
as expected and it may even be useful for other formats too.Fixed #24971 -- Made startapp generate an apps.pyFixed #24950 -- Added unicode_literals to models.py in app template

Thanks Tim Graham for the patchFixed a few uses of Template that relied on a default engine.

Refs #24389.Removed rmtree_errorhandler.

The stated reason for its introduction in d18d37ce no longer applies
since Django's code repository was switched from Subversion to git.

Furthermore it never had any effect because shutil.rmtree ignores its
onerror argument when ignore_errors is True.

The reason for its use in template management commands is unclear.Fixed #23866 -- Harmonized refs to Django documentation from codeFixed #23899 -- Added 'Generated by Django X.Y' to startproject template.Simplified handle_extensions management utility

makemessages now doesn't need any special ignoring logic, after
commit bb4a92d784.Fixed #20632 -- Fixed {{ docs_version }} in project templateSimplified default project template.

Squashed commit of:

commit 508ec9144b35c50794708225b496bde1eb5e60aa
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Tue Jan 29 22:50:55 2013 +0100

    Tweaked default settings file.

    * Explained why BASE_DIR exists.
    * Added a link to the database configuration options, and put it in its
      own section.
    * Moved sensitive settings that must be changed for production at the
      top.

commit 6515fd2f1aa73a86dc8dbd2ccf512ddb6b140d57
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Tue Jan 29 14:35:21 2013 +0100

    Documented the simplified app & project templates in the changelog.

commit 2c5b576c2ea91d84273a019b3d0b3b8b4da72f23
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Tue Jan 29 13:59:27 2013 +0100

    Minor fixes in tutorials 5 and 6.

commit 55a51531be8104f21b3cca3f6bf70b0a7139a041
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Tue Jan 29 13:51:11 2013 +0100

    Updated tutorial 2 for the new project template.

commit 29ddae87bdaecff12dd31b16b000c01efbde9e20
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Tue Jan 29 11:58:54 2013 +0100

    Updated tutorial 1 for the new project template.

commit 0ecb9f6e2514cfd26a678a280d471433375101a3
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Tue Jan 29 11:29:13 2013 +0100

    Adjusted the default URLconf detection to account for the admin.

    It's now enabled by default.

commit 5fb4da0d3d09dac28dd94e3fde92b9d4335c0565
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Tue Jan 29 10:36:55 2013 +0100

    Added security warnings for the most sensitive settings.

commit 718d84bd8ac4a42fb4b28ec93965de32680f091e
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Jan 28 23:24:06 2013 +0100

    Used an absolute path for the SQLite database.

    This ensures the settings file works regardless of which directory
    django-admin.py / manage.py is invoked from.

    BASE_DIR got a +1 from a BDFL and another core dev. It doesn't involve
    the concept of a "Django project"; it's just a convenient way to express
    relative paths within the source code repository for non-Python files.

    Thanks Jacob Kaplan-Moss for the suggestion.

commit 1b559b4bcda622e10909b68fe5cab90db6727dd9
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Jan 28 23:22:40 2013 +0100

    Removed STATIC_ROOT from the default settings template.

    It isn't necessary in development, and it confuses beginners to no end.

    Thanks Carl Meyer for the suggestion.

commit a55f141a500bb7c9a1bc259bbe1954c13b199671
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Jan 28 23:21:43 2013 +0100

    Removed MEDIA_ROOT/URL from default settings template.

    Many sites will never deal with user-uploaded files, and MEDIA_ROOT is
    complicated to explain.

    Thanks Carl Meyer for the suggestion.

commit 44bf2f2441420fd9429ee9fe1f7207f92dd87e70
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Jan 28 22:22:09 2013 +0100

    Removed logging config.

    This configuration is applied regardless of the value of LOGGING;
    duplicating it in LOGGING is confusing.

commit eac747e848eaed65fd5f6f254f0a7559d856f88f
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Jan 28 22:05:31 2013 +0100

    Enabled the locale middleware by default.

    USE_I18N is True by default, and doesn't work well without
    LocaleMiddleware.

commit d806c62b2d00826dc2688c84b092627b8d571cab
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Jan 28 22:03:16 2013 +0100

    Enabled clickjacking protection by default.

commit 99152c30e6a15003f0b6737dc78e87adf462aacb
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Jan 28 22:01:48 2013 +0100

    Reorganized settings in logical sections, and trimmed comments.

commit d37ffdfcb24b7e0ec7cc113d07190f65fb12fb8a
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Jan 28 16:54:11 2013 +0100

    Avoided misleading TEMPLATE_DEBUG = DEBUG.

    According to the docs TEMPLATE_DEBUG works only when DEBUG = True.

commit 15d9478d3a9850e85841e7cf09cf83050371c6bf
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Jan 28 16:46:25 2013 +0100

    Removed STATICFILES_FINDERS/TEMPLATE_LOADERS from default settings file.

    Only developers with special needs ever need to change these settings.

commit 574da0eb5bfb4570883756914b4dbd7e20e1f61e
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Jan 28 16:45:01 2013 +0100

    Removed STATICFILES/TEMPLATES_DIRS from default settings file.

    The current best practice is to put static files and templates in
    applications, for easier testing and deployment.

commit 8cb18dbe56629aa1be74718a07e7cc66b4f9c9f0
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Jan 28 16:24:16 2013 +0100

    Removed settings related to email reporting from default settings file.

    While handy for small scale projects, it isn't exactly a best practice.

commit 8ecbfcb3638058f0c49922540f874a7d802d864f
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Tue Jan 29 18:54:43 2013 +0100

    Documented how to enable the sites framework.

commit 23fc91a6fa67d91ddd9d71b1c3e0dc26bdad9841
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Jan 28 16:28:59 2013 +0100

    Disabled the sites framework by default.

    RequestSite does the job for single-domain websites.

commit c4d82eb8afc0eb8568bf9c4d12644272415e3960
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Tue Jan 29 00:08:33 2013 +0100

    Added a default admin.py to the application template.

    Thanks Ryan D Hiebert for the suggestion.

commit 4071dc771e5c44b1c5ebb9beecefb164ae465e22
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Jan 28 10:59:49 2013 +0100

    Enabled the admin by default.

    Everyone uses the admin.

commit c807a31f8d89e7e7fd97380e3023f7983a8b6fcb
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Jan 28 10:57:05 2013 +0100

    Removed admindocs from default project template.

commit 09e4ce0e652a97da1a9e285046a91c8ad7a9189c
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Jan 28 16:32:52 2013 +0100

    Added links to the settings documentation.

commit 5b8f5eaef364eb790fcde6f9e86f7d266074cca8
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Jan 28 11:06:54 2013 +0100

    Used a significant example for URLconf includes.

commit 908e91d6fcee2a3cb51ca26ecdf12a6a24e69ef8
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Jan 28 16:22:31 2013 +0100

    Moved code comments about WSGI to docs, and rewrote said docs.

commit 50417e51996146f891d08ca8b74dcc736a581932
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Jan 28 15:51:50 2013 +0100

    Normalized the default application template.

    Removed the default test that 1 + 1 = 2, because it's been committed
    way too many times, in too many projects.

    Added an import of `render` for views, because the first view will
    often be:

    def home(request):
        return render(request, "mysite/home.html")Fixed #19125 -- The startproject command should validate the name earlier

Thanks Łukasz Rekucki for the report and the patch.Fixed #19397 -- Crash on binary files in project templates.

Thanks gw 2012 at tnode com for the report.Ensure we ignore __pycache__ PEP 3174 dirs in a few more places.Fixed #18091 -- Non-ASCII templates break `django-admin.py startproject --template=TEMPLATE`.

Thanks to Claude Huchet and Tomáš Ehrlich for the patch.Fixed #18634 -- Don't escape variables in the context for startproject/startapp.

The & symbols which can come up in the secret key were
being escaped to &amp;.Fixed #17920 -- Actually pass the full path of a newly created project or app in the template context as mentioned in the startproject docs. Many thanks to Preston Holmes for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17773 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #17517 -- Added `--name` option to startproject and startapp management commands to be able to render files without a file extension. Thanks, Florian Apolloner.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17432 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #17468 -- Made sure the project/app template management command tests correctly handle an existing directory on Windows.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17377 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #17503 -- A destination directory passed to startproject or startapp as optional second argument is now reused as the project/app directory, rather than a new project/app directory created within it. Refs #17042.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17340 bcc190cf-cafb-0310-a4f2-bffc1f526a37Moved validation of project names to an earlier spot so no directory with invalid name is created.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17288 bcc190cf-cafb-0310-a4f2-bffc1f526a37Made sure the new project template functionality works when the template
path specified has a trailing path separator.

Thanks Alex for the report.

Fixes #17475.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17287 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #17042 -- Extended startproject and startapp management commands to better handle custom app and project templates. Many thanks to Preston Holmes for his initial patch and Alex Gaynor, Carl Meyer, Donald Stufft, Jacob Kaplan-Moss and Julien Phalip for code reviewing.

* Added ability to pass the project or app directory path as the second argument
* Added ``--template`` option for specifying custom project and app templates
* Cleaned up admin_scripts tests a little while I was there

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17246 bcc190cf-cafb-0310-a4f2-bffc1f526a37[prosiebensat1] improve geo restriction handling(closes #23571)[prosiebensat1] add support for new API(closes #21272)[prosiebensat1] extract dash formats[puls4] fix extraction(closes #10583)Apply diff2.txt from SF patch http://www.python.org/sf/572113
(with one small bugfix in bgen/bgen/scantools.py)

This replaces string module functions with string methods
for the stuff in the Tools directory. Several uses of
string.letters etc. are still remaining.Whitespace normalization.Fix multi-arg list.append() calls.Initial revisionGeneral cleanup, raise normalization in Lib/distutils.Merged revisions 55795-55816 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/branches/p3yk

........
  r55797 | neal.norwitz | 2007-06-07 00:00:57 -0700 (Thu, 07 Jun 2007) | 3 lines

  Get rid of some remnants of classic classes.  types.ClassType == type.
  Also get rid of almost all uses of the types module and use the builtin name.
........
  r55798 | neal.norwitz | 2007-06-07 00:12:36 -0700 (Thu, 07 Jun 2007) | 1 line

  Remove a use of types, verify commit hook works
........
  r55809 | guido.van.rossum | 2007-06-07 11:11:29 -0700 (Thu, 07 Jun 2007) | 2 lines

  Fix syntax error introduced by Neal in last checkin.
........Remove functions in string module that are also string methods.  Also remove:
 * all calls to functions in the string module (except maketrans)
 * everything from stropmodule except for maketrans() which is still usedWhitespace normalization.Changed so lines that are all comment (or just whitespace + comment)
are completely skipped, rather than being treated as blank lines
(and then subject to the 'skip_blanks' flag).  This allows us
to process old-style Setup files, which rely on
  hello \\
  # boo!
  there
coming out as "hello there".Andrew Kuchling:
Fixed precendence bug that meant setting skip_blanks to false didn't work
under some circumstances.[change from 2000/04/17, propagating now to distutils copy]
Dropped the 'collapse_ws' option and replaced it with 'collapse_join' --
it's *much* faster (no 're.sub()') and this is the reason I really added
'collapse_ws', ie. to remove leading whitespace from a line being joined
to the previous line.Added all documentation.
Slightly improved the code for dealing with newline on a comment line,
  and for stripping whitespace.Allow comment characters (#) to be escaped:
  - did away with 'comment_re' option -- it's just not that simple anymore
  - heavily revised the main logic in 'readline()' to accomodate this
Beefed up 'warn()': 'line' can be list or tuple, and 'msg' is
  automatically converted to a string.Replaced the last attempt at an "unreadline" with one that actually
works on non-seekable file-like objects, such as URLs.  (Oops.)Added 'linestart' array and 'unreadline()' method (makes parsing a lot easier).Added collapse_ws option.Added: mems.lib.text_file: provides TextFile class for parsing text
files with (optional) comment stripping, blank line skipping, whitespace
removal, and line joining with trailing backslashes.ref(py3): exceptions.message -> six.text_type (#16731)
fix(issue search) Handle invalid search queries cleanly

Add an exception handler for InvalidSearchQuery when a user searches issues.fix(api): When checking for an exact match for a group, use projects that the user is a member of in addition to passed projects (SEN-785)

This allows users who have the wrong project selected to successfully make a direct hit.feat(api): Allow passing group_ids to `OrganizationGroupIndexEndpoint` for bulk fetching groups (SEN-701)

For use in incidents to bulk fetch groupsfeat: Allow dashed event ids in API and searches (#13353)

Normalizes event identifiers in all places before passing them to search
queries. Some of our endpoints return the event ID in a dashed representation,
such as the minidump endpoint. This is required by external clients which might
otherwise fail. refs(api): Completely stop calling old parser for search.

This removes all uses of the old parser around issue search. Leaving the parser itself around for a
while because it's useful for comparing results in case we're not sure how things worked in the
past.ref: Use is_event_id function for checking for a direct match (#12362)
ref(api): Feature gate org group index multi project (#12301)
feat: Search by short ID searches all projects (#12216)

Searching by group short ID ignores selected projects and search all user's projects.

Addresses SEN-171fix(issues) Fix searching by eventid not redirecting (#11827)

The project issue list would automatically redirect to the matching
event when searching by eventid. This adds that behavior to the
organization issue list. The frontend uses the `x-sentry-direct-hit`
header and `matchingEventId` attribute to generate the destination URL.

This path is only followed if the search finds a single group as events
are only unique per project, not per-org.

Fixes APP-1061Merge pull request #11700 from getsentry/fix-envs-org-group-index

fix(api): Correctly filter for environments in org group indexref(api): Refactor org endpoint base get_project_ids to get_projectsfix(api): Add date filtering support to org group index (#11477)

feat(issues) Add filtering UX to organization issues (#11464)

Add environment, project, tag, and text search to organization issues.
Date searching is still broken as we haven't implemented the filters in
the API endpoint yet.

Refs APP-990feat(api): Add organization issues list endpoint (#11133)
Revert #27959: ImportError within an encoding module should also skip the encodingIssue #28005: Allow ImportErrors in encoding implementation to propagate.Issue #18200: Back out usage of ModuleNotFoundError (8d28d44f3a9a)Issue #18200: Update the stdlib (except tests) to use
ModuleNotFoundError.Merge 3.2Raise statement normalization in Lib/.Merged revisions 55407-55513 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/branches/p3yk

................
  r55413 | fred.drake | 2007-05-17 12:30:10 -0700 (Thu, 17 May 2007) | 1 line

  fix argument name in documentation; match the implementation
................
  r55430 | jack.diederich | 2007-05-18 06:39:59 -0700 (Fri, 18 May 2007) | 1 line

  Implements class decorators, PEP 3129.
................
  r55432 | guido.van.rossum | 2007-05-18 08:09:41 -0700 (Fri, 18 May 2007) | 2 lines

  obsubmit.
................
  r55434 | guido.van.rossum | 2007-05-18 09:39:10 -0700 (Fri, 18 May 2007) | 3 lines

  Fix bug in test_inspect.  (I presume this is how it should be fixed;
  Jack Diedrich, please verify.)
................
  r55460 | brett.cannon | 2007-05-20 00:31:57 -0700 (Sun, 20 May 2007) | 4 lines

  Remove the imageop module.  With imgfile already removed in Python 3.0 and
  rgbimg gone in Python 2.6 the unit tests themselves were made worthless.  Plus
  third-party libraries perform the same function much better.
................
  r55469 | neal.norwitz | 2007-05-20 11:28:20 -0700 (Sun, 20 May 2007) | 118 lines

  Merged revisions 55324-55467 via svnmerge from
  svn+ssh://pythondev@svn.python.org/python/trunk

  ........
    r55348 | georg.brandl | 2007-05-15 13:19:34 -0700 (Tue, 15 May 2007) | 4 lines

    HTML-escape the plain traceback in cgitb's HTML output, to prevent
    the traceback inadvertently or maliciously closing the comment and
    injecting HTML into the error page.
  ........
    r55372 | neal.norwitz | 2007-05-15 21:33:50 -0700 (Tue, 15 May 2007) | 6 lines

    Port rev 55353 from Guido:
    Add what looks like a necessary call to PyErr_NoMemory() when PyMem_MALLOC()
    fails.

    Will backport.
  ........
    r55377 | neal.norwitz | 2007-05-15 22:06:33 -0700 (Tue, 15 May 2007) | 1 line

    Mention removal of some directories for obsolete platforms
  ........
    r55380 | brett.cannon | 2007-05-15 22:50:03 -0700 (Tue, 15 May 2007) | 2 lines

    Change the maintainer of the BeOS port.
  ........
    r55383 | georg.brandl | 2007-05-16 06:44:18 -0700 (Wed, 16 May 2007) | 2 lines

    Bug #1719995: don't use deprecated method in sets example.
  ........
    r55386 | neal.norwitz | 2007-05-16 13:05:11 -0700 (Wed, 16 May 2007) | 5 lines

    Fix bug in marshal where bad data would cause a segfault due to
    lack of an infinite recursion check.

    Contributed by Damien Miller at Google.
  ........
    r55389 | brett.cannon | 2007-05-16 15:42:29 -0700 (Wed, 16 May 2007) | 6 lines

    Remove the gopherlib module.  It has been raising a DeprecationWarning since
    Python 2.5.

    Also remove gopher support from urllib/urllib2.  As both imported gopherlib the
    usage of the support would have raised a DeprecationWarning.
  ........
    r55394 | raymond.hettinger | 2007-05-16 18:08:04 -0700 (Wed, 16 May 2007) | 1 line

    calendar.py gets no benefit from xrange() instead of range()
  ........
    r55395 | brett.cannon | 2007-05-16 19:02:56 -0700 (Wed, 16 May 2007) | 3 lines

    Complete deprecation of BaseException.message.  Some subclasses were directly
    accessing the message attribute instead of using the descriptor.
  ........
    r55396 | neal.norwitz | 2007-05-16 23:11:36 -0700 (Wed, 16 May 2007) | 4 lines

    Reduce the max stack depth to see if this fixes the segfaults on
    Windows and some other boxes.  If this is successful, this rev should
    be backported.  I'm not sure how close to the limit we should push this.
  ........
    r55397 | neal.norwitz | 2007-05-16 23:23:50 -0700 (Wed, 16 May 2007) | 4 lines

    Set the depth to something very small to try to determine if the
    crashes on Windows are really due to the stack size or possibly
    some other problem.
  ........
    r55398 | neal.norwitz | 2007-05-17 00:04:46 -0700 (Thu, 17 May 2007) | 4 lines

    Last try for tweaking the max stack depth.  5000 was the original value,
    4000 didn't work either.  1000 does work on Windows.  If 2000 works,
    that will hopefully be a reasonable balance.
  ........
    r55412 | fred.drake | 2007-05-17 12:29:58 -0700 (Thu, 17 May 2007) | 1 line

    fix argument name in documentation; match the implementation
  ........
    r55427 | neal.norwitz | 2007-05-17 22:47:16 -0700 (Thu, 17 May 2007) | 1 line

    Verify neither dumps or loads overflow the stack and segfault.
  ........
    r55446 | collin.winter | 2007-05-18 16:11:24 -0700 (Fri, 18 May 2007) | 1 line

    Backport PEP 3110's new 'except' syntax to 2.6.
  ........
    r55448 | raymond.hettinger | 2007-05-18 18:11:16 -0700 (Fri, 18 May 2007) | 1 line

    Improvements to NamedTuple's implementation, tests, and documentation
  ........
    r55449 | raymond.hettinger | 2007-05-18 18:50:11 -0700 (Fri, 18 May 2007) | 1 line

    Fix beginner mistake -- don't mix spaces and tabs.
  ........
    r55450 | neal.norwitz | 2007-05-18 20:48:47 -0700 (Fri, 18 May 2007) | 1 line

    Clear data so random memory does not get freed.  Will backport.
  ........
    r55452 | neal.norwitz | 2007-05-18 21:34:55 -0700 (Fri, 18 May 2007) | 3 lines

    Whoops, need to pay attention to those test failures.
    Move the clear to *before* the first use, not after.
  ........
    r55453 | neal.norwitz | 2007-05-18 21:35:52 -0700 (Fri, 18 May 2007) | 1 line

    Give some clue as to what happened if the test fails.
  ........
    r55455 | georg.brandl | 2007-05-19 11:09:26 -0700 (Sat, 19 May 2007) | 2 lines

    Fix docstring for add_package in site.py.
  ........
    r55458 | brett.cannon | 2007-05-20 00:09:50 -0700 (Sun, 20 May 2007) | 2 lines

    Remove the rgbimg module.  It has been deprecated since Python 2.5.
  ........
    r55465 | nick.coghlan | 2007-05-20 04:12:49 -0700 (Sun, 20 May 2007) | 1 line

    Fix typo in example (should be backported, but my maintenance branch is woefully out of date)
  ........
................
  r55472 | brett.cannon | 2007-05-20 12:06:18 -0700 (Sun, 20 May 2007) | 2 lines

  Remove imageop from the Windows build process.
................
  r55486 | neal.norwitz | 2007-05-20 23:59:52 -0700 (Sun, 20 May 2007) | 1 line

  Remove callable() builtin
................
  r55506 | neal.norwitz | 2007-05-22 00:43:29 -0700 (Tue, 22 May 2007) | 78 lines

  Merged revisions 55468-55505 via svnmerge from
  svn+ssh://pythondev@svn.python.org/python/trunk

  ........
    r55468 | neal.norwitz | 2007-05-20 11:06:27 -0700 (Sun, 20 May 2007) | 1 line

    rotor is long gone.
  ........
    r55470 | neal.norwitz | 2007-05-20 11:43:00 -0700 (Sun, 20 May 2007) | 1 line

    Update directories/files at the top-level.
  ........
    r55471 | brett.cannon | 2007-05-20 12:05:06 -0700 (Sun, 20 May 2007) | 2 lines

    Try to remove rgbimg from Windows builds.
  ........
    r55474 | brett.cannon | 2007-05-20 16:17:38 -0700 (Sun, 20 May 2007) | 4 lines

    Remove the macfs module.  This led to the deprecation of macostools.touched();
    it completely relied on macfs and is a no-op on OS X according to code
    comments.
  ........
    r55476 | brett.cannon | 2007-05-20 16:56:18 -0700 (Sun, 20 May 2007) | 3 lines

    Move imgfile import to the global namespace to trigger an import error ASAP to
    prevent creation of a test file.
  ........
    r55477 | brett.cannon | 2007-05-20 16:57:38 -0700 (Sun, 20 May 2007) | 3 lines

    Cause posixfile to raise a DeprecationWarning.  Documented as deprecated since
    Ptyhon 1.5.
  ........
    r55479 | andrew.kuchling | 2007-05-20 17:03:15 -0700 (Sun, 20 May 2007) | 1 line

    Note removed modules
  ........
    r55481 | martin.v.loewis | 2007-05-20 21:35:47 -0700 (Sun, 20 May 2007) | 2 lines

    Add Alexandre Vassalotti.
  ........
    r55482 | george.yoshida | 2007-05-20 21:41:21 -0700 (Sun, 20 May 2007) | 4 lines

    fix against r55474 [Remove the macfs module]

    Remove "libmacfs.tex" from Makefile.deps and mac/mac.tex.
  ........
    r55487 | raymond.hettinger | 2007-05-21 01:13:35 -0700 (Mon, 21 May 2007) | 1 line

    Replace assertion with straight error-checking.
  ........
    r55489 | raymond.hettinger | 2007-05-21 09:40:10 -0700 (Mon, 21 May 2007) | 1 line

    Allow all alphanumeric and underscores in type and field names.
  ........
    r55490 | facundo.batista | 2007-05-21 10:32:32 -0700 (Mon, 21 May 2007) | 5 lines


    Added timeout support to HTTPSConnection, through the
    socket.create_connection function. Also added a small
    test for this, and updated NEWS file.
  ........
    r55495 | georg.brandl | 2007-05-21 13:34:16 -0700 (Mon, 21 May 2007) | 2 lines

    Patch #1686487: you can now pass any mapping after '**' in function calls.
  ........
    r55502 | neal.norwitz | 2007-05-21 23:03:36 -0700 (Mon, 21 May 2007) | 1 line

    Document new params to HTTPSConnection
  ........
    r55504 | neal.norwitz | 2007-05-22 00:16:10 -0700 (Tue, 22 May 2007) | 1 line

    Stop using METH_OLDARGS
  ........
    r55505 | neal.norwitz | 2007-05-22 00:16:44 -0700 (Tue, 22 May 2007) | 1 line

    Stop using METH_OLDARGS implicitly
  ........
................Merged revisions 53623-53858 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r53624 | peter.astrand | 2007-02-02 20:06:36 +0100 (Fri, 02 Feb 2007) | 1 line

  We had several if statements checking the value of a fd. This is unsafe, since valid fds might be zero. We should check for not None instead.
........
  r53635 | kurt.kaiser | 2007-02-05 07:03:18 +0100 (Mon, 05 Feb 2007) | 2 lines

  Add 'raw' support to configHandler. Patch 1650174 Tal Einat.
........
  r53641 | kurt.kaiser | 2007-02-06 00:02:16 +0100 (Tue, 06 Feb 2007) | 5 lines

  1. Calltips now 'handle' tuples in the argument list (display '<tuple>' :)
     Suggested solution by Christos Georgiou, Bug 791968.
  2. Clean up tests, were not failing when they should have been.
  4. Remove some camelcase and an unneeded try/except block.
........
  r53644 | kurt.kaiser | 2007-02-06 04:21:40 +0100 (Tue, 06 Feb 2007) | 2 lines

  Clean up ModifiedInterpreter.runcode() structure
........
  r53646 | peter.astrand | 2007-02-06 16:37:50 +0100 (Tue, 06 Feb 2007) | 1 line

  Applied patch 1124861.3.patch to solve bug #1124861: Automatically create pipes on Windows, if GetStdHandle fails. Will backport.
........
  r53648 | lars.gustaebel | 2007-02-06 19:38:13 +0100 (Tue, 06 Feb 2007) | 4 lines

  Patch #1652681: create nonexistent files in append mode and
  allow appending to empty files.
........
  r53649 | kurt.kaiser | 2007-02-06 20:09:43 +0100 (Tue, 06 Feb 2007) | 4 lines

  Updated patch (CodeContext.061217.patch) to
  [ 1362975 ] CodeContext - Improved text indentation
  Tal Einat 16Dec06
........
  r53650 | kurt.kaiser | 2007-02-06 20:21:19 +0100 (Tue, 06 Feb 2007) | 2 lines

  narrow exception per [ 1540849 ] except too broad
........
  r53653 | kurt.kaiser | 2007-02-07 04:39:41 +0100 (Wed, 07 Feb 2007) | 4 lines

  [ 1621265 ] Auto-completion list placement
  Move AC window below input line unless not enough space, then put it above.
  Patch: Tal Einat
........
  r53654 | kurt.kaiser | 2007-02-07 09:07:13 +0100 (Wed, 07 Feb 2007) | 2 lines

  Handle AttributeError during calltip lookup
........
  r53656 | raymond.hettinger | 2007-02-07 21:08:22 +0100 (Wed, 07 Feb 2007) | 3 lines

  SF #1615701:  make d.update(m) honor __getitem__() and keys() in dict subclasses
........
  r53658 | raymond.hettinger | 2007-02-07 22:04:20 +0100 (Wed, 07 Feb 2007) | 1 line

  SF: 1397711 Set docs conflated immutable and hashable
........
  r53660 | raymond.hettinger | 2007-02-07 22:42:17 +0100 (Wed, 07 Feb 2007) | 1 line

  Check for a common user error with defaultdict().
........
  r53662 | raymond.hettinger | 2007-02-07 23:24:07 +0100 (Wed, 07 Feb 2007) | 1 line

  Bug #1575169: operator.isSequenceType() now returns False for subclasses of dict.
........
  r53664 | raymond.hettinger | 2007-02-08 00:49:03 +0100 (Thu, 08 Feb 2007) | 1 line

  Silence compiler warning
........
  r53666 | raymond.hettinger | 2007-02-08 01:07:32 +0100 (Thu, 08 Feb 2007) | 1 line

  Do not let overflows in enumerate() and count() pass silently.
........
  r53668 | raymond.hettinger | 2007-02-08 01:50:39 +0100 (Thu, 08 Feb 2007) | 1 line

  Bypass set specific optimizations for set and frozenset subclasses.
........
  r53670 | raymond.hettinger | 2007-02-08 02:42:35 +0100 (Thu, 08 Feb 2007) | 1 line

  Fix docstring bug
........
  r53671 | martin.v.loewis | 2007-02-08 10:13:36 +0100 (Thu, 08 Feb 2007) | 3 lines

  Bug #1653736: Complain about keyword arguments to time.isoformat.
  Will backport to 2.5.
........
  r53679 | kurt.kaiser | 2007-02-08 23:58:18 +0100 (Thu, 08 Feb 2007) | 6 lines

  Corrected some bugs in AutoComplete.  Also, Page Up/Down in ACW implemented;
  mouse and cursor selection in ACWindow implemented; double Tab inserts current
  selection and closes ACW (similar to double-click and Return); scroll wheel now
  works in ACW.  Added AutoComplete instructions to IDLE Help.
........
  r53689 | martin.v.loewis | 2007-02-09 13:19:32 +0100 (Fri, 09 Feb 2007) | 3 lines

  Bug #1653736: Properly discard third argument to slot_nb_inplace_power.
  Will backport.
........
  r53691 | martin.v.loewis | 2007-02-09 13:36:48 +0100 (Fri, 09 Feb 2007) | 4 lines

  Bug #1600860: Search for shared python library in LIBDIR, not
  lib/python/config, on "linux" and "gnu" systems.
  Will backport.
........
  r53693 | martin.v.loewis | 2007-02-09 13:58:49 +0100 (Fri, 09 Feb 2007) | 2 lines

  Update broken link. Will backport to 2.5.
........
  r53697 | georg.brandl | 2007-02-09 19:48:41 +0100 (Fri, 09 Feb 2007) | 2 lines

  Bug #1656078: typo in in profile docs.
........
  r53731 | brett.cannon | 2007-02-11 06:36:00 +0100 (Sun, 11 Feb 2007) | 3 lines

  Change a very minor inconsistency (that is purely cosmetic) in the AST
  definition.
........
  r53735 | skip.montanaro | 2007-02-11 19:24:37 +0100 (Sun, 11 Feb 2007) | 1 line

  fix trace.py --ignore-dir
........
  r53741 | brett.cannon | 2007-02-11 20:44:41 +0100 (Sun, 11 Feb 2007) | 3 lines

  Check in changed Python-ast.c from a cosmetic change to Python.asdl (in
  r53731).
........
  r53751 | brett.cannon | 2007-02-12 04:51:02 +0100 (Mon, 12 Feb 2007) | 5 lines

  Modify Parser/asdl_c.py so that the __version__ number for Python/Python-ast.c
  is specified at the top of the file.  Also add a note that Python/Python-ast.c
  needs to be committed separately after a change to the AST grammar to capture
  the revision number of the change (which is what __version__ is set to).
........
  r53752 | lars.gustaebel | 2007-02-12 10:25:53 +0100 (Mon, 12 Feb 2007) | 3 lines

  Bug #1656581: Point out that external file objects are supposed to be
  at position 0.
........
  r53754 | martin.v.loewis | 2007-02-12 13:21:10 +0100 (Mon, 12 Feb 2007) | 3 lines

  Patch 1463026: Support default namespace in XMLGenerator.
  Fixes #847665. Will backport.
........
  r53757 | armin.rigo | 2007-02-12 17:23:24 +0100 (Mon, 12 Feb 2007) | 4 lines

  Fix the line to what is my guess at the original author's meaning.
  (The line has no effect anyway, but is present because it's
  customary call the base class __init__).
........
  r53763 | martin.v.loewis | 2007-02-13 09:34:45 +0100 (Tue, 13 Feb 2007) | 3 lines

  Patch #685268: Consider a package's __path__ in imputil.
  Will backport.
........
  r53765 | martin.v.loewis | 2007-02-13 10:49:38 +0100 (Tue, 13 Feb 2007) | 2 lines

  Patch #698833: Support file decryption in zipfile.
........
  r53766 | martin.v.loewis | 2007-02-13 11:10:39 +0100 (Tue, 13 Feb 2007) | 3 lines

  Patch #1517891: Make 'a' create the file if it doesn't exist.
  Fixes #1514451.
........
  r53767 | martin.v.loewis | 2007-02-13 13:08:24 +0100 (Tue, 13 Feb 2007) | 3 lines

  Bug #1658794: Remove extraneous 'this'.
  Will backport to 2.5.
........
  r53769 | martin.v.loewis | 2007-02-13 13:14:19 +0100 (Tue, 13 Feb 2007) | 3 lines

  Patch #1657276: Make NETLINK_DNRTMSG conditional.
  Will backport.
........
  r53771 | lars.gustaebel | 2007-02-13 17:09:24 +0100 (Tue, 13 Feb 2007) | 4 lines

  Patch #1647484: Renamed GzipFile's filename attribute to name. The
  filename attribute is still accessible as a property that emits a
  DeprecationWarning.
........
  r53772 | lars.gustaebel | 2007-02-13 17:24:00 +0100 (Tue, 13 Feb 2007) | 3 lines

  Strip the '.gz' extension from the filename that is written to the
  gzip header.
........
  r53774 | martin.v.loewis | 2007-02-14 11:07:37 +0100 (Wed, 14 Feb 2007) | 2 lines

  Patch #1432399: Add HCI sockets.
........
  r53775 | martin.v.loewis | 2007-02-14 12:30:07 +0100 (Wed, 14 Feb 2007) | 2 lines

  Update 1432399 to removal of _BT_SOCKADDR_MEMB.
........
  r53776 | martin.v.loewis | 2007-02-14 12:30:56 +0100 (Wed, 14 Feb 2007) | 3 lines

  Ignore directory time stamps when considering
  whether to rerun libffi configure.
........
  r53778 | lars.gustaebel | 2007-02-14 15:45:12 +0100 (Wed, 14 Feb 2007) | 4 lines

  A missing binary mode in AppendTest caused failures in Windows
  Buildbot.
........
  r53782 | martin.v.loewis | 2007-02-15 10:51:35 +0100 (Thu, 15 Feb 2007) | 2 lines

  Patch #1397848: add the reasoning behind no-resize-on-shrinkage.
........
  r53783 | georg.brandl | 2007-02-15 11:37:59 +0100 (Thu, 15 Feb 2007) | 2 lines

  Make functools.wraps() docs a bit clearer.
........
  r53785 | georg.brandl | 2007-02-15 12:29:04 +0100 (Thu, 15 Feb 2007) | 2 lines

  Patch #1494140: Add documentation for the new struct.Struct object.
........
  r53787 | georg.brandl | 2007-02-15 12:29:55 +0100 (Thu, 15 Feb 2007) | 2 lines

  Add missing \versionadded.
........
  r53800 | brett.cannon | 2007-02-15 23:54:39 +0100 (Thu, 15 Feb 2007) | 11 lines

  Update the encoding package's search function to use absolute imports when
  calling __import__.  This helps make the expected search locations for encoding
  modules be more explicit.

  One could use an explicit value for __path__ when making the call to __import__
  to force the exact location searched for encodings.  This would give the most
  strict search path possible if one is worried about malicious code being
  imported.  The unfortunate side-effect of that is that if __path__ was modified
  on 'encodings' on purpose in a safe way it would not be picked up in future
  __import__ calls.
........
  r53801 | brett.cannon | 2007-02-16 20:33:01 +0100 (Fri, 16 Feb 2007) | 2 lines

  Make the __import__ call in encodings.__init__ absolute with a level 0 call.
........
  r53809 | vinay.sajip | 2007-02-16 23:36:24 +0100 (Fri, 16 Feb 2007) | 1 line

  Minor fix for currentframe (SF #1652788).
........
  r53818 | raymond.hettinger | 2007-02-19 03:03:19 +0100 (Mon, 19 Feb 2007) | 3 lines

  Extend work on revision 52962:  Eliminate redundant calls to PyObject_Hash().
........
  r53820 | raymond.hettinger | 2007-02-19 05:08:43 +0100 (Mon, 19 Feb 2007) | 1 line

  Add merge() function to heapq.
........
  r53821 | raymond.hettinger | 2007-02-19 06:28:28 +0100 (Mon, 19 Feb 2007) | 1 line

  Add tie-breaker count to preserve sort stability.
........
  r53822 | raymond.hettinger | 2007-02-19 07:59:32 +0100 (Mon, 19 Feb 2007) | 1 line

  Use C heapreplace() instead of slower _siftup() in pure python.
........
  r53823 | raymond.hettinger | 2007-02-19 08:30:21 +0100 (Mon, 19 Feb 2007) | 1 line

  Add test for merge stability
........
  r53824 | raymond.hettinger | 2007-02-19 10:14:10 +0100 (Mon, 19 Feb 2007) | 1 line

  Provide an example of defaultdict with non-zero constant factory function.
........
  r53825 | lars.gustaebel | 2007-02-19 10:54:47 +0100 (Mon, 19 Feb 2007) | 2 lines

  Moved misplaced news item.
........
  r53826 | martin.v.loewis | 2007-02-19 11:55:19 +0100 (Mon, 19 Feb 2007) | 3 lines

  Patch #1490190: posixmodule now includes os.chflags() and os.lchflags()
  functions on platforms where the underlying system calls are available.
........
  r53827 | raymond.hettinger | 2007-02-19 19:15:04 +0100 (Mon, 19 Feb 2007) | 1 line

  Fixup docstrings for merge().
........
  r53829 | raymond.hettinger | 2007-02-19 21:44:04 +0100 (Mon, 19 Feb 2007) | 1 line

  Fixup set/dict interoperability.
........
  r53837 | raymond.hettinger | 2007-02-21 06:20:38 +0100 (Wed, 21 Feb 2007) | 1 line

  Add itertools.izip_longest().
........
  r53838 | raymond.hettinger | 2007-02-21 18:22:05 +0100 (Wed, 21 Feb 2007) | 1 line

  Remove filler struct item and fix leak.
........Four months of trunk changes (including a few releases...)

Merged revisions 51434-53004 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r51434 | neal.norwitz | 2006-08-21 20:20:10 +0200 (Mon, 21 Aug 2006) | 1 line

  Fix a couple of ssize-t issues reported by Alexander Belopolsky on python-dev
........
  r51439 | neal.norwitz | 2006-08-21 21:47:08 +0200 (Mon, 21 Aug 2006) | 6 lines

  Patch #1542451: disallow continue anywhere under a finally

  I'm undecided if this should be backported to 2.5 or 2.5.1.
  Armin suggested to wait (I'm of the same opinion).  Thomas W thinks
  it's fine to go in 2.5.
........
  r51443 | neal.norwitz | 2006-08-21 22:16:24 +0200 (Mon, 21 Aug 2006) | 4 lines

  Handle a few more error conditions.

  Klocwork 301 and 302.  Will backport.
........
  r51450 | neal.norwitz | 2006-08-22 00:21:19 +0200 (Tue, 22 Aug 2006) | 5 lines

  Patch #1541585: fix buffer overrun when performing repr() on
  a unicode string in a build with wide unicode (UCS-4) support.

  This code could be improved, so add an XXX comment.
........
  r51456 | neal.norwitz | 2006-08-22 01:44:48 +0200 (Tue, 22 Aug 2006) | 1 line

  Try to get the windows bots working again with the new peephole.c
........
  r51461 | anthony.baxter | 2006-08-22 09:36:59 +0200 (Tue, 22 Aug 2006) | 1 line

  patch for documentation for recent uuid changes (from ping)
........
  r51473 | neal.norwitz | 2006-08-22 15:56:56 +0200 (Tue, 22 Aug 2006) | 1 line

  Alexander Belopolsky pointed out that pos is a size_t
........
  r51489 | jeremy.hylton | 2006-08-22 22:46:00 +0200 (Tue, 22 Aug 2006) | 2 lines

  Expose column offset information in parse trees.
........
  r51497 | andrew.kuchling | 2006-08-23 01:13:43 +0200 (Wed, 23 Aug 2006) | 1 line

  Move functional howto into trunk
........
  r51515 | jeremy.hylton | 2006-08-23 20:37:43 +0200 (Wed, 23 Aug 2006) | 2 lines

  Baby steps towards better tests for tokenize
........
  r51525 | alex.martelli | 2006-08-23 22:42:02 +0200 (Wed, 23 Aug 2006) | 6 lines

  x**2 should about equal x*x (including for a float x such that the result is
  inf) but didn't; added a test to test_float to verify that, and ignored the
  ERANGE value for errno in the pow operation to make the new test pass (with
  help from Marilyn Davis at the Google Python Sprint -- thanks!).
........
  r51526 | jeremy.hylton | 2006-08-23 23:14:03 +0200 (Wed, 23 Aug 2006) | 20 lines

  Bug fixes large and small for tokenize.

  Small: Always generate a NL or NEWLINE token following
         a COMMENT token.  The old code did not generate an NL token if
         the comment was on a line by itself.

  Large: The output of untokenize() will now match the
         input exactly if it is passed the full token sequence.  The
         old, crufty output is still generated if a limited input
         sequence is provided, where limited means that it does not
         include position information for tokens.

  Remaining bug: There is no CONTINUATION token (\) so there is no way
  for untokenize() to handle such code.

  Also, expanded the number of doctests in hopes of eventually removing
  the old-style tests that compare against a golden file.

  Bug fix candidate for Python 2.5.1. (Sigh.)
........
  r51527 | jeremy.hylton | 2006-08-23 23:26:46 +0200 (Wed, 23 Aug 2006) | 5 lines

  Replace dead code with an assert.

  Now that COMMENT tokens are reliably followed by NL or NEWLINE,
  there is never a need to add extra newlines in untokenize.
........
  r51530 | alex.martelli | 2006-08-24 00:17:59 +0200 (Thu, 24 Aug 2006) | 7 lines

  Reverting the patch that tried to fix the issue whereby x**2 raises
  OverflowError while x*x succeeds and produces infinity; apparently
  these inconsistencies cannot be fixed across ``all'' platforms and
  there's a widespread feeling that therefore ``every'' platform
  should keep suffering forevermore.  Ah well.
........
  r51565 | thomas.wouters | 2006-08-24 20:40:20 +0200 (Thu, 24 Aug 2006) | 6 lines


  Fix SF bug #1545837: array.array borks on deepcopy.
  array.__deepcopy__() needs to take an argument, even if it doesn't actually
  use it. Will backport to 2.5 and 2.4 (if applicable.)
........
  r51580 | martin.v.loewis | 2006-08-25 02:03:34 +0200 (Fri, 25 Aug 2006) | 3 lines

  Patch #1545507: Exclude ctypes package in Win64 MSI file.
  Will backport to 2.5.
........
  r51589 | neal.norwitz | 2006-08-25 03:52:49 +0200 (Fri, 25 Aug 2006) | 1 line

  importing types is not necessary if we use isinstance
........
  r51604 | thomas.heller | 2006-08-25 09:27:33 +0200 (Fri, 25 Aug 2006) | 3 lines

  Port _ctypes.pyd to win64 on AMD64.
........
  r51605 | thomas.heller | 2006-08-25 09:34:51 +0200 (Fri, 25 Aug 2006) | 3 lines

  Add missing file for _ctypes.pyd port to win64 on AMD64.
........
  r51606 | thomas.heller | 2006-08-25 11:26:33 +0200 (Fri, 25 Aug 2006) | 6 lines

  Build _ctypes.pyd for win AMD64 into the MSVC project file.
  Since MSVC doesn't know about .asm files, a helper batch file is needed
  to find ml64.exe in predefined locations.  The helper script hardcodes
  the path to the MS Platform SDK.
........
  r51608 | armin.rigo | 2006-08-25 14:44:28 +0200 (Fri, 25 Aug 2006) | 4 lines

  The regular expression engine in '_sre' can segfault when interpreting
  bogus bytecode.  It is unclear whether this is a real bug or a "won't
  fix" case like bogus_code_obj.py.
........
  r51617 | tim.peters | 2006-08-26 00:05:39 +0200 (Sat, 26 Aug 2006) | 2 lines

  Whitespace normalization.
........
  r51618 | tim.peters | 2006-08-26 00:06:44 +0200 (Sat, 26 Aug 2006) | 2 lines

  Add missing svn:eol-style property to text files.
........
  r51619 | tim.peters | 2006-08-26 00:26:21 +0200 (Sat, 26 Aug 2006) | 3 lines

  A new test here relied on preserving invisible trailing
  whitespace in expected output.  Stop that.
........
  r51624 | jack.diederich | 2006-08-26 20:42:06 +0200 (Sat, 26 Aug 2006) | 4 lines

  - Move functions common to all path modules into genericpath.py and have the
    OS speicifc path modules import them.
  - Have os2emxpath import common functions fron ntpath instead of using copies
........
  r51642 | neal.norwitz | 2006-08-29 07:40:58 +0200 (Tue, 29 Aug 2006) | 1 line

  Fix a couple of typos.
........
  r51647 | marc-andre.lemburg | 2006-08-29 12:34:12 +0200 (Tue, 29 Aug 2006) | 5 lines

  Fix a buglet in the error reporting (SF bug report #1546372).

  This should probably go into Python 2.5 or 2.5.1 as well.
........
  r51663 | armin.rigo | 2006-08-31 10:51:06 +0200 (Thu, 31 Aug 2006) | 3 lines

  Doc fix: hashlib objects don't always return a digest of 16 bytes.
  Backport candidate for 2.5.
........
  r51664 | nick.coghlan | 2006-08-31 14:00:43 +0200 (Thu, 31 Aug 2006) | 1 line

  Fix the wrongheaded implementation of context management in the decimal module and add unit tests. (python-dev discussion is ongoing regarding what we do about Python 2.5)
........
  r51665 | nick.coghlan | 2006-08-31 14:51:25 +0200 (Thu, 31 Aug 2006) | 1 line

  Remove the old decimal context management tests from test_contextlib (guess who didn't run the test suite before committing...)
........
  r51669 | brett.cannon | 2006-08-31 20:54:26 +0200 (Thu, 31 Aug 2006) | 4 lines

  Make sure memory is properly cleaned up in file_init.

  Backport candidate.
........
  r51671 | brett.cannon | 2006-08-31 23:47:52 +0200 (Thu, 31 Aug 2006) | 2 lines

  Fix comment about indentation level in C files.
........
  r51674 | brett.cannon | 2006-09-01 00:42:37 +0200 (Fri, 01 Sep 2006) | 3 lines

  Have pre-existing C files use 8 spaces indents (to match old PEP 7 style), but
  have all new files use 4 spaces (to match current PEP 7 style).
........
  r51676 | fred.drake | 2006-09-01 05:57:19 +0200 (Fri, 01 Sep 2006) | 3 lines

  - SF patch #1550263: Enhance and correct unittest docs
  - various minor cleanups for improved consistency
........
  r51677 | georg.brandl | 2006-09-02 00:30:52 +0200 (Sat, 02 Sep 2006) | 2 lines

  evalfile() should be execfile().
........
  r51681 | neal.norwitz | 2006-09-02 04:43:17 +0200 (Sat, 02 Sep 2006) | 1 line

  SF #1547931, fix typo (missing and).  Will backport to 2.5
........
  r51683 | neal.norwitz | 2006-09-02 04:50:35 +0200 (Sat, 02 Sep 2006) | 1 line

  Bug #1548092: fix curses.tparm seg fault on invalid input.  Needs backport to 2.5.1 and earlier.
........
  r51684 | neal.norwitz | 2006-09-02 04:58:13 +0200 (Sat, 02 Sep 2006) | 4 lines

  Bug #1550714: fix SystemError from itertools.tee on negative value for n.

  Needs backport to 2.5.1 and earlier.
........
  r51685 | nick.coghlan | 2006-09-02 05:54:17 +0200 (Sat, 02 Sep 2006) | 1 line

  Make decimal.ContextManager a private implementation detail of decimal.localcontext()
........
  r51686 | nick.coghlan | 2006-09-02 06:04:18 +0200 (Sat, 02 Sep 2006) | 1 line

  Further corrections to the decimal module context management documentation
........
  r51688 | raymond.hettinger | 2006-09-02 19:07:23 +0200 (Sat, 02 Sep 2006) | 1 line

  Fix documentation nits for decimal context managers.
........
  r51690 | neal.norwitz | 2006-09-02 20:51:34 +0200 (Sat, 02 Sep 2006) | 1 line

  Add missing word in comment
........
  r51691 | neal.norwitz | 2006-09-02 21:40:19 +0200 (Sat, 02 Sep 2006) | 7 lines

  Hmm, this test has failed at least twice recently on the OpenBSD and
  Debian sparc buildbots.  Since this goes through a lot of tests
  and hits the disk a lot it could be slow (especially if NFS is involved).
  I'm not sure if that's the problem, but printing periodic msgs shouldn't hurt.
  The code was stolen from test_compiler.
........
  r51693 | nick.coghlan | 2006-09-03 03:02:00 +0200 (Sun, 03 Sep 2006) | 1 line

  Fix final documentation nits before backporting decimal module fixes to 2.5
........
  r51694 | nick.coghlan | 2006-09-03 03:06:07 +0200 (Sun, 03 Sep 2006) | 1 line

  Typo fix for decimal docs
........
  r51697 | nick.coghlan | 2006-09-03 03:20:46 +0200 (Sun, 03 Sep 2006) | 1 line

  NEWS entry on trunk for decimal module changes
........
  r51704 | raymond.hettinger | 2006-09-04 17:32:48 +0200 (Mon, 04 Sep 2006) | 1 line

  Fix endcase for str.rpartition()
........
  r51716 | tim.peters | 2006-09-05 04:18:09 +0200 (Tue, 05 Sep 2006) | 12 lines

  "Conceptual" merge of rev 51711 from the 2.5 branch.

  i_divmod():  As discussed on Python-Dev, changed the overflow
  checking to live happily with recent gcc optimizations that
  assume signed integer arithmetic never overflows.

  This differs from the corresponding change on the 2.5 and 2.4
  branches, using a less obscure approach, but one that /may/
  tickle platform idiocies in their definitions of LONG_MIN.
  The 2.4 + 2.5 change avoided introducing a dependence on
  LONG_MIN, at the cost of substantially goofier code.
........
  r51717 | tim.peters | 2006-09-05 04:21:19 +0200 (Tue, 05 Sep 2006) | 2 lines

  Whitespace normalization.
........
  r51719 | tim.peters | 2006-09-05 04:22:17 +0200 (Tue, 05 Sep 2006) | 2 lines

  Add missing svn:eol-style property to text files.
........
  r51720 | neal.norwitz | 2006-09-05 04:24:03 +0200 (Tue, 05 Sep 2006) | 2 lines

  Fix SF bug #1546288, crash in dict_equal.
........
  r51721 | neal.norwitz | 2006-09-05 04:25:41 +0200 (Tue, 05 Sep 2006) | 1 line

  Fix SF #1552093, eval docstring typo (3 ps in mapping)
........
  r51724 | neal.norwitz | 2006-09-05 04:35:08 +0200 (Tue, 05 Sep 2006) | 1 line

  This was found by Guido AFAIK on p3yk (sic) branch.
........
  r51725 | neal.norwitz | 2006-09-05 04:36:20 +0200 (Tue, 05 Sep 2006) | 1 line

  Add a NEWS entry for str.rpartition() change
........
  r51728 | neal.norwitz | 2006-09-05 04:57:01 +0200 (Tue, 05 Sep 2006) | 1 line

  Patch #1540470, for OpenBSD 4.0.  Backport candidate for 2.[34].
........
  r51729 | neal.norwitz | 2006-09-05 05:53:08 +0200 (Tue, 05 Sep 2006) | 12 lines

  Bug #1520864 (again): unpacking singleton tuples in list comprehensions and
  generator expressions (x for x, in ... ) works again.

  Sigh, I only fixed for loops the first time, not list comps and genexprs too.
  I couldn't find any more unpacking cases where there is a similar bug lurking.

  This code should be refactored to eliminate the duplication.  I'm sure
  the listcomp/genexpr code can be refactored.  I'm not sure if the for loop
  can re-use any of the same code though.

  Will backport to 2.5 (the only place it matters).
........
  r51731 | neal.norwitz | 2006-09-05 05:58:26 +0200 (Tue, 05 Sep 2006) | 1 line

  Add a comment about some refactoring.  (There's probably more that should be done.)  I will reformat this file in the next checkin due to the inconsistent tabs/spaces.
........
  r51732 | neal.norwitz | 2006-09-05 06:00:12 +0200 (Tue, 05 Sep 2006) | 1 line

  M-x untabify
........
  r51737 | hyeshik.chang | 2006-09-05 14:07:09 +0200 (Tue, 05 Sep 2006) | 7 lines

  Fix a few bugs on cjkcodecs found by Oren Tirosh:
  - gbk and gb18030 codec now handle U+30FB KATAKANA MIDDLE DOT correctly.
  - iso2022_jp_2 codec now encodes into G0 for KS X 1001, GB2312
    codepoints to conform the standard.
  - iso2022_jp_3 and iso2022_jp_2004 codec can encode JIS X 2013:2
    codepoints now.
........
  r51738 | hyeshik.chang | 2006-09-05 14:14:57 +0200 (Tue, 05 Sep 2006) | 2 lines

  Fix a typo: 2013 -> 0213
........
  r51740 | georg.brandl | 2006-09-05 14:44:58 +0200 (Tue, 05 Sep 2006) | 3 lines

  Bug #1552618: change docs of dict.has_key() to reflect recommendation
  to use "in".
........
  r51742 | andrew.kuchling | 2006-09-05 15:02:40 +0200 (Tue, 05 Sep 2006) | 1 line

  Rearrange example a bit, and show rpartition() when separator is not found
........
  r51744 | andrew.kuchling | 2006-09-05 15:15:41 +0200 (Tue, 05 Sep 2006) | 1 line

  [Bug #1525469] SimpleXMLRPCServer still uses the sys.exc_{value,type} module-level globals instead of calling sys.exc_info().  Reported by Russell Warren
........
  r51745 | andrew.kuchling | 2006-09-05 15:19:18 +0200 (Tue, 05 Sep 2006) | 3 lines

  [Bug #1526834] Fix crash in pdb when you do 'b f(';
  the function name was placed into a regex pattern and the unbalanced paren
  caused re.compile() to report an error
........
  r51751 | kristjan.jonsson | 2006-09-05 19:58:12 +0200 (Tue, 05 Sep 2006) | 6 lines

  Update the PCBuild8 solution.
  Facilitate cross-compilation by having binaries in separate Win32 and x64 directories.
  Rationalized configs by making proper use of platforms/configurations.
  Remove pythoncore_pgo project.
  Add new PGIRelease and PGORelease configurations to perform Profile Guided Optimisation.
  Removed I64 support, but this can be easily added by copying the x64 platform settings.
........
  r51758 | gustavo.niemeyer | 2006-09-06 03:58:52 +0200 (Wed, 06 Sep 2006) | 3 lines

  Fixing #1531862: Do not close standard file descriptors in the
  subprocess module.
........
  r51760 | neal.norwitz | 2006-09-06 05:58:34 +0200 (Wed, 06 Sep 2006) | 1 line

  Revert 51758 because it broke all the buildbots
........
  r51762 | georg.brandl | 2006-09-06 08:03:59 +0200 (Wed, 06 Sep 2006) | 3 lines

  Bug #1551427: fix a wrong NULL pointer check in the win32 version
  of os.urandom().
........
  r51765 | georg.brandl | 2006-09-06 08:09:31 +0200 (Wed, 06 Sep 2006) | 3 lines

  Bug #1550983: emit better error messages for erroneous relative
  imports (if not in package and if beyond toplevel package).
........
  r51767 | neal.norwitz | 2006-09-06 08:28:06 +0200 (Wed, 06 Sep 2006) | 1 line

  with and as are now keywords.  There are some generated files I can't recreate.
........
  r51770 | georg.brandl | 2006-09-06 08:50:05 +0200 (Wed, 06 Sep 2006) | 5 lines

  Bug #1542051: Exceptions now correctly call PyObject_GC_UnTrack.
  Also make sure that every exception class has __module__ set to
  'exceptions'.
........
  r51785 | georg.brandl | 2006-09-06 22:05:58 +0200 (Wed, 06 Sep 2006) | 2 lines

  Fix missing import of the types module in logging.config.
........
  r51789 | marc-andre.lemburg | 2006-09-06 22:40:22 +0200 (Wed, 06 Sep 2006) | 3 lines

  Add news item for bug fix of SF bug report #1546372.
........
  r51797 | gustavo.niemeyer | 2006-09-07 02:48:33 +0200 (Thu, 07 Sep 2006) | 3 lines

  Fixed subprocess bug #1531862 again, after removing tests
  offending buildbot
........
  r51798 | raymond.hettinger | 2006-09-07 04:42:48 +0200 (Thu, 07 Sep 2006) | 1 line

  Fix refcounts and add error checks.
........
  r51803 | nick.coghlan | 2006-09-07 12:50:34 +0200 (Thu, 07 Sep 2006) | 1 line

  Fix the speed regression in inspect.py by adding another cache to speed up getmodule(). Patch #1553314
........
  r51805 | ronald.oussoren | 2006-09-07 14:03:10 +0200 (Thu, 07 Sep 2006) | 2 lines

  Fix a glaring error and update some version numbers.
........
  r51814 | andrew.kuchling | 2006-09-07 15:56:23 +0200 (Thu, 07 Sep 2006) | 1 line

  Typo fix
........
  r51815 | andrew.kuchling | 2006-09-07 15:59:38 +0200 (Thu, 07 Sep 2006) | 8 lines

  [Bug #1552726] Avoid repeatedly polling in interactive mode -- only put a timeout on the select()
  if an input hook has been defined.  Patch by Richard Boulton.

  This select() code is only executed with readline 2.1, or if
  READLINE_CALLBACKS is defined.

  Backport candidate for 2.5, 2.4, probably earlier versions too.
........
  r51816 | armin.rigo | 2006-09-07 17:06:00 +0200 (Thu, 07 Sep 2006) | 2 lines

  Add a warning notice on top of the generated grammar.txt.
........
  r51819 | thomas.heller | 2006-09-07 20:56:28 +0200 (Thu, 07 Sep 2006) | 5 lines

  Anonymous structure fields that have a bit-width specified did not work,
  and they gave a strange error message from PyArg_ParseTuple:
      function takes exactly 2 arguments (3 given).

  With tests.
........
  r51820 | thomas.heller | 2006-09-07 21:09:54 +0200 (Thu, 07 Sep 2006) | 4 lines

  The cast function did not accept c_char_p or c_wchar_p instances
  as first argument, and failed with a 'bad argument to internal function'
  error message.
........
  r51827 | nick.coghlan | 2006-09-08 12:04:38 +0200 (Fri, 08 Sep 2006) | 1 line

  Add missing NEWS entry for rev 51803
........
  r51828 | andrew.kuchling | 2006-09-08 15:25:23 +0200 (Fri, 08 Sep 2006) | 1 line

  Add missing word
........
  r51829 | andrew.kuchling | 2006-09-08 15:35:49 +0200 (Fri, 08 Sep 2006) | 1 line

  Explain SQLite a bit more clearly
........
  r51830 | andrew.kuchling | 2006-09-08 15:36:36 +0200 (Fri, 08 Sep 2006) | 1 line

  Explain SQLite a bit more clearly
........
  r51832 | andrew.kuchling | 2006-09-08 16:02:45 +0200 (Fri, 08 Sep 2006) | 1 line

  Use native SQLite types
........
  r51833 | andrew.kuchling | 2006-09-08 16:03:01 +0200 (Fri, 08 Sep 2006) | 1 line

  Use native SQLite types
........
  r51835 | andrew.kuchling | 2006-09-08 16:05:10 +0200 (Fri, 08 Sep 2006) | 1 line

  Fix typo in example
........
  r51837 | brett.cannon | 2006-09-09 09:11:46 +0200 (Sat, 09 Sep 2006) | 6 lines

  Remove the __unicode__ method from exceptions.  Allows unicode() to be called
  on exception classes.  Would require introducing a tp_unicode slot to make it
  work otherwise.

  Fixes bug #1551432 and will be backported.
........
  r51854 | neal.norwitz | 2006-09-11 06:24:09 +0200 (Mon, 11 Sep 2006) | 8 lines

  Forward port of 51850 from release25-maint branch.

  As mentioned on python-dev, reverting patch #1504333 because it introduced
  an infinite loop in rev 47154.

  This patch also adds a test to prevent the regression.
........
  r51855 | neal.norwitz | 2006-09-11 06:28:16 +0200 (Mon, 11 Sep 2006) | 5 lines

  Properly handle a NULL returned from PyArena_New().
  (Also fix some whitespace)

  Klocwork #364.
........
  r51856 | neal.norwitz | 2006-09-11 06:32:57 +0200 (Mon, 11 Sep 2006) | 1 line

  Add a "crasher" taken from the sgml bug report referenced in the comment
........
  r51858 | georg.brandl | 2006-09-11 11:38:35 +0200 (Mon, 11 Sep 2006) | 12 lines

  Forward-port of rev. 51857:

  Building with HP's cc on HP-UX turned up a couple of problems.
  _PyGILState_NoteThreadState was declared as static inconsistently.
  Make it static as it's not necessary outside of this module.

  Some tests failed because errno was reset to 0. (I think the tests
  that failed were at least: test_fcntl and test_mailbox).
  Ensure that errno doesn't change after a call to Py_END_ALLOW_THREADS.
  This only affected debug builds.
........
  r51865 | martin.v.loewis | 2006-09-12 21:49:20 +0200 (Tue, 12 Sep 2006) | 2 lines

  Forward-port 51862: Add sgml_input.html.
........
  r51866 | andrew.kuchling | 2006-09-12 22:50:23 +0200 (Tue, 12 Sep 2006) | 1 line

  Markup typo fix
........
  r51867 | andrew.kuchling | 2006-09-12 23:09:02 +0200 (Tue, 12 Sep 2006) | 1 line

  Some editing, markup fixes
........
  r51868 | andrew.kuchling | 2006-09-12 23:21:51 +0200 (Tue, 12 Sep 2006) | 1 line

  More wordsmithing
........
  r51877 | andrew.kuchling | 2006-09-14 13:22:18 +0200 (Thu, 14 Sep 2006) | 1 line

  Make --help mention that -v can be supplied multiple times
........
  r51878 | andrew.kuchling | 2006-09-14 13:28:50 +0200 (Thu, 14 Sep 2006) | 1 line

  Rewrite help message to remove some of the parentheticals.  (There were a lot of them.)
........
  r51883 | ka-ping.yee | 2006-09-15 02:34:19 +0200 (Fri, 15 Sep 2006) | 2 lines

  Fix grammar errors and improve clarity.
........
  r51885 | georg.brandl | 2006-09-15 07:22:24 +0200 (Fri, 15 Sep 2006) | 3 lines

  Correct elementtree module index entry.
........
  r51889 | fred.drake | 2006-09-15 17:18:04 +0200 (Fri, 15 Sep 2006) | 4 lines

  - fix module name in links in formatted documentation
  - minor markup cleanup
  (forward-ported from release25-maint revision 51888)
........
  r51891 | fred.drake | 2006-09-15 18:11:27 +0200 (Fri, 15 Sep 2006) | 3 lines

  revise explanation of returns_unicode to reflect bool values
  and to include the default value
  (merged from release25-maint revision 51890)
........
  r51897 | martin.v.loewis | 2006-09-16 19:36:37 +0200 (Sat, 16 Sep 2006) | 2 lines

  Patch #1557515: Add RLIMIT_SBSIZE.
........
  r51903 | ronald.oussoren | 2006-09-17 20:42:53 +0200 (Sun, 17 Sep 2006) | 2 lines

  Port of revision 51902 in release25-maint to the trunk
........
  r51904 | ronald.oussoren | 2006-09-17 21:23:27 +0200 (Sun, 17 Sep 2006) | 3 lines

  Tweak Mac/Makefile in to ensure that pythonw gets rebuild when the major version
  of python changes (2.5 -> 2.6). Bug #1552935.
........
  r51913 | guido.van.rossum | 2006-09-18 23:36:16 +0200 (Mon, 18 Sep 2006) | 2 lines

  Make this thing executable.
........
  r51920 | gregory.p.smith | 2006-09-19 19:35:04 +0200 (Tue, 19 Sep 2006) | 5 lines

  Fixes a bug with bsddb.DB.stat where the flags and txn keyword
  arguments are transposed.  (reported by Louis Zechtzer)
  ..already committed to release24-maint
  ..needs committing to release25-maint
........
  r51926 | brett.cannon | 2006-09-20 20:34:28 +0200 (Wed, 20 Sep 2006) | 3 lines

  Accidentally didn't commit Misc/NEWS entry on when __unicode__() was removed
  from exceptions.
........
  r51927 | brett.cannon | 2006-09-20 20:43:13 +0200 (Wed, 20 Sep 2006) | 6 lines

  Allow exceptions to be directly sliced again
  (e.g., ``BaseException(1,2,3)[0:2]``).

  Discovered in Python 2.5.0 by Thomas Heller and reported to python-dev.  This
  should be backported to 2.5 .
........
  r51928 | brett.cannon | 2006-09-20 21:28:35 +0200 (Wed, 20 Sep 2006) | 2 lines

  Make python.vim output more deterministic.
........
  r51949 | walter.doerwald | 2006-09-21 17:09:55 +0200 (Thu, 21 Sep 2006) | 2 lines

  Fix typo.
........
  r51950 | jack.diederich | 2006-09-21 19:50:26 +0200 (Thu, 21 Sep 2006) | 5 lines

  * regression bug, count_next was coercing a Py_ssize_t to an unsigned Py_size_t
    which breaks negative counts
  * added test for negative numbers
  will backport to 2.5.1
........
  r51953 | jack.diederich | 2006-09-21 22:34:49 +0200 (Thu, 21 Sep 2006) | 1 line

  added itertools.count(-n) fix
........
  r51971 | neal.norwitz | 2006-09-22 10:16:26 +0200 (Fri, 22 Sep 2006) | 10 lines

  Fix %zd string formatting on Mac OS X so it prints negative numbers.

  In addition to testing positive numbers, verify negative numbers work in configure.
  In order to avoid compiler warnings on OS X 10.4, also change the order of the check
  for the format character to use (PY_FORMAT_SIZE_T) in the sprintf format
  for Py_ssize_t.  This patch changes PY_FORMAT_SIZE_T from "" to "l" if it wasn't
  defined at configure time.  Need to verify the buildbot results.

  Backport candidate (if everyone thinks this patch can't be improved).
........
  r51972 | neal.norwitz | 2006-09-22 10:18:10 +0200 (Fri, 22 Sep 2006) | 7 lines

  Bug #1557232: fix seg fault with def f((((x)))) and def f(((x),)).

  These tests should be improved.  Hopefully this fixes variations when
  flipping back and forth between fpdef and fplist.

  Backport candidate.
........
  r51975 | neal.norwitz | 2006-09-22 10:47:23 +0200 (Fri, 22 Sep 2006) | 4 lines

  Mostly revert this file to the same version as before.  Only force setting
  of PY_FORMAT_SIZE_T to "l" for Mac OSX.  I don't know a better define
  to use.  This should get rid of the warnings on other platforms and Mac too.
........
  r51986 | fred.drake | 2006-09-23 02:26:31 +0200 (Sat, 23 Sep 2006) | 1 line

  add boilerplate "What's New" document so the docs will build
........
  r51987 | neal.norwitz | 2006-09-23 06:11:38 +0200 (Sat, 23 Sep 2006) | 1 line

  Remove extra semi-colons reported by Johnny Lee on python-dev.  Backport if anyone cares.
........
  r51989 | neal.norwitz | 2006-09-23 20:11:58 +0200 (Sat, 23 Sep 2006) | 1 line

  SF Bug #1563963, add missing word and cleanup first sentance
........
  r51990 | brett.cannon | 2006-09-23 21:53:20 +0200 (Sat, 23 Sep 2006) | 3 lines

  Make output on test_strptime() be more verbose in face of failure.  This is in
  hopes that more information will help debug the failing test on HPPA Ubuntu.
........
  r51991 | georg.brandl | 2006-09-24 12:36:01 +0200 (Sun, 24 Sep 2006) | 2 lines

  Fix webbrowser.BackgroundBrowser on Windows.
........
  r51993 | georg.brandl | 2006-09-24 14:35:36 +0200 (Sun, 24 Sep 2006) | 4 lines

  Fix a bug in the parser's future statement handling that led to "with"
  not being recognized as a keyword after, e.g., this statement:
  from __future__ import division, with_statement
........
  r51995 | georg.brandl | 2006-09-24 14:50:24 +0200 (Sun, 24 Sep 2006) | 4 lines

  Fix a bug in traceback.format_exception_only() that led to an error
  being raised when print_exc() was called without an exception set.
  In version 2.4, this printed "None", restored that behavior.
........
  r52000 | armin.rigo | 2006-09-25 17:16:26 +0200 (Mon, 25 Sep 2006) | 2 lines

  Another crasher.
........
  r52011 | brett.cannon | 2006-09-27 01:38:24 +0200 (Wed, 27 Sep 2006) | 2 lines

  Make the error message for when the time data and format do not match clearer.
........
  r52014 | andrew.kuchling | 2006-09-27 18:37:30 +0200 (Wed, 27 Sep 2006) | 1 line

  Add news item for rev. 51815
........
  r52018 | andrew.kuchling | 2006-09-27 21:23:05 +0200 (Wed, 27 Sep 2006) | 1 line

  Make examples do error checking on Py_InitModule
........
  r52032 | brett.cannon | 2006-09-29 00:10:14 +0200 (Fri, 29 Sep 2006) | 2 lines

  Very minor grammatical fix in a comment.
........
  r52048 | george.yoshida | 2006-09-30 07:14:02 +0200 (Sat, 30 Sep 2006) | 4 lines

  SF bug #1567976 : fix typo

  Will backport to 2.5.
........
  r52051 | gregory.p.smith | 2006-09-30 08:08:20 +0200 (Sat, 30 Sep 2006) | 2 lines

  wording change
........
  r52053 | georg.brandl | 2006-09-30 09:24:48 +0200 (Sat, 30 Sep 2006) | 2 lines

  Bug #1567375: a minor logical glitch in example description.
........
  r52056 | georg.brandl | 2006-09-30 09:31:57 +0200 (Sat, 30 Sep 2006) | 3 lines

  Bug #1565661: in webbrowser, split() the command for the default
  GNOME browser in case it is a command with args.
........
  r52058 | georg.brandl | 2006-09-30 10:43:30 +0200 (Sat, 30 Sep 2006) | 4 lines

  Patch #1567691: super() and new.instancemethod() now don't accept
  keyword arguments any more (previously they accepted them, but didn't
  use them).
........
  r52061 | georg.brandl | 2006-09-30 11:03:42 +0200 (Sat, 30 Sep 2006) | 3 lines

  Bug #1566800: make sure that EnvironmentError can be called with any
  number of arguments, as was the case in Python 2.4.
........
  r52063 | georg.brandl | 2006-09-30 11:06:45 +0200 (Sat, 30 Sep 2006) | 2 lines

  Bug #1566663: remove obsolete example from datetime docs.
........
  r52065 | georg.brandl | 2006-09-30 11:13:21 +0200 (Sat, 30 Sep 2006) | 3 lines

  Bug #1566602: correct failure of posixpath unittest when $HOME ends
  with a slash.
........
  r52068 | georg.brandl | 2006-09-30 12:58:01 +0200 (Sat, 30 Sep 2006) | 3 lines

  Bug #1457823: cgi.(Sv)FormContentDict's constructor now takes
  keep_blank_values and strict_parsing keyword arguments.
........
  r52069 | georg.brandl | 2006-09-30 13:06:47 +0200 (Sat, 30 Sep 2006) | 3 lines

  Bug #1560617: in pyclbr, return full module name not only for classes,
  but also for functions.
........
  r52072 | georg.brandl | 2006-09-30 13:17:34 +0200 (Sat, 30 Sep 2006) | 3 lines

  Bug #1556784: allow format strings longer than 127 characters in
  datetime's strftime function.
........
  r52075 | georg.brandl | 2006-09-30 13:22:28 +0200 (Sat, 30 Sep 2006) | 3 lines

  Bug #1446043: correctly raise a LookupError if an encoding name given
  to encodings.search_function() contains a dot.
........
  r52078 | georg.brandl | 2006-09-30 14:02:57 +0200 (Sat, 30 Sep 2006) | 3 lines

  Bug #1546052: clarify that PyString_FromString(AndSize) copies the
  string pointed to by its parameter.
........
  r52080 | georg.brandl | 2006-09-30 14:16:03 +0200 (Sat, 30 Sep 2006) | 3 lines

  Convert test_import to unittest.
........
  r52083 | kurt.kaiser | 2006-10-01 23:16:45 +0200 (Sun, 01 Oct 2006) | 5 lines

  Some syntax errors were being caught by tokenize during the tabnanny
  check, resulting in obscure error messages.  Do the syntax check
  first.  Bug 1562716, 1562719
........
  r52084 | kurt.kaiser | 2006-10-01 23:54:37 +0200 (Sun, 01 Oct 2006) | 3 lines

  Add comment explaining that error msgs may be due to user code when
  running w/o subprocess.
........
  r52086 | martin.v.loewis | 2006-10-02 16:55:51 +0200 (Mon, 02 Oct 2006) | 3 lines

  Fix test for uintptr_t. Fixes #1568842.
  Will backport.
........
  r52089 | martin.v.loewis | 2006-10-02 17:20:37 +0200 (Mon, 02 Oct 2006) | 3 lines

  Guard uintptr_t test with HAVE_STDINT_H, test for
  stdint.h. Will backport.
........
  r52100 | vinay.sajip | 2006-10-03 20:02:37 +0200 (Tue, 03 Oct 2006) | 1 line

  Documentation omitted the additional parameter to LogRecord.__init__ which was added in 2.5. (See SF #1569622).
........
  r52101 | vinay.sajip | 2006-10-03 20:20:26 +0200 (Tue, 03 Oct 2006) | 1 line

  Documentation clarified to mention optional parameters.
........
  r52102 | vinay.sajip | 2006-10-03 20:21:56 +0200 (Tue, 03 Oct 2006) | 1 line

  Modified LogRecord.__init__ to make the func parameter optional. (See SF #1569622).
........
  r52121 | brett.cannon | 2006-10-03 23:58:55 +0200 (Tue, 03 Oct 2006) | 2 lines

  Fix minor typo in a comment.
........
  r52123 | brett.cannon | 2006-10-04 01:23:14 +0200 (Wed, 04 Oct 2006) | 2 lines

  Convert test_imp over to unittest.
........
  r52128 | barry.warsaw | 2006-10-04 04:06:36 +0200 (Wed, 04 Oct 2006) | 3 lines

  decode_rfc2231(): As Christian Robottom Reis points out, it makes no sense to
  test for parts > 3 when we use .split(..., 2).
........
  r52129 | jeremy.hylton | 2006-10-04 04:24:52 +0200 (Wed, 04 Oct 2006) | 9 lines

  Fix for SF bug 1569998: break permitted inside try.

  The compiler was checking that there was something on the fblock
  stack, but not that there was a loop on the stack.  Fixed that and
  added a test for the specific syntax error.

  Bug fix candidate.
........
  r52130 | martin.v.loewis | 2006-10-04 07:47:34 +0200 (Wed, 04 Oct 2006) | 4 lines

  Fix integer negation and absolute value to not rely
  on undefined behaviour of the C compiler anymore.
  Will backport to 2.5 and 2.4.
........
  r52135 | martin.v.loewis | 2006-10-04 11:21:20 +0200 (Wed, 04 Oct 2006) | 1 line

  Forward port r52134: Add uuids for 2.4.4.
........
  r52137 | armin.rigo | 2006-10-04 12:23:57 +0200 (Wed, 04 Oct 2006) | 3 lines

  Compilation problem caused by conflicting typedefs for uint32_t
  (unsigned long vs. unsigned int).
........
  r52139 | armin.rigo | 2006-10-04 14:17:45 +0200 (Wed, 04 Oct 2006) | 23 lines

  Forward-port of r52136,52138: a review of overflow-detecting code.

  * unified the way intobject, longobject and mystrtoul handle
    values around -sys.maxint-1.

  * in general, trying to entierely avoid overflows in any computation
    involving signed ints or longs is extremely involved.  Fixed a few
    simple cases where a compiler might be too clever (but that's all
    guesswork).

  * more overflow checks against bad data in marshal.c.

  * 2.5 specific: fixed a number of places that were still confusing int
    and Py_ssize_t.  Some of them could potentially have caused
    "real-world" breakage.

  * list.pop(x): fixing overflow issues on x was messy.  I just reverted
    to PyArg_ParseTuple("n"), which does the right thing.  (An obscure
    test was trying to give a Decimal to list.pop()... doesn't make
    sense any more IMHO)

  * trying to write a few tests...
........
  r52147 | andrew.kuchling | 2006-10-04 15:42:43 +0200 (Wed, 04 Oct 2006) | 6 lines

  Cause a PyObject_Malloc() failure to trigger a MemoryError, and then
  add 'if (PyErr_Occurred())' checks to various places so that NULL is
  returned properly.

  2.4 backport candidate.
........
  r52148 | martin.v.loewis | 2006-10-04 17:25:28 +0200 (Wed, 04 Oct 2006) | 1 line

  Add MSVC8 project files to create wininst-8.exe.
........
  r52196 | brett.cannon | 2006-10-06 00:02:31 +0200 (Fri, 06 Oct 2006) | 7 lines

  Clarify what "re-initialization" means for init_builtin() and init_dynamic().

  Also remove warning about re-initialization as possibly raising an execption as
  both call _PyImport_FindExtension() which pulls any module that was already
  imported from the Python process' extension cache and just copies the __dict__
  into the module stored in sys.modules.
........
  r52200 | fred.drake | 2006-10-06 02:03:45 +0200 (Fri, 06 Oct 2006) | 3 lines

  - update links
  - remove Sleepycat name now that they have been bought
........
  r52204 | andrew.kuchling | 2006-10-06 12:41:01 +0200 (Fri, 06 Oct 2006) | 1 line

  Case fix
........
  r52208 | georg.brandl | 2006-10-06 14:46:08 +0200 (Fri, 06 Oct 2006) | 3 lines

  Fix name.
........
  r52211 | andrew.kuchling | 2006-10-06 15:18:26 +0200 (Fri, 06 Oct 2006) | 1 line

  [Bug #1545341] Allow 'classifier' parameter to be a tuple as well as a list.  Will backport.
........
  r52212 | armin.rigo | 2006-10-06 18:33:22 +0200 (Fri, 06 Oct 2006) | 4 lines

  A very minor bug fix: this code looks like it is designed to accept
  any hue value and do the modulo itself, except it doesn't quite do
  it in all cases.  At least, the "cannot get here" comment was wrong.
........
  r52213 | andrew.kuchling | 2006-10-06 20:51:55 +0200 (Fri, 06 Oct 2006) | 1 line

  Comment grammar
........
  r52218 | skip.montanaro | 2006-10-07 13:05:02 +0200 (Sat, 07 Oct 2006) | 6 lines

  Note that the excel_tab class is registered as the "excel-tab" dialect.
  Fixes 1572471.  Make a similar change for the excel class and clean up
  references to the Dialects and Formatting Parameters section in a few
  places.
........
  r52221 | georg.brandl | 2006-10-08 09:11:54 +0200 (Sun, 08 Oct 2006) | 3 lines

  Add missing NEWS entry for rev. 52129.
........
  r52223 | hyeshik.chang | 2006-10-08 15:48:34 +0200 (Sun, 08 Oct 2006) | 3 lines

  Bug #1572832: fix a bug in ISO-2022 codecs which may cause segfault
  when encoding non-BMP unicode characters.  (Submitted by Ray Chason)
........
  r52227 | ronald.oussoren | 2006-10-08 19:37:58 +0200 (Sun, 08 Oct 2006) | 4 lines

  Add version number to the link to the python documentation in
  /Developer/Documentation/Python, better for users that install multiple versions
  of python.
........
  r52229 | ronald.oussoren | 2006-10-08 19:40:02 +0200 (Sun, 08 Oct 2006) | 2 lines

  Fix for bug #1570284
........
  r52233 | ronald.oussoren | 2006-10-08 19:49:52 +0200 (Sun, 08 Oct 2006) | 6 lines

  MacOSX: distutils changes the values of BASECFLAGS and LDFLAGS when using a
  universal build of python on OSX 10.3 to ensure that those flags can be used
  to compile code (the universal build uses compiler flags that aren't supported
  on 10.3). This patches gives the same treatment to CFLAGS, PY_CFLAGS and
  BLDSHARED.
........
  r52236 | ronald.oussoren | 2006-10-08 19:51:46 +0200 (Sun, 08 Oct 2006) | 5 lines

  MacOSX: The universal build requires that users have the MacOSX10.4u SDK
  installed to build extensions. This patch makes distutils emit a warning when
  the compiler should use an SDK but that SDK is not installed, hopefully reducing
  some confusion.
........
  r52238 | ronald.oussoren | 2006-10-08 20:18:26 +0200 (Sun, 08 Oct 2006) | 3 lines

  MacOSX: add more logic to recognize the correct startup file to patch to the
  shell profile patching post-install script.
........
  r52242 | andrew.kuchling | 2006-10-09 19:10:12 +0200 (Mon, 09 Oct 2006) | 1 line

  Add news item for rev. 52211 change
........
  r52245 | andrew.kuchling | 2006-10-09 20:05:19 +0200 (Mon, 09 Oct 2006) | 1 line

  Fix wording in comment
........
  r52251 | georg.brandl | 2006-10-09 21:03:06 +0200 (Mon, 09 Oct 2006) | 2 lines

  Patch #1572724: fix typo ('=' instead of '==') in _msi.c.
........
  r52255 | barry.warsaw | 2006-10-09 21:43:24 +0200 (Mon, 09 Oct 2006) | 2 lines

  List gc.get_count() in the module docstring.
........
  r52257 | martin.v.loewis | 2006-10-09 22:44:25 +0200 (Mon, 09 Oct 2006) | 1 line

  Bug #1565150: Fix subsecond processing for os.utime on Windows.
........
  r52268 | ronald.oussoren | 2006-10-10 09:55:06 +0200 (Tue, 10 Oct 2006) | 2 lines

  MacOSX: fix permission problem in the generated installer
........
  r52293 | georg.brandl | 2006-10-12 09:38:04 +0200 (Thu, 12 Oct 2006) | 2 lines

  Bug #1575746: fix typo in property() docs.
........
  r52295 | georg.brandl | 2006-10-12 09:57:21 +0200 (Thu, 12 Oct 2006) | 3 lines

  Bug #813342: Start the IDLE subprocess with -Qnew if the parent
  is started with that option.
........
  r52297 | georg.brandl | 2006-10-12 10:22:53 +0200 (Thu, 12 Oct 2006) | 2 lines

  Bug #1565919: document set types in the Language Reference.
........
  r52299 | georg.brandl | 2006-10-12 11:20:33 +0200 (Thu, 12 Oct 2006) | 3 lines

  Bug #1550524: better heuristics to find correct class definition
  in inspect.findsource().
........
  r52301 | georg.brandl | 2006-10-12 11:47:12 +0200 (Thu, 12 Oct 2006) | 4 lines

  Bug #1548891: The cStringIO.StringIO() constructor now encodes unicode
  arguments with the system default encoding just like the write()
  method does, instead of converting it to a raw buffer.
........
  r52303 | georg.brandl | 2006-10-12 13:14:40 +0200 (Thu, 12 Oct 2006) | 2 lines

  Bug #1546628: add a note about urlparse.urljoin() and absolute paths.
........
  r52305 | georg.brandl | 2006-10-12 13:27:59 +0200 (Thu, 12 Oct 2006) | 3 lines

  Bug #1545497: when given an explicit base, int() did ignore NULs
  embedded in the string to convert.
........
  r52307 | georg.brandl | 2006-10-12 13:41:11 +0200 (Thu, 12 Oct 2006) | 3 lines

  Add a note to fpectl docs that it's not built by default
  (bug #1556261).
........
  r52309 | georg.brandl | 2006-10-12 13:46:57 +0200 (Thu, 12 Oct 2006) | 3 lines

  Bug #1560114: the Mac filesystem does have accurate information
  about the case of filenames.
........
  r52311 | georg.brandl | 2006-10-12 13:59:27 +0200 (Thu, 12 Oct 2006) | 2 lines

  Small grammar fix, thanks Sjoerd.
........
  r52313 | georg.brandl | 2006-10-12 14:03:07 +0200 (Thu, 12 Oct 2006) | 2 lines

  Fix tarfile depending on buggy int('1\0', base) behavior.
........
  r52315 | georg.brandl | 2006-10-12 14:33:07 +0200 (Thu, 12 Oct 2006) | 2 lines

  Bug #1283491: follow docstring convention wrt. keyword-able args in sum().
........
  r52316 | georg.brandl | 2006-10-12 15:08:16 +0200 (Thu, 12 Oct 2006) | 3 lines

  Bug #1560179: speed up posixpath.(dir|base)name
........
  r52327 | brett.cannon | 2006-10-14 08:36:45 +0200 (Sat, 14 Oct 2006) | 3 lines

  Clean up the language of a sentence relating to the connect() function and
  user-defined datatypes.
........
  r52332 | neal.norwitz | 2006-10-14 23:33:38 +0200 (Sat, 14 Oct 2006) | 3 lines

  Update the peephole optimizer to remove more dead code (jumps after returns)
  and inline jumps to returns.
........
  r52333 | martin.v.loewis | 2006-10-15 09:54:40 +0200 (Sun, 15 Oct 2006) | 4 lines

  Patch #1576954: Update VC6 build directory; remove redundant
  files in VC7. Will backport to 2.5.
........
  r52335 | martin.v.loewis | 2006-10-15 10:43:33 +0200 (Sun, 15 Oct 2006) | 1 line

  Patch #1576166: Support os.utime for directories on Windows NT+.
........
  r52336 | martin.v.loewis | 2006-10-15 10:51:22 +0200 (Sun, 15 Oct 2006) | 2 lines

  Patch #1577551: Add ctypes and ET build support for VC6.
  Will backport to 2.5.
........
  r52338 | martin.v.loewis | 2006-10-15 11:35:51 +0200 (Sun, 15 Oct 2006) | 1 line

  Loosen the test for equal time stamps.
........
  r52339 | martin.v.loewis | 2006-10-15 11:43:39 +0200 (Sun, 15 Oct 2006) | 2 lines

  Bug #1567666: Emulate GetFileAttributesExA for Win95.
  Will backport to 2.5.
........
  r52341 | martin.v.loewis | 2006-10-15 13:02:07 +0200 (Sun, 15 Oct 2006) | 2 lines

  Round to int, because some systems support sub-second time stamps in stat, but not in utime.
  Also be consistent with modifying only mtime, not atime.
........
  r52342 | martin.v.loewis | 2006-10-15 13:57:40 +0200 (Sun, 15 Oct 2006) | 2 lines

  Set the eol-style for project files to "CRLF".
........
  r52343 | martin.v.loewis | 2006-10-15 13:59:56 +0200 (Sun, 15 Oct 2006) | 3 lines

  Drop binary property on dsp files, set eol-style
  to CRLF instead.
........
  r52344 | martin.v.loewis | 2006-10-15 14:01:43 +0200 (Sun, 15 Oct 2006) | 2 lines

  Remove binary property, set eol-style to CRLF instead.
........
  r52346 | martin.v.loewis | 2006-10-15 16:30:38 +0200 (Sun, 15 Oct 2006) | 2 lines

  Mention the bdist_msi module. Will backport to 2.5.
........
  r52354 | brett.cannon | 2006-10-16 05:09:52 +0200 (Mon, 16 Oct 2006) | 3 lines

  Fix turtle so that you can launch the demo2 function on its own instead of only
  when the module is launched as a script.
........
  r52356 | martin.v.loewis | 2006-10-17 17:18:06 +0200 (Tue, 17 Oct 2006) | 2 lines

  Patch #1457736: Update VC6 to use current PCbuild settings.
  Will backport to 2.5.
........
  r52360 | martin.v.loewis | 2006-10-17 20:09:55 +0200 (Tue, 17 Oct 2006) | 2 lines

  Remove obsolete file. Will backport.
........
  r52363 | martin.v.loewis | 2006-10-17 20:59:23 +0200 (Tue, 17 Oct 2006) | 4 lines

  Forward-port r52358:
  - Bug #1578513: Cross compilation was broken by a change to configure.
  Repair so that it's back to how it was in 2.4.3.
........
  r52365 | thomas.heller | 2006-10-17 21:30:48 +0200 (Tue, 17 Oct 2006) | 6 lines

  ctypes callback functions only support 'fundamental' result types.
  Check this and raise an error when something else is used - before
  this change ctypes would hang or crash when such a callback was
  called.  This is a partial fix for #1574584.

  Will backport to release25-maint.
........
  r52377 | tim.peters | 2006-10-18 07:06:06 +0200 (Wed, 18 Oct 2006) | 2 lines

  newIobject():  repaired incorrect cast to quiet MSVC warning.
........
  r52378 | tim.peters | 2006-10-18 07:09:12 +0200 (Wed, 18 Oct 2006) | 2 lines

  Whitespace normalization.
........
  r52379 | tim.peters | 2006-10-18 07:10:28 +0200 (Wed, 18 Oct 2006) | 2 lines

  Add missing svn:eol-style to text files.
........
  r52387 | martin.v.loewis | 2006-10-19 12:58:46 +0200 (Thu, 19 Oct 2006) | 3 lines

  Add check for the PyArg_ParseTuple format, and declare
  it if it is supported.
........
  r52388 | martin.v.loewis | 2006-10-19 13:00:37 +0200 (Thu, 19 Oct 2006) | 3 lines

  Fix various minor errors in passing arguments to
  PyArg_ParseTuple.
........
  r52389 | martin.v.loewis | 2006-10-19 18:01:37 +0200 (Thu, 19 Oct 2006) | 2 lines

  Restore CFLAGS after checking for __attribute__
........
  r52390 | andrew.kuchling | 2006-10-19 23:55:55 +0200 (Thu, 19 Oct 2006) | 1 line

  [Bug #1576348] Fix typo in example
........
  r52414 | walter.doerwald | 2006-10-22 10:59:41 +0200 (Sun, 22 Oct 2006) | 2 lines

  Port test___future__ to unittest.
........
  r52415 | ronald.oussoren | 2006-10-22 12:45:18 +0200 (Sun, 22 Oct 2006) | 3 lines

  Patch #1580674: with this patch os.readlink uses the filesystem encoding to
  decode unicode objects and returns an unicode object when the argument is one.
........
  r52416 | martin.v.loewis | 2006-10-22 12:46:18 +0200 (Sun, 22 Oct 2006) | 3 lines

  Patch #1580872: Remove duplicate declaration of PyCallable_Check.
  Will backport to 2.5.
........
  r52418 | martin.v.loewis | 2006-10-22 12:55:15 +0200 (Sun, 22 Oct 2006) | 4 lines

  - Patch #1560695: Add .note.GNU-stack to ctypes' sysv.S so that
    ctypes isn't considered as requiring executable stacks.
  Will backport to 2.5.
........
  r52420 | martin.v.loewis | 2006-10-22 15:45:13 +0200 (Sun, 22 Oct 2006) | 3 lines

  Remove passwd.adjunct.byname from list of maps
  for test_nis. Will backport to 2.5.
........
  r52431 | georg.brandl | 2006-10-24 18:54:16 +0200 (Tue, 24 Oct 2006) | 2 lines

  Patch [ 1583506 ] tarfile.py: 100-char filenames are truncated
........
  r52446 | andrew.kuchling | 2006-10-26 21:10:46 +0200 (Thu, 26 Oct 2006) | 1 line

  [Bug #1579796] Wrong syntax for PyDateTime_IMPORT in documentation.  Reported by David Faure.
........
  r52449 | andrew.kuchling | 2006-10-26 21:16:46 +0200 (Thu, 26 Oct 2006) | 1 line

  Typo fix
........
  r52452 | martin.v.loewis | 2006-10-27 08:16:31 +0200 (Fri, 27 Oct 2006) | 3 lines

  Patch #1549049: Rewrite type conversion in structmember.
  Fixes #1545696 and #1566140. Will backport to 2.5.
........
  r52454 | martin.v.loewis | 2006-10-27 08:42:27 +0200 (Fri, 27 Oct 2006) | 2 lines

  Check for values.h. Will backport.
........
  r52456 | martin.v.loewis | 2006-10-27 09:06:52 +0200 (Fri, 27 Oct 2006) | 2 lines

  Get DBL_MAX from float.h not values.h. Will backport.
........
  r52458 | martin.v.loewis | 2006-10-27 09:13:28 +0200 (Fri, 27 Oct 2006) | 2 lines

  Patch #1567274: Support SMTP over TLS.
........
  r52459 | andrew.kuchling | 2006-10-27 13:33:29 +0200 (Fri, 27 Oct 2006) | 1 line

  Set svn:keywords property
........
  r52460 | andrew.kuchling | 2006-10-27 13:36:41 +0200 (Fri, 27 Oct 2006) | 1 line

  Add item
........
  r52461 | andrew.kuchling | 2006-10-27 13:37:01 +0200 (Fri, 27 Oct 2006) | 1 line

  Some wording changes and markup fixes
........
  r52462 | andrew.kuchling | 2006-10-27 14:18:38 +0200 (Fri, 27 Oct 2006) | 1 line

  [Bug #1585690] Note that line_num was added in Python 2.5
........
  r52464 | andrew.kuchling | 2006-10-27 14:50:38 +0200 (Fri, 27 Oct 2006) | 1 line

  [Bug #1583946] Reword description of server and issuer
........
  r52466 | andrew.kuchling | 2006-10-27 15:06:25 +0200 (Fri, 27 Oct 2006) | 1 line

  [Bug #1562583] Mention the set_reuse_addr() method
........
  r52469 | andrew.kuchling | 2006-10-27 15:22:46 +0200 (Fri, 27 Oct 2006) | 4 lines

  [Bug #1542016] Report PCALL_POP value.  This makes the return value of sys.callstats() match its docstring.

  Backport candidate.  Though it's an API change, this is a pretty obscure
  portion of the API.
........
  r52473 | andrew.kuchling | 2006-10-27 16:53:41 +0200 (Fri, 27 Oct 2006) | 1 line

  Point users to the subprocess module in the docs for os.system, os.spawn*, os.popen2, and the popen2 and commands modules
........
  r52476 | andrew.kuchling | 2006-10-27 18:39:10 +0200 (Fri, 27 Oct 2006) | 1 line

  [Bug #1576241] Let functools.wraps work with built-in functions
........
  r52478 | andrew.kuchling | 2006-10-27 18:55:34 +0200 (Fri, 27 Oct 2006) | 1 line

  [Bug #1575506] The _singlefileMailbox class was using the wrong file object in its flush() method, causing an error
........
  r52480 | andrew.kuchling | 2006-10-27 19:06:16 +0200 (Fri, 27 Oct 2006) | 1 line

  Clarify docstring
........
  r52481 | andrew.kuchling | 2006-10-27 19:11:23 +0200 (Fri, 27 Oct 2006) | 5 lines

  [Patch #1574068 by Scott Dial] urllib and urllib2 were using
  base64.encodestring() for encoding authentication data.
  encodestring() can include newlines for very long input, which
  produced broken HTTP headers.
........
  r52483 | andrew.kuchling | 2006-10-27 20:13:46 +0200 (Fri, 27 Oct 2006) | 1 line

  Check db_setup_debug for a few print statements; change sqlite_setup_debug to False
........
  r52484 | andrew.kuchling | 2006-10-27 20:15:02 +0200 (Fri, 27 Oct 2006) | 1 line

  [Patch #1503717] Tiny patch from Chris AtLee to stop a lengthy line from being printed
........
  r52485 | thomas.heller | 2006-10-27 20:31:36 +0200 (Fri, 27 Oct 2006) | 5 lines

  WindowsError.str should display the windows error code,
  not the posix error code; with test.
  Fixes #1576174.

  Will backport to release25-maint.
........
  r52487 | thomas.heller | 2006-10-27 21:05:53 +0200 (Fri, 27 Oct 2006) | 4 lines

  Modulefinder now handles absolute and relative imports, including
  tests.

  Will backport to release25-maint.
........
  r52488 | georg.brandl | 2006-10-27 22:39:43 +0200 (Fri, 27 Oct 2006) | 2 lines

  Patch #1552024: add decorator support to unparse.py demo script.
........
  r52492 | walter.doerwald | 2006-10-28 12:47:12 +0200 (Sat, 28 Oct 2006) | 2 lines

  Port test_bufio to unittest.
........
  r52493 | georg.brandl | 2006-10-28 15:10:17 +0200 (Sat, 28 Oct 2006) | 6 lines

  Convert test_global, test_scope and test_grammar to unittest.

  I tried to enclose all tests which must be run at the toplevel
  (instead of inside a method) in exec statements.
........
  r52494 | georg.brandl | 2006-10-28 15:11:41 +0200 (Sat, 28 Oct 2006) | 3 lines

  Update outstanding bugs test file.
........
  r52495 | georg.brandl | 2006-10-28 15:51:49 +0200 (Sat, 28 Oct 2006) | 3 lines

  Convert test_math to unittest.
........
  r52496 | georg.brandl | 2006-10-28 15:56:58 +0200 (Sat, 28 Oct 2006) | 3 lines

  Convert test_opcodes to unittest.
........
  r52497 | georg.brandl | 2006-10-28 18:04:04 +0200 (Sat, 28 Oct 2006) | 2 lines

  Fix nth() itertool recipe.
........
  r52500 | georg.brandl | 2006-10-28 22:25:09 +0200 (Sat, 28 Oct 2006) | 2 lines

  make test_grammar pass with python -O
........
  r52501 | neal.norwitz | 2006-10-28 23:15:30 +0200 (Sat, 28 Oct 2006) | 6 lines

  Add some asserts.  In sysmodule, I think these were to try to silence
  some warnings from Klokwork.  They verify the assumptions of the format
  of svn version output.

  The assert in the thread module helped debug a problem on HP-UX.
........
  r52502 | neal.norwitz | 2006-10-28 23:16:54 +0200 (Sat, 28 Oct 2006) | 5 lines

  Fix warnings with HP's C compiler.  It doesn't recognize that infinite
  loops are, um, infinite.  These conditions should not be able to happen.

  Will backport.
........
  r52503 | neal.norwitz | 2006-10-28 23:17:51 +0200 (Sat, 28 Oct 2006) | 5 lines

  Fix crash in test on HP-UX.  Apparently, it's not possible to delete a lock if
  it's held (even by the current thread).

  Will backport.
........
  r52504 | neal.norwitz | 2006-10-28 23:19:07 +0200 (Sat, 28 Oct 2006) | 6 lines

  Fix bug #1565514, SystemError not raised on too many nested blocks.
  It seems like this should be a different error than SystemError, but
  I don't have any great ideas and SystemError was raised in 2.4 and earlier.

  Will backport.
........
  r52505 | neal.norwitz | 2006-10-28 23:20:12 +0200 (Sat, 28 Oct 2006) | 4 lines

  Prevent crash if alloc of garbage fails.  Found by Typo.pl.

  Will backport.
........
  r52506 | neal.norwitz | 2006-10-28 23:21:00 +0200 (Sat, 28 Oct 2006) | 4 lines

  Don't inline Py_ADDRESS_IN_RANGE with gcc 4+ either.

  Will backport.
........
  r52513 | neal.norwitz | 2006-10-28 23:56:49 +0200 (Sat, 28 Oct 2006) | 2 lines

  Fix test_modulefinder so it doesn't fail when run after test_distutils.
........
  r52514 | neal.norwitz | 2006-10-29 00:12:26 +0200 (Sun, 29 Oct 2006) | 4 lines

  From SF 1557890, fix problem of using wrong type in example.

  Will backport.
........
  r52517 | georg.brandl | 2006-10-29 09:39:22 +0100 (Sun, 29 Oct 2006) | 4 lines

  Fix codecs.EncodedFile which did not use file_encoding in 2.5.0, and
  fix all codecs file wrappers to work correctly with the "with"
  statement (bug #1586513).
........
  r52519 | georg.brandl | 2006-10-29 09:47:08 +0100 (Sun, 29 Oct 2006) | 3 lines

  Clean up a leftover from old listcomp generation code.
........
  r52520 | georg.brandl | 2006-10-29 09:53:06 +0100 (Sun, 29 Oct 2006) | 4 lines

  Bug #1586448: the compiler module now emits the same bytecode for
  list comprehensions as the builtin compiler, using the LIST_APPEND
  opcode.
........
  r52521 | georg.brandl | 2006-10-29 10:01:01 +0100 (Sun, 29 Oct 2006) | 3 lines

  Remove trailing comma.
........
  r52522 | georg.brandl | 2006-10-29 10:05:04 +0100 (Sun, 29 Oct 2006) | 3 lines

  Bug #1357915: allow all sequence types for shell arguments in
  subprocess.
........
  r52524 | georg.brandl | 2006-10-29 10:16:12 +0100 (Sun, 29 Oct 2006) | 3 lines

  Patch #1583880: fix tarfile's problems with long names and posix/
  GNU modes.
........
  r52526 | georg.brandl | 2006-10-29 10:18:00 +0100 (Sun, 29 Oct 2006) | 3 lines

  Test assert if __debug__ is true.
........
  r52527 | georg.brandl | 2006-10-29 10:32:16 +0100 (Sun, 29 Oct 2006) | 2 lines

  Fix the new EncodedFile test to work with big endian platforms.
........
  r52529 | georg.brandl | 2006-10-29 15:39:09 +0100 (Sun, 29 Oct 2006) | 2 lines

  Bug #1586613: fix zlib and bz2 codecs' incremental en/decoders.
........
  r52532 | georg.brandl | 2006-10-29 19:01:08 +0100 (Sun, 29 Oct 2006) | 2 lines

  Bug #1586773: extend hashlib docstring.
........
  r52534 | neal.norwitz | 2006-10-29 19:30:10 +0100 (Sun, 29 Oct 2006) | 4 lines

  Update comments, remove commented out code.
  Move assembler structure next to assembler code to make it easier to
  move it to a separate file.
........
  r52535 | georg.brandl | 2006-10-29 19:31:42 +0100 (Sun, 29 Oct 2006) | 3 lines

  Bug #1576657: when setting a KeyError for a tuple key, make sure that
  the tuple isn't used as the "exception arguments tuple".
........
  r52537 | georg.brandl | 2006-10-29 20:13:40 +0100 (Sun, 29 Oct 2006) | 3 lines

  Convert test_mmap to unittest.
........
  r52538 | georg.brandl | 2006-10-29 20:20:45 +0100 (Sun, 29 Oct 2006) | 3 lines

  Convert test_poll to unittest.
........
  r52539 | georg.brandl | 2006-10-29 20:24:43 +0100 (Sun, 29 Oct 2006) | 3 lines

  Convert test_nis to unittest.
........
  r52540 | georg.brandl | 2006-10-29 20:35:03 +0100 (Sun, 29 Oct 2006) | 3 lines

  Convert test_types to unittest.
........
  r52541 | georg.brandl | 2006-10-29 20:51:16 +0100 (Sun, 29 Oct 2006) | 3 lines

  Convert test_cookie to unittest.
........
  r52542 | georg.brandl | 2006-10-29 21:09:12 +0100 (Sun, 29 Oct 2006) | 3 lines

  Convert test_cgi to unittest.
........
  r52543 | georg.brandl | 2006-10-29 21:24:01 +0100 (Sun, 29 Oct 2006) | 3 lines

  Completely convert test_httplib to unittest.
........
  r52544 | georg.brandl | 2006-10-29 21:28:26 +0100 (Sun, 29 Oct 2006) | 2 lines

  Convert test_MimeWriter to unittest.
........
  r52545 | georg.brandl | 2006-10-29 21:31:17 +0100 (Sun, 29 Oct 2006) | 3 lines

  Convert test_openpty to unittest.
........
  r52546 | georg.brandl | 2006-10-29 21:35:12 +0100 (Sun, 29 Oct 2006) | 3 lines

  Remove leftover test output file.
........
  r52547 | georg.brandl | 2006-10-29 22:54:18 +0100 (Sun, 29 Oct 2006) | 3 lines

  Move the check for openpty to the beginning.
........
  r52548 | walter.doerwald | 2006-10-29 23:06:28 +0100 (Sun, 29 Oct 2006) | 2 lines

  Add tests for basic argument errors.
........
  r52549 | walter.doerwald | 2006-10-30 00:02:27 +0100 (Mon, 30 Oct 2006) | 3 lines

  Add tests for incremental codecs with an errors
  argument.
........
  r52550 | neal.norwitz | 2006-10-30 00:39:03 +0100 (Mon, 30 Oct 2006) | 1 line

  Fix refleak
........
  r52552 | neal.norwitz | 2006-10-30 00:58:36 +0100 (Mon, 30 Oct 2006) | 1 line

  I'm assuming this is correct, it fixes the tests so they pass again
........
  r52555 | vinay.sajip | 2006-10-31 18:32:37 +0100 (Tue, 31 Oct 2006) | 1 line

  Change to improve speed of _fixupChildren
........
  r52556 | vinay.sajip | 2006-10-31 18:34:31 +0100 (Tue, 31 Oct 2006) | 1 line

  Added relativeCreated to Formatter doc (has been in the system for a long time - was unaccountably left out of the docs and not noticed until now).
........
  r52588 | thomas.heller | 2006-11-02 20:48:24 +0100 (Thu, 02 Nov 2006) | 5 lines

  Replace the XXX marker in the 'Arrays and pointers' reference manual
  section with a link to the tutorial sections.

  Will backport to release25-maint.
........
  r52592 | thomas.heller | 2006-11-02 21:22:29 +0100 (Thu, 02 Nov 2006) | 6 lines

  Fix a code example by adding a missing import.

  Fixes #1557890.

  Will backport to release25-maint.
........
  r52598 | tim.peters | 2006-11-03 03:32:46 +0100 (Fri, 03 Nov 2006) | 2 lines

  Whitespace normalization.
........
  r52619 | martin.v.loewis | 2006-11-04 19:14:06 +0100 (Sat, 04 Nov 2006) | 4 lines

  - Patch #1060577: Extract list of RPM files from spec file in
    bdist_rpm
  Will backport to 2.5.
........
  r52621 | neal.norwitz | 2006-11-04 20:25:22 +0100 (Sat, 04 Nov 2006) | 4 lines

  Bug #1588287: fix invalid assertion for `1,2` in debug builds.

  Will backport
........
  r52630 | andrew.kuchling | 2006-11-05 22:04:37 +0100 (Sun, 05 Nov 2006) | 1 line

  Update link
........
  r52631 | skip.montanaro | 2006-11-06 15:34:52 +0100 (Mon, 06 Nov 2006) | 1 line

  note that user can control directory location even if default dir is used
........
  r52644 | ronald.oussoren | 2006-11-07 16:53:38 +0100 (Tue, 07 Nov 2006) | 2 lines

  Fix a number of typos in strings and comments (sf#1589070)
........
  r52647 | ronald.oussoren | 2006-11-07 17:00:34 +0100 (Tue, 07 Nov 2006) | 2 lines

  Whitespace changes to make the source more compliant with PEP8 (SF#1589070)
........
  r52651 | thomas.heller | 2006-11-07 19:01:18 +0100 (Tue, 07 Nov 2006) | 3 lines

  Fix markup.

  Will backport to release25-maint.
........
  r52653 | thomas.heller | 2006-11-07 19:20:47 +0100 (Tue, 07 Nov 2006) | 3 lines

  Fix grammatical error as well.

  Will backport to release25-maint.
........
  r52657 | andrew.kuchling | 2006-11-07 21:39:16 +0100 (Tue, 07 Nov 2006) | 1 line

  Add missing word
........
  r52662 | martin.v.loewis | 2006-11-08 07:46:37 +0100 (Wed, 08 Nov 2006) | 4 lines

  Correctly forward exception in instance_contains().
  Fixes #1591996. Patch contributed by Neal Norwitz.
  Will backport.
........
  r52664 | martin.v.loewis | 2006-11-08 07:48:36 +0100 (Wed, 08 Nov 2006) | 2 lines

  News entry for 52662.
........
  r52665 | martin.v.loewis | 2006-11-08 08:35:55 +0100 (Wed, 08 Nov 2006) | 2 lines

  Patch #1351744: Add askyesnocancel helper for tkMessageBox.
........
  r52666 | georg.brandl | 2006-11-08 08:45:59 +0100 (Wed, 08 Nov 2006) | 2 lines

  Patch #1592072: fix docs for return value of PyErr_CheckSignals.
........
  r52668 | georg.brandl | 2006-11-08 11:04:29 +0100 (Wed, 08 Nov 2006) | 3 lines

  Bug #1592533: rename variable in heapq doc example, to avoid shadowing
  "sorted".
........
  r52671 | andrew.kuchling | 2006-11-08 14:35:34 +0100 (Wed, 08 Nov 2006) | 1 line

  Add section on the functional module
........
  r52672 | andrew.kuchling | 2006-11-08 15:14:30 +0100 (Wed, 08 Nov 2006) | 1 line

  Add section on operator module; make a few edits
........
  r52673 | andrew.kuchling | 2006-11-08 15:24:03 +0100 (Wed, 08 Nov 2006) | 1 line

  Add table of contents; this required fixing a few headings.  Some more smalle edits.
........
  r52674 | andrew.kuchling | 2006-11-08 15:30:14 +0100 (Wed, 08 Nov 2006) | 1 line

  More edits
........
  r52686 | martin.v.loewis | 2006-11-09 12:06:03 +0100 (Thu, 09 Nov 2006) | 3 lines

  Patch #838546: Make terminal become controlling in pty.fork().
  Will backport to 2.5.
........
  r52688 | martin.v.loewis | 2006-11-09 12:27:32 +0100 (Thu, 09 Nov 2006) | 2 lines

  Patch #1592250: Add elidge argument to Tkinter.Text.search.
........
  r52690 | andrew.kuchling | 2006-11-09 14:27:07 +0100 (Thu, 09 Nov 2006) | 7 lines

  [Bug #1569790] mailbox.Maildir.get_folder() loses factory information

  Both the Maildir and MH classes had this bug; the patch fixes both classes
  and adds a test.

  Will backport to 25-maint.
........
  r52692 | andrew.kuchling | 2006-11-09 14:51:14 +0100 (Thu, 09 Nov 2006) | 1 line

  [Patch #1514544 by David Watson] use fsync() to ensure data is really on disk
........
  r52695 | walter.doerwald | 2006-11-09 17:23:26 +0100 (Thu, 09 Nov 2006) | 2 lines

  Replace C++ comment with C comment (fixes SF bug #1593525).
........
  r52712 | andrew.kuchling | 2006-11-09 22:16:46 +0100 (Thu, 09 Nov 2006) | 11 lines

  [Patch #1514543] mailbox (Maildir): avoid losing messages on name clash

  Two changes:

  Where possible, use link()/remove() to move files into a directory; this
  makes it easier to avoid overwriting an existing file.

  Use _create_carefully() to create files in tmp/, which uses O_EXCL.

  Backport candidate.
........
  r52716 | phillip.eby | 2006-11-10 01:33:36 +0100 (Fri, 10 Nov 2006) | 4 lines

  Fix SF#1566719: not creating site-packages (or other target directory) when
  installing .egg-info for a project that contains no modules or packages,
  while using --root (as in bdist_rpm).
........
  r52719 | andrew.kuchling | 2006-11-10 14:14:01 +0100 (Fri, 10 Nov 2006) | 1 line

  Reword entry
........
  r52725 | andrew.kuchling | 2006-11-10 15:39:01 +0100 (Fri, 10 Nov 2006) | 1 line

  [Feature request #1542920] Link to wsgi.org
........
  r52731 | georg.brandl | 2006-11-11 19:29:11 +0100 (Sat, 11 Nov 2006) | 2 lines

  Bug #1594742: wrong word in stringobject doc.
........
  r52733 | georg.brandl | 2006-11-11 19:32:47 +0100 (Sat, 11 Nov 2006) | 2 lines

  Bug #1594758: wording improvement for dict.update() docs.
........
  r52736 | martin.v.loewis | 2006-11-12 11:32:47 +0100 (Sun, 12 Nov 2006) | 3 lines

  Patch #1065257: Support passing open files as body in
  HTTPConnection.request().
........
  r52737 | martin.v.loewis | 2006-11-12 11:41:39 +0100 (Sun, 12 Nov 2006) | 2 lines

  Patch #1355023: support whence argument for GzipFile.seek.
........
  r52738 | martin.v.loewis | 2006-11-12 19:24:26 +0100 (Sun, 12 Nov 2006) | 2 lines

  Bug #1067760: Deprecate passing floats to file.seek.
........
  r52739 | martin.v.loewis | 2006-11-12 19:48:13 +0100 (Sun, 12 Nov 2006) | 3 lines

  Patch #1359217: Ignore 2xx response before 150 response.
  Will backport to 2.5.
........
  r52741 | martin.v.loewis | 2006-11-12 19:56:03 +0100 (Sun, 12 Nov 2006) | 4 lines

  Patch #1360200: Use unmangled_version RPM spec field to deal with
  file name mangling.
  Will backport to 2.5.
........
  r52753 | walter.doerwald | 2006-11-15 17:23:46 +0100 (Wed, 15 Nov 2006) | 2 lines

  Fix typo.
........
  r52754 | georg.brandl | 2006-11-15 18:42:03 +0100 (Wed, 15 Nov 2006) | 2 lines

  Bug #1594809: add a note to README regarding PYTHONPATH and make install.
........
  r52762 | georg.brandl | 2006-11-16 16:05:14 +0100 (Thu, 16 Nov 2006) | 2 lines

  Bug #1597576: mention that the new base64 api has been introduced in py2.4.
........
  r52764 | georg.brandl | 2006-11-16 17:50:59 +0100 (Thu, 16 Nov 2006) | 3 lines

  Bug #1597824: return the registered function from atexit.register()
  to facilitate usage as a decorator.
........
  r52765 | georg.brandl | 2006-11-16 18:08:45 +0100 (Thu, 16 Nov 2006) | 4 lines

  Bug #1588217: don't parse "= " as a soft line break in binascii's
  a2b_qp() function, instead leave it in the string as quopri.decode()
  does.
........
  r52776 | andrew.kuchling | 2006-11-17 14:30:25 +0100 (Fri, 17 Nov 2006) | 17 lines

  Remove file-locking in MH.pack() method.
  This change looks massive but it's mostly a re-indenting after
  removing some try...finally blocks.

  Also adds a test case that does a pack() while the mailbox is locked; this
  test would have turned up bugs in the original code on some platforms.

  In both nmh and GNU Mailutils' implementation of MH-format mailboxes,
  no locking is done of individual message files when renaming them.

  The original mailbox.py code did do locking, which meant that message
  files had to be opened.  This code was buggy on certain platforms
  (found through reading the code); there were code paths that closed
  the file object and then called _unlock_file() on it.

  Will backport to 25-maint once I see how the buildbots react to this patch.
........
  r52780 | martin.v.loewis | 2006-11-18 19:00:23 +0100 (Sat, 18 Nov 2006) | 5 lines

  Patch #1538878: Don't make tkSimpleDialog dialogs transient if
  the parent window is withdrawn. This mirrors what dialog.tcl
  does.
  Will backport to 2.5.
........
  r52782 | martin.v.loewis | 2006-11-18 19:05:35 +0100 (Sat, 18 Nov 2006) | 4 lines

  Patch #1594554: Always close a tkSimpleDialog on ok(), even
  if an exception occurs.
  Will backport to 2.5.
........
  r52784 | martin.v.loewis | 2006-11-18 19:42:11 +0100 (Sat, 18 Nov 2006) | 3 lines

  Patch #1472877: Fix Tix subwidget name resolution.
  Will backport to 2.5.
........
  r52786 | andrew.kuchling | 2006-11-18 23:17:33 +0100 (Sat, 18 Nov 2006) | 1 line

  Expand checking in test_sha
........
  r52787 | georg.brandl | 2006-11-19 09:48:30 +0100 (Sun, 19 Nov 2006) | 3 lines

  Patch [ 1586791 ] better error msgs for some TypeErrors
........
  r52788 | martin.v.loewis | 2006-11-19 11:41:41 +0100 (Sun, 19 Nov 2006) | 4 lines

  Make cStringIO.truncate raise IOError for negative
  arguments (even for -1). Fixes the last bit of
  #1359365.
........
  r52789 | andrew.kuchling | 2006-11-19 19:40:01 +0100 (Sun, 19 Nov 2006) | 1 line

  Add a test case of data w/ bytes > 127
........
  r52790 | martin.v.loewis | 2006-11-19 19:51:54 +0100 (Sun, 19 Nov 2006) | 3 lines

  Patch #1070046: Marshal new-style objects like InstanceType
  in xmlrpclib.
........
  r52792 | neal.norwitz | 2006-11-19 22:26:53 +0100 (Sun, 19 Nov 2006) | 4 lines

  Speed up function calls into the math module by using METH_O.
  There should be no functional changes. However, the error msgs are
  slightly different.  Also verified that the module dict is not NULL on init.
........
  r52794 | george.yoshida | 2006-11-20 03:24:48 +0100 (Mon, 20 Nov 2006) | 2 lines

  markup fix
........
  r52795 | georg.brandl | 2006-11-20 08:12:58 +0100 (Mon, 20 Nov 2006) | 3 lines

  Further markup fix.
........
  r52800 | andrew.kuchling | 2006-11-20 14:39:37 +0100 (Mon, 20 Nov 2006) | 2 lines

  Jython compatibility fix: if uu.decode() opened its output file, be sure to
  close it.
........
  r52811 | neal.norwitz | 2006-11-21 06:26:22 +0100 (Tue, 21 Nov 2006) | 9 lines

  Bug #1599782: Fix segfault on bsddb.db.DB().type().

  The problem is that _DB_get_type() can't be called without the GIL
  because it calls a bunch of PyErr_* APIs when an error occurs.
  There were no other cases in this file that it was called without the GIL.
  Removing the BEGIN/END THREAD around _DB_get_type() made everything work.

  Will backport.
........
  r52814 | neal.norwitz | 2006-11-21 06:51:51 +0100 (Tue, 21 Nov 2006) | 1 line

  Oops, convert tabs to spaces
........
  r52815 | neal.norwitz | 2006-11-21 07:23:44 +0100 (Tue, 21 Nov 2006) | 1 line

  Fix SF #1599879, socket.gethostname should ref getfqdn directly.
........
  r52817 | martin.v.loewis | 2006-11-21 19:20:25 +0100 (Tue, 21 Nov 2006) | 4 lines

  Conditionalize definition of _CRT_SECURE_NO_DEPRECATE
  and _CRT_NONSTDC_NO_DEPRECATE.
  Will backport.
........
  r52821 | martin.v.loewis | 2006-11-22 09:50:02 +0100 (Wed, 22 Nov 2006) | 4 lines

  Patch #1362975: Rework CodeContext indentation algorithm to
  avoid hard-coding pixel widths. Also make the text's scrollbar
  a child of the text frame, not the top widget.
........
  r52826 | walter.doerwald | 2006-11-23 06:03:56 +0100 (Thu, 23 Nov 2006) | 3 lines

  Change decode() so that it works with a buffer (i.e. unicode(..., 'utf-8-sig'))
  SF bug #1601501.
........
  r52833 | georg.brandl | 2006-11-23 10:55:07 +0100 (Thu, 23 Nov 2006) | 2 lines

  Bug #1601630: little improvement to getopt docs
........
  r52835 | michael.hudson | 2006-11-23 14:54:04 +0100 (Thu, 23 Nov 2006) | 3 lines

  a test for an error condition not covered by existing tests
  (noticed this when writing the equivalent code for pypy)
........
  r52839 | raymond.hettinger | 2006-11-23 22:06:03 +0100 (Thu, 23 Nov 2006) | 1 line

  Fix and/add typo
........
  r52840 | raymond.hettinger | 2006-11-23 22:35:19 +0100 (Thu, 23 Nov 2006) | 1 line

  ... and the number of the counting shall be three.
........
  r52841 | thomas.heller | 2006-11-24 19:45:39 +0100 (Fri, 24 Nov 2006) | 1 line

  Fix bug #1598620: A ctypes structure cannot contain itself.
........
  r52843 | martin.v.loewis | 2006-11-25 16:39:19 +0100 (Sat, 25 Nov 2006) | 3 lines

  Disable _XOPEN_SOURCE on NetBSD 1.x.
  Will backport to 2.5
........
  r52845 | georg.brandl | 2006-11-26 20:27:47 +0100 (Sun, 26 Nov 2006) | 2 lines

  Bug #1603321: make pstats.Stats accept Unicode file paths.
........
  r52850 | georg.brandl | 2006-11-27 19:46:21 +0100 (Mon, 27 Nov 2006) | 2 lines

  Bug #1603789: grammatical error in Tkinter docs.
........
  r52855 | thomas.heller | 2006-11-28 21:21:54 +0100 (Tue, 28 Nov 2006) | 7 lines

  Fix #1563807: _ctypes built on AIX fails with ld ffi error.

  The contents of ffi_darwin.c must be compiled unless __APPLE__ is
  defined and __ppc__ is not.

  Will backport.
........
  r52862 | armin.rigo | 2006-11-29 22:59:22 +0100 (Wed, 29 Nov 2006) | 3 lines

  Forgot a case where the locals can now be a general mapping
  instead of just a dictionary.  (backporting...)
........
  r52872 | guido.van.rossum | 2006-11-30 20:23:13 +0100 (Thu, 30 Nov 2006) | 2 lines

  Update version.
........
  r52890 | walter.doerwald | 2006-12-01 17:59:47 +0100 (Fri, 01 Dec 2006) | 3 lines

  Move xdrlib tests from the module into a separate test script,
  port the tests to unittest and add a few new tests.
........
  r52900 | raymond.hettinger | 2006-12-02 03:00:39 +0100 (Sat, 02 Dec 2006) | 1 line

  Add name to credits (for untokenize).
........
  r52905 | martin.v.loewis | 2006-12-03 10:54:46 +0100 (Sun, 03 Dec 2006) | 2 lines

  Move IDLE news into NEWS.txt.
........
  r52906 | martin.v.loewis | 2006-12-03 12:23:45 +0100 (Sun, 03 Dec 2006) | 4 lines

  Patch #1544279: Improve thread-safety of the socket module by moving
  the sock_addr_t storage out of the socket object.
  Will backport to 2.5.
........
  r52908 | martin.v.loewis | 2006-12-03 13:01:53 +0100 (Sun, 03 Dec 2006) | 3 lines

  Patch #1371075: Make ConfigParser accept optional dict type
  for ordering, sorting, etc.
........
  r52910 | matthias.klose | 2006-12-03 18:16:41 +0100 (Sun, 03 Dec 2006) | 2 lines

  - Fix build failure on kfreebsd and on the hurd.
........
  r52915 | george.yoshida | 2006-12-04 12:41:54 +0100 (Mon, 04 Dec 2006) | 2 lines

  fix a versionchanged tag
........
  r52917 | george.yoshida | 2006-12-05 06:39:50 +0100 (Tue, 05 Dec 2006) | 3 lines

  Fix pickle doc typo
  Patch #1608758
........
  r52938 | georg.brandl | 2006-12-06 23:21:18 +0100 (Wed, 06 Dec 2006) | 2 lines

  Patch #1610437: fix a tarfile bug with long filename headers.
........
  r52945 | brett.cannon | 2006-12-07 00:38:48 +0100 (Thu, 07 Dec 2006) | 3 lines

  Fix a bad assumption that all objects assigned to '__loader__' on a module
  will have a '_files' attribute.
........
  r52951 | georg.brandl | 2006-12-07 10:30:06 +0100 (Thu, 07 Dec 2006) | 3 lines

  RFE #1592899: mention string.maketrans() in docs for str.translate,
  remove reference to the old regex module in the former's doc.
........
  r52962 | raymond.hettinger | 2006-12-08 04:17:18 +0100 (Fri, 08 Dec 2006) | 1 line

  Eliminate two redundant calls to PyObject_Hash().
........
  r52963 | raymond.hettinger | 2006-12-08 05:24:33 +0100 (Fri, 08 Dec 2006) | 3 lines

  Port Armin's fix for a dict resize vulnerability (svn revision 46589, sf bug 1456209).
........
  r52964 | raymond.hettinger | 2006-12-08 05:57:50 +0100 (Fri, 08 Dec 2006) | 4 lines

  Port Georg's dictobject.c fix keys that were tuples got unpacked on the way to setting a KeyError (svn revision 52535, sf bug
  1576657).
........
  r52966 | raymond.hettinger | 2006-12-08 18:35:25 +0100 (Fri, 08 Dec 2006) | 2 lines

  Add test for SF bug 1576657
........
  r52970 | georg.brandl | 2006-12-08 21:46:11 +0100 (Fri, 08 Dec 2006) | 3 lines

  #1577756: svnversion doesn't react to LANG=C, use LC_ALL=C to force
  English output.
........
  r52972 | georg.brandl | 2006-12-09 10:08:29 +0100 (Sat, 09 Dec 2006) | 3 lines

  Patch #1608267: fix a race condition in os.makedirs() is the directory
  to be created is already there.
........
  r52975 | matthias.klose | 2006-12-09 13:15:27 +0100 (Sat, 09 Dec 2006) | 2 lines

  - Fix the build of the library reference in info format.
........
  r52994 | neal.norwitz | 2006-12-11 02:01:06 +0100 (Mon, 11 Dec 2006) | 1 line

  Fix a typo
........
  r52996 | georg.brandl | 2006-12-11 08:56:33 +0100 (Mon, 11 Dec 2006) | 2 lines

  Move errno imports back to individual functions.
........
  r52998 | vinay.sajip | 2006-12-11 15:07:16 +0100 (Mon, 11 Dec 2006) | 1 line

  Patch by Jeremy Katz (SF #1609407)
........
  r53000 | vinay.sajip | 2006-12-11 15:26:23 +0100 (Mon, 11 Dec 2006) | 1 line

  Patch by "cuppatea" (SF #1503765)
........Get rid of a bunch more has_key() uses.  We *really* need a tool for this.
test_aepack now passes.  IDLE still needs to be converted (among others).Merge part of the trunk changes into the p3yk branch. This merges from 43030
(branch-creation time) up to 43067. 43068 and 43069 contain a little
swapping action between re.py and sre.py, and this mightily confuses svn
merge, so later changes are going in separately.

This merge should break no additional tests.

The last-merged revision is going in a 'last_merge' property on '.' (the
branch directory.) Arbitrarily chosen, really; if there's a BCP for this, I
couldn't find it, but we can easily change it afterwards ;)Fix the encodings package codec search function to only search
inside its own package. Fixes problem reported in patch #1433198.

Add codec search function for codec test codec.Let the default encodings search function lookup aliases before trying the codec import. This allows applications to install codecs which override (non-special-cased) builtin codecs.When looking for an alias, first look for the normalized name (which
still may contain dots), then if that doesn't exist look for the name
with dots replaced by underscores.  This is a little more forgiving.Extending the encoding name normalization to handle more non-alphanumeric
characters.Whitespace normalization.Revert #571603 since it is ok to import codecs that are not subdirectories
of encodings. Skip modules that don't have a getregentry function.Patch #571603: Refer to encodings package explicitly.Corrected import behaviour for codecs which live outside the encodings
package.Add IANA character set aliases to the encodings alias dictionary
and make alias lookup lazy.

Note that only those IANA character set aliases were added for which
we actually have codecs in the encodings package.Fixed search function error reporting in the encodings package
__init__.py module to raise errors which can be catched as LookupErrors
as well as SystemErrors.

Modified the error messages to include more information about the
failing module.Changed .getaliases() support to register the new aliases in the
encodings package aliases mapping dictionary rather than in the
internal cache used by the search function.

This enables aliases to take advantage of the full normalization
process applied to encoding names which was previously not available.

The patch restricts alias registration to new aliases. Existing
aliases cannot be overridden anymore.Marc-Andre Lemburg <mal@lemburg.com>:
Removed import of string module -- use string methods directly.
Thanks to Finn Bock.Marc-Andre's third try at this bulk patch seems to work (except that
his copy of test_contains.py seems to be broken -- the lines he
deleted were already absent).  Checkin messages:


New Unicode support for int(), float(), complex() and long().

- new APIs PyInt_FromUnicode() and PyLong_FromUnicode()
- added support for Unicode to PyFloat_FromString()
- new encoding API PyUnicode_EncodeDecimal() which converts
  Unicode to a decimal char* string (used in the above new
  APIs)
- shortcuts for calls like int(<int object>) and float(<float obj>)
- tests for all of the above

Unicode compares and contains checks:
- comparing Unicode and non-string types now works; TypeErrors
  are masked, all other errors such as ValueError during
  Unicode coercion are passed through (note that PyUnicode_Compare
  does not implement the masking -- PyObject_Compare does this)
- contains now works for non-string types too; TypeErrors are
  masked and 0 returned; all other errors are passed through

Better testing support for the standard codecs.

Misc minor enhancements, such as an alias dbcs for the mbcs codec.

Changes:
- PyLong_FromString() now applies the same error checks as
  does PyInt_FromString(): trailing garbage is reported
  as error and not longer silently ignored. The only characters
  which may be trailing the digits are 'L' and 'l' -- these
  are still silently ignored.
- string.ato?() now directly interface to int(), long() and
  float(). The error strings are now a little different, but
  the type still remains the same. These functions are now
  ready to get declared obsolete ;-)
- PyNumber_Int() now also does a check for embedded NULL chars
  in the input string; PyNumber_Long() already did this (and
  still does)

Followed by:

Looks like I've gone a step too far there... (and test_contains.py
seem to have a bug too).

I've changed back to reporting all errors in PyUnicode_Contains()
and added a few more test cases to test_contains.py (plus corrected
the join() NameError).On 17-Mar-2000, Marc-Andre Lemburg said:

    Attached you find an update of the Unicode implementation.

    The patch is against the current CVS version. I would appreciate
    if someone with CVS checkin permissions could check the changes
    in.

    The patch contains all bugs and patches sent this week and also
    fixes a leak in the codecs code and a bug in the free list code
    for Unicode objects (which only shows up when compiling Python
    with Py_DEBUG; thanks to MarkH for spotting this one).Marc-Andre Lemburg: Unicode encodings.Merge with main repo default branch.Merged upstream changes.Fix bug 9352 where characters were being lost in parsing some short optionsMerged revisions 78600-78601 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r78600 | benjamin.peterson | 2010-03-02 16:58:01 -0600 (Tue, 02 Mar 2010) | 1 line

  remove code to avoid BaseException.message bug
........
  r78601 | benjamin.peterson | 2010-03-02 17:02:02 -0600 (Tue, 02 Mar 2010) | 1 line

  remove cross-version compatibility code
........Merged revisions 78586-78593 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r78586 | benjamin.peterson | 2010-03-02 16:03:03 -0600 (Tue, 02 Mar 2010) | 1 line

  remove coding cookie as mandated by PEP 8
........
  r78587 | benjamin.peterson | 2010-03-02 16:05:59 -0600 (Tue, 02 Mar 2010) | 1 line

  set svn:eol-style
........
  r78588 | benjamin.peterson | 2010-03-02 16:08:40 -0600 (Tue, 02 Mar 2010) | 1 line

  remove another coding cookie
........
  r78589 | georg.brandl | 2010-03-02 16:17:38 -0600 (Tue, 02 Mar 2010) | 1 line

  Add some x-refs.
........
  r78590 | benjamin.peterson | 2010-03-02 16:20:10 -0600 (Tue, 02 Mar 2010) | 1 line

  enable running of argparse tests and fix two that failed in the new environment
........
  r78591 | benjamin.peterson | 2010-03-02 16:23:33 -0600 (Tue, 02 Mar 2010) | 1 line

  prevent warning filter adjustment from altering other tests
........
  r78592 | benjamin.peterson | 2010-03-02 16:24:30 -0600 (Tue, 02 Mar 2010) | 1 line

  use test_main() in __main__ section
........
  r78593 | benjamin.peterson | 2010-03-02 16:26:25 -0600 (Tue, 02 Mar 2010) | 1 line

  convert deprecated fail* methods to assert* variants
........Merged revisions 78576 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r78576 | steven.bethard | 2010-03-02 00:38:09 -0800 (Tue, 02 Mar 2010) | 3 lines

  Initial commit of the argparse library, based on argparse 1.1.
  Docs still need some updating to make getopt and optparse match the wording promised in the PEP.
  There are also probably a number of :class:ArgumentParser etc. links that could be added to the argparse documentation.
........bpo-40094: Add os.waitstatus_to_exitcode() (GH-19201)

Add os.waitstatus_to_exitcode() function to convert a wait status to an
exitcode.

Suggest waitstatus_to_exitcode() usage in the documentation when
appropriate.

Use waitstatus_to_exitcode() in:

* multiprocessing, os, subprocess and _bootsubprocess modules;
* test.support.wait_process();
* setup.py: run_command();
* and many tests.bpo-31308: If multiprocessing's forkserver dies, launch it again when necessary (#3246)

* bpo-31308: If multiprocessing's forkserver dies, launch it again when necessary.

* Fix test on Windows

* Add NEWS entry

* Adopt a different approach: ignore SIGINT and SIGTERM, as in semaphore tracker.

* Fix comment

* Make sure the test doesn't muck with process state

* Also test previously-started processes

* Update 2017-08-30-17-59-36.bpo-31308.KbexyC.rst

* Avoid masking SIGTERM in forkserver.  It's not necessary and causes a race condition in test_many_processes.bpo-5001: More-informative multiprocessing error messages (#3079)

* Make error message more informative

Replace assertions in error-reporting code with more-informative version that doesn't cause confusion over where and what the error is.

* Additional clarification + get travis to check

* Change from SystemError to TypeError

As suggested in PR comment by @pitrou, changing from SystemError; TypeError appears appropriate.

* NEWS file installation; ACKS addition (will do my best to justify it by additional work)

* Making current AssertionErrors in multiprocessing more informative

* Blurb added re multiprocessing managers.py, queues.py cleanup

* Further multiprocessing cleanup - went through pool.py

* Fix two asserts in multiprocessing/util.py

* Most asserts in multiprocessing more informative

* Didn't save right version

* Further work on multiprocessing error messages

* Correct typo

* Correct typo v2

* Blasted colon... serves me right for trying to work on two things at once

* Simplify NEWS entry

* Update 2017-08-18-17-16-38.bpo-5001.gwnthq.rst

* Update 2017-08-18-17-16-38.bpo-5001.gwnthq.rst

OK, never mind.

* Corrected (thanks to pitrou) error messages for notify

* Remove extraneous backslash in docstring.bpo-26732: fix too many fds in processes started with the "forkserver" method (#2813)

* bpo-26732: fix too many fds in processes started with the "forkserver" method

A child process would inherit as many fds as the number of still-running children.

* Add blurb and test commentFix bpo-30596: Add close() method to multiprocessing.Process (#2010)

* Fix bpo-30596: Add close() method to multiprocessing.Process

* Raise ValueError if close() is called before the Process is finished running

* Add docs

* Add NEWS blurbbpo-30643: Fix race condition in signal wakeup in forkserver (followup to PR #1989) (#2139)

* Fix race condition in signal wakeup in forkserver (followup to PR #1989)

There's an admittedly well-known race condition where ECHILD can arrive
just before the C function epoll_wait() and the latter wouldn't therefore
return EINTR.  The solution is to use set_wakeup_fd(), which was designed
to avoid such race conditions.

* Reset wakeup fd in childFix bpo-30589: improve Process.exitcode with forkserver (#1989)

* Fix bpo-30589: improve Process.exitcode with forkserver

When the child is killed, Process.exitcode should return -signum, not 255.

* Add Misc/NEWSbpo-30185: avoid KeyboardInterrupt tracebacks in forkserver (#1319)

* bpo-30185: avoid KeyboardInterrupt tracebacks in forkserver

* Tweak commentIssue #25654:

* multiprocessing: open file with closefd=False to avoid ResourceWarning
* _test_multiprocessing: open file with O_EXCL to detect bugs in tests (if a
  previous test forgot to remove TESTFN)
* test_sys_exit(): remove TESTFN after each loop iteration

Initial patch written by Serhiy Storchaka.Issue #23285: PEP 475 -- Retry system calls failing with EINTR.Issue #18999: Make multiprocessing use context objects.

This allows different parts of a program to use different methods for
starting processes without interfering with each other.Issue #18934: multiprocessing: use selectors module.Issue #18762: Fix EBADF error when using forkserver.Issue #8713: Support alternative start methods in multiprocessing on Unix.

See http://hg.python.org/sandbox/sbt#spawn[adn] fix extraction and add support for positioning styles(closes #20549)[adn] fix extraction[adn] fix format extraction(#15716)[adn] Improve error reporting (#13663)[adn] fix formats extraction[adn] Add new extractorsupport: Return json error if the POST request is invalid.support: Add functionality to approve sponsorship requests.

This should make it much easier to process these requests.support: Show customer plan details in support page.audit_log: Log acting_user in do_scrub_realm.support: Ensure that only one form is posted at a time.

The forms to change plan_type, add discount, scrub_realm etc
all post to the same endpoint.

Our frontend code is written so that only one form posts at a time.
But there should be no harm in enforcing the same in backend as well.billing: Add option to request a sponsorship in /upgrade.python: Convert more "".format to Python 3.6 f-strings.

Generated by pyupgrade --py36-plus --keep-percent-format, with more
restrictions patched out.

Signed-off-by: Anders Kaseorg <anders@zulip.com>python: Convert "".format to Python 3.6 f-strings.

Generated by pyupgrade --py36-plus --keep-percent-format, but with the
NamedTuple changes reverted (see commit
ba7906a3c657905fa35bbcfb4e97b053f050272d, #15132).

Signed-off-by: Anders Kaseorg <anders@zulip.com>analytics: Add order_by to query used for fetching admin emails.

This commit adds order_by to the query that fetches admin emails
in views.py. This is added to show emails alphabetically in case
of multiple admins.python: Convert assignment type annotations to Python 3.6 style.

This commit was split by tabbott; this piece covers the vast majority
of files in Zulip, but excludes scripts/, tools/, and puppet/ to help
ensure we at least show the right error messages for Xenial systems.

We can likely further refine the remaining pieces with some testing.

Generated by com2ann, with whitespace fixes and various manual fixes
for runtime issues:

-    invoiced_through: Optional[LicenseLedger] = models.ForeignKey(
+    invoiced_through: Optional["LicenseLedger"] = models.ForeignKey(

-_apns_client: Optional[APNsClient] = None
+_apns_client: Optional["APNsClient"] = None

-    notifications_stream: Optional[Stream] = models.ForeignKey('Stream', related_name='+', null=True, blank=True, on_delete=CASCADE)
-    signup_notifications_stream: Optional[Stream] = models.ForeignKey('Stream', related_name='+', null=True, blank=True, on_delete=CASCADE)
+    notifications_stream: Optional["Stream"] = models.ForeignKey('Stream', related_name='+', null=True, blank=True, on_delete=CASCADE)
+    signup_notifications_stream: Optional["Stream"] = models.ForeignKey('Stream', related_name='+', null=True, blank=True, on_delete=CASCADE)

-    author: Optional[UserProfile] = models.ForeignKey('UserProfile', blank=True, null=True, on_delete=CASCADE)
+    author: Optional["UserProfile"] = models.ForeignKey('UserProfile', blank=True, null=True, on_delete=CASCADE)

-    bot_owner: Optional[UserProfile] = models.ForeignKey('self', null=True, on_delete=models.SET_NULL)
+    bot_owner: Optional["UserProfile"] = models.ForeignKey('self', null=True, on_delete=models.SET_NULL)

-    default_sending_stream: Optional[Stream] = models.ForeignKey('zerver.Stream', null=True, related_name='+', on_delete=CASCADE)
-    default_events_register_stream: Optional[Stream] = models.ForeignKey('zerver.Stream', null=True, related_name='+', on_delete=CASCADE)
+    default_sending_stream: Optional["Stream"] = models.ForeignKey('zerver.Stream', null=True, related_name='+', on_delete=CASCADE)
+    default_events_register_stream: Optional["Stream"] = models.ForeignKey('zerver.Stream', null=True, related_name='+', on_delete=CASCADE)

-descriptors_by_handler_id: Dict[int, ClientDescriptor] = {}
+descriptors_by_handler_id: Dict[int, "ClientDescriptor"] = {}

-worker_classes: Dict[str, Type[QueueProcessingWorker]] = {}
-queues: Dict[str, Dict[str, Type[QueueProcessingWorker]]] = {}
+worker_classes: Dict[str, Type["QueueProcessingWorker"]] = {}
+queues: Dict[str, Dict[str, Type["QueueProcessingWorker"]]] = {}

-AUTH_LDAP_REVERSE_EMAIL_SEARCH: Optional[LDAPSearch] = None
+AUTH_LDAP_REVERSE_EMAIL_SEARCH: Optional["LDAPSearch"] = None

Signed-off-by: Anders Kaseorg <anders@zulipchat.com>support: Send confirmation email on realm activation.mypy: Upgrade from 0.730 to 0.740.

Signed-off-by: Anders Kaseorg <anders@zulipchat.com>support: Show confirmation links in search.

Fixes #13060 #12784support: Pass various realm functions as template context.

We currently have code to calculate the value of realm_icon_url,
admin_emails and default_discount in two diffrent places. With
the addition of showing confirmation links it would become three.
The easiest way to deduplicate the code and make the view cleaner
is by doing the calculations in template. Alternatively one can
write a function that takes users, realms and confirmations as
arguments and sets the value of realm_icon_url, admin_emails and
default_discount appropriately in realm object according to the
type of the confirmation. But that seems more messy than passing
the functions directly to template approach.support: Use delivery_email instead of email.

Structurally, these pages want email addresses one can actually send
emails to.models: Extract get_human_admin_users function.

This function is an alternative to get_admin_users that we use in all
places where we explicitly want only human administrative users (not
administrative bots).  The following commits will rename
get_admin_users for better clarity.support: Add functionality to copy admin emails.

Also renamed a bunch of functions in test_views for better
readability.audit log: Log which server admin deactivated a realm too.support: Update success message for plan type change.support: Rename deactive to deactivated.get_realm: raise DoesNotExist instead of returning None.

This makes the implementation of `get_realm` consistent with its
declared return type of `Realm` rather than `Optional[Realm]`.

Fixes #12263.

Signed-off-by: Anders Kaseorg <anders@zulipchat.com>support: Add support for scrubbing realm.support: Add support for activating and deactivating realm.activity: Create interface for doing support operations.

This should grow into a tool that makes it much easier to do common
organization management tasks without using a manage.py shell.Merge pull request #2046 from getsentry/gh-2045

Guard against NoneType EventAttributeConditionsTST Fix unreachable code in tests (#16110)
ENH Fix unfriendly error message for documentation checks (#11967)

Previously error messages for mismatches parameters on function/method
signatures and docstrings were not explicit or user-friendly. This
changes provides a more explicit error message and in addition notifies
the relation of missing/mismatching parameters from signature to
docstring and from docstring to signature.MNT More clean up after we remove python < 3.5 (#13078)
TST don't test utils.fixes docstrings (#12576)
DOC Added docstring checks for dataset module  (#11407)
add "docstring error" to docstring error message for context (#9651)
[MRG+1] add docstring tests to a travis entry that actually runs tests (#9363)

* add docstring tests to a travis entry that actually runs tests

* show skipped tests

* better test skipping messages

* use path in walk_packages so we can run the tests from anywhere.
Also try to do better tests for private packages.

* Ensure all submodule classes and functions are tested

* Reverse the for loop nesting to avoid copying

* skip abstract methods, skip setup.configure, skip a lot more that I don't want to fix.

* unused import

* move neighbors up from deprecated to just not covered.[MRG+1] Docstring parameters improvements for cross_decomposition and discriminant_analysis (#9392)

* Fixing cross_decomposition docstring parameters

* Fixing discriminant analysis docstring parameters

* Fixing indentation and improving error message

* Fixing docstring inconsistency

* Fixing capitalised parameter

* Removing semantics from type specification

* Moving attributes to parameters

* Fixing typo

* Fixing syntax for pep8[MRG + 1 (rv) + 1 (alex) + 1] Add a check to test the docstring params and their order (#9206)

* add automatic test of docstrings for function / method signatures using numpydocMerge pull request #4215 from pypa/feature/update-pip-piptools
Merge branch 'master' of github.com:pypa/pipenvfeat(workflow): create filter category for rule conditions (#20083)

In order to make room for new issue alert filters we must have some way to differentiate between a condition (triggers an alert) and a filter (additional criteria to prevent an alert from firing). These will largely work the same but must be applied slightly differently.

Added a new EventFilter class with rule_type = filter/event to allow for differentiation
Applied a new filter_match to aggregate the filters together

Lays the groundwork for filters, but currently should not change any functionality

Ref: WOR-111Update processor.py (#17252)

It's a high volume event and we don't need all the datafeat(analytics): Track issue alert event #17150
fix(rules): Correct rule key computations
feat(rules): Support keyed grouping of rule futures

feat(rules): Add environment support to rule processor and relevant conditions (#7053)
[alerts] Add frequency to rules

This augments GroupRuleStatus to be utilized for a global frequency. All rules can now determine the execution frequency, which is defaulted to once every 30 minutes.

Fixes GH-1400
Fixes GH-4065Reduce transaction savepoints in safe_execute calls (#3299)Merge branch 'master' into redesign/react

Conflicts:
	src/sentry/filters/builtins.py
	src/sentry/templates/sentry/organization-stats.html
	src/sentry/utils/raven.py
	src/sentry/web/api.py
	src/sentry/web/frontend/groups.pyMake Python path warning say what it means to say (#69669)
Use unicode string for auto interpreter warnings (#53671)

* Use unicode string for auto interpreter warnings

* Added some unit tests for interpreter selection

* Fix python 3 syntax issuesinterpreter discovery message tweaks (#53155)

* fixes #53120 (doclink generator now understands devel)
* added hosts to some warningsPython interpreter discovery (#50163)

* Python interpreter discovery

* No longer blindly default to only `/usr/bin/python`
* `ansible_python_interpreter` defaults to `auto_legacy`, which will discover the platform Python interpreter on some platforms (but still favor `/usr/bin/python` if present for backward compatibility). Use `auto` to always use the discovered interpreter, append `_silent` to either value to suppress warnings.
* includes new doc utility method `get_versioned_doclink` to generate a major.minor versioned doclink against docs.ansible.com (or some other config-overridden URL)

* docs revisions for python interpreter discovery

(cherry picked from commit 5b53c0012ab7212304c28fdd24cb33fd8ff755c2)

* verify output on some distros, cleanupFixed #31769 -- Improved default naming of merged migrations.

47 gives 60 in total (47 + 5 + 5 + 3).Replaced temporary lists used for passing arguments with iterables.Fixed #27300 -- Made makemigrations --dry-run output a string (no bytes)

Thanks Markus Holtermann for the report and the review.Fixed #26429 -- Added a timestamp to merge migration names.

This reduces the possibility of a naming conflict, especially after
squashing migrations.Fixed #26125 -- Fixed E731 flake warnings.Fixed #24755 -- Hid operations from dependency apps when merging migrations

Thanks Carl Meyer for the report and Tim Graham for the review.Fixed #24427 -- Stopped writing migration files in dry run mode when merging.

Also added display of migration to stdout when verbosity=3.Removed reduce() usage in makemigrations; refs #23796.

A lambda all_items_equal() replaced a reduce() that was broken for potential
3+-way merges. A reduce(operator.eq, ...) accumulates bools and can't
generically check equality of all items in a sequence:

>>> bool(reduce(operator.eq, [('migrations', '0001_initial')] * 3))
False

The code now counts the number of common ancestors to calculate slice offsets
for the branches. Each branch shares the same number of common ancestors.

The common_ancestor for loop statement had incomplete branch coverage.Fixed #22862 -- Added --noinput option to makemigrations.

Thanks artortenburger for the report.Removed unused imports in makemigrations[cspan] add support for audio only pages and catch page errors(closes #14995)[cspan] add support for brightcove live embeds(closes #13028)[cspan] Support Ustream embedded videos

Closes #11547Merge remote-tracking branch 'upstream/master'[cspan] Extract from path when no qualities (Closes #8317)Merge branch 'master' of github.com:rg3/youtube-dl[cspan] Fix extraction (fixes #8032)[cspan] Initialize 'video_type' to avoid 'UnboundLocalError' exceptions (#8032)Merge pull request #7057 from remitamine/cspan

[cspan] correct the clip info extraction (fixes #7335)[cspan] Extract subtitles[CSpan] Fix test cases CSpan_1 and CSpan_2[CSpan] Add detection for Senate ISVP. Closes #5302[cspan] Support multiple segments (Fixes #2674)[cspan] Roll back unfinished rtmp support[auengine] Modernize[cspan] Add support for newer videos (Fixes #2577)[cspan] Fix extraction (fixes #2291)

The webpage urls have changed.
The title and thumbnail are now extracted from an xml.[cspan] Make ‘www’ optional and improve the regex for extracting the id (fixes #2194)[cspan] Use HTTP download (Fixes #2098)Merge remote-tracking branch 'jaimeMF/opengraph'Add CSpanIE (closes #312)[postprocessor/ffmpeg] Add support for flac

Requested at http://stackoverflow.com/q/42828041/35070[postprocessor/ffmpeg] PEP 8[postprocessor/ffmpeg] Return correct filepath and ext in updated information in FFmpegExtractAudioPP

Return correct audio's filepath and ext instead of the video's when extracting audio and audio file already exists.[postprocessor/ffmpeg] Use ffmpeg as prefix since it's used all over the places (Closes #7371)[postprocessor/ffmpeg] Don't use '[youtube] ...' in messages

Because it can be used for other extractors.Merge branch 'embedthumb'Postprocessors: use a list for the files that can be deleted

We could only know if we had to delete the original file, but this system allows to specify us more files (like subtitles).FFmpegExtractAudioPP: Simplify handling of already existing files[postprocessor/common:postprocessor/ffmpeg] Generalize utimeDon't use bare 'except:'

They catch any exception, including KeyboardInterrupt, we don't want to catch it.[ffmpeg] --extrac-audio: Use the same options for avconv and ffmpeg

They have been available in ffmpeg since version 0.9, and we require 1.0 or higher.[ffmpeg] ModernizeMerge remote-tracking branch 'origin/prefer-ffmpeg'Split postprocessor package into multiple modulesbpo-8538: Add support for boolean actions to argparse (GH-11478)

Co-Authored-By: remilapeyre <remi.lapeyre@henki.fr>bpo-29553: Fix ArgumentParser.format_usage() for mutually exclusive groups (GH-14976)

Co-authored-by: Andrew Nester <andrew.nester.dev@gmail.com>Issue #11174: Add argparse.MetavarTypeHelpFormatter, which uses type names
for the names of optional and positional arguments in help messages.Fix for issue 9355 where with multiple mutually exclusive arguments, some brackets were being lost in the usage messagesfeat(Commits): Remove APM logging and deduplicate results (#18580)

Objective
A bug was reported that there are duplicate suggested commits/assignees. In this PR we are going to remove the Sentry APM logging and just deduplicate the results at the end of the request.feat(Commits): Use tracing to log values (#18548)

A bug was reported that there are duplicate suggested commits/assignees. This is difficult to replicate in a local environment. Attempted to use logging but got reverted because the data structures were too large for our internal logging infrastructure. This PR adds logging through Sentry tracing instead.Revert "feat(Commits): Add logging to determine where duplicate commits are coming from (#18526)" (#18533)

This reverts commit 5c14f91e042136b7b2c16198f6bf6614076de420.feat(Commits): Add logging to determine where duplicate commits are coming from (#18526)

Objective
A bug was reported that there are duplicate suggested commits/assignees. Both come the same endpoint. This is difficult to replicate in a local environment. We are adding logging so we can see what is going on inside the functions in a staging environment in ElasticSearch.ref: Deprecate bind_node_data (#16449)

It's no longer necessary to manually bind a single event using the new
Eventstore model since NodeData will be lazily fetched on any attempt to
access it. The only remaining use case for manually binding nodes is
when we want to fetch multiple events from nodestore and take advantage
of the get_multi command.ref: Simplify binding nodes (#15733)

When binding node data for a single event (the majority of use cases), we
now use "event.bind_node_data()" instead of
Event.objects.bind_nodes([event], "data"). In cases where we want to
bind nodes for multiple events at once to make use of nodestore's
multi_get command we will use the "eventstore.bind_nodes()" method.

The motivation for making this change now is so we can completely remove the EventManager (and the Django model manager) from our Event model.feat(api): Speed up load time of incident suspect commits via caching (SEN-738)

Adds a new `IncidentSuspectCommit` that we'll use to cache suspect commits on incident creation.

Will follow this up with a separate pr to recalculate these if the commits are deleted or modified
in some way.fix: Fix a bunch of null references (#12637)


Since we turned on Rust-based store normalization a lot more data is
persisted that was previously discarded.

Update code to deal with it.

Fix SENTRY-9X7
Fix SENTRY-9BR
Fix SENTRY-A58
Fix SENTRY-9C3
Fix SENTRY-A6Z
Fix SENTRY-A48
Fix SENTRY-A4A
Fix SENTRY-A9D
fix(commits) Fix mistake in java suspect commits (#12077)

The `module` key in java stacktraces includes the class name.
I originally thought it was the containing namespace, but after looking
at our demo applications, spring and log4j that isn't the case. By
replacing the terminal node with the filename we can get a probable file
name more reliably.

Fixes APP-1099fix: Workaround for invalid filenames in frames (#12122)
fix(commits) Improve suspect commit matching for java (#12046)

Java stacktrace frames do not have `abs_path` or full paths in the
`filename` key as that information is not easily available in Java's
stdlib. We need a full file path to match frames with commits. We can
leverage the general practice of java module paths ~= file paths to
improve suspect commit matching for java projects.

Ideally in the longer term the java-sdk would mangle stackframes before
submitting them but we're not there yet.

Fixes APP-1099ref(metrics): Change metrics.incr default kwarg skip_internal to Truefix(owners): Fix ordering of related releases

This adjusts the "recent releases" behavior to use releases that are **at or before** the first release, as newer releases certainly **cannot** be responsible for the issue.

It also moves the ``get_closest_releases`` into the committers utils as its not used by any other party.fix(owners): Various fixes for suggested commits

- Handle empty commit lists
- Remove duplicate commits
- Add suspect commits to plaintext emailsfix(owners): Correct return value as exceptionfeat: Enhance suggested commits and add to alerts

- Refactor components to use new shared CommitRow
- Add Suspect Commits to alert emails
- Refactor committers scanning code to handle various edge cases.[crackle] authorize media detail request(closes #16931)[crackle] extract ism and http formats[crackle] Bypass geo restriction[crackle] Fix extraction (closes #15969)[crackle] improve extraction

- extract vtt subtitles
- extract multiple resolutions for thumbnails
- pass geo verification proxy headers
- add support for mobile urls[crackle] Revert to template-based thumbnail extraction

To reduce to number of HTTP requests[crackle] Fix extraction and update _TESTS (closes #10333)[crackle] add prefix to format ids[crackle] improve format sorting[crackle] Add new extractor[tv2] detect DRM protection[tv2] add support for mtv.fi and fix tv2.no article extraction(closes #10543)[tv2] Fix and improve extraction (closes #22787)[tv2] Improve extraction[tv2] Add extractor (#5724)[xhamster] Fix extraction (closes #24205)[xhamster] Add support for mobile URLs and fix thumbnail extraction
[xhamster] Fix extraction (closes #14884)[xhamster] Extract all formats and fix duration extraction (#13593)[xhamster] Add support for new URL schema (closes #13593)[xhamster] Simplify (closes #13216)[xhamster] Fix author and like/dislike count extraction[xhamster] Extract categories (closes #11728)[xhamster] Capture and output videoClosed error (#12263)[xhamster] Fix duration extraction (closes #11549)[xhamster] Fix uploader extraction[xhamster] Change title regex precedence[xhamster] Fix view count extraction[xhamster] Fix duration extraction[xhamster] Fix upload date extraction[xhamster] Improve title extractionMerge pull request #8182 from atomic83/patch-1

Extract xHamster title fixMerge pull request #6955 from atomic83/patch-1

More title extraction fixing.[xhamster] Fix title extraction (Closes #6944)[xhamster] flake8[xhamster] Fix uploader extraction[xhamster] Fix thumbnail extraction[xhamster] Make more robustMerge pull request #6467 from vijayanandnandam/master

fixing xhamster file extractionMerge pull request #4615 from dwemthy/https_xhamster

[xhamster] Add HTTPS supportMerge branch 'master' of github.com:rg3/youtube-dl[xhamster] Fix and improve[xhamster] Futher simplification[xhamster] Use unicode_literals[xhamster] Add support for hd video

Signed-off-by: Philipp Hagemeister <phihag@phihag.de>Merge pull request #1919 from rzhxeo/xhamster

[XHamsterIE] Fix HD video detection[xhamster] Add support for age_limit (Instead of #1627)XHamsterIE: Fix support for new HD video url format and add test (closes PR #1443)[xhamster] use determine_extMerge pull request #1301 from rzhxeo/xhamster

XHamsterIE: Fix video extension and add video description[xhamster] Move into own fileIssue #26027, #27524: Add PEP 519/__fspath__() support to os and
os.path.

Thanks to Jelle Zijlstra for the initial patch against posixmodule.c.Issue #23742: ntpath.expandvars() no longer loses unbalanced single quotes.Issue #15275: Clean up and speed up the ntpath module.Issue #6815: os.path.expandvars() now supports non-ASCII environment
variables names and values.Use augassign.Issue3187 again: test_ntpath failed when run with the -bb option
(BytesWarning: Comparison between bytes and string)Second part of #3187, for windows:
os and os.path functions now accept both unicode and byte strings for file names.

Reviewed by Guido.Merged revisions 53952-54987 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r53954 | jeremy.hylton | 2007-02-26 10:41:18 -0800 (Mon, 26 Feb 2007) | 10 lines

  Do not copy free variables to locals in class namespaces.

  Fixes bug 1569356, but at the cost of a minor incompatibility in
  locals().  Add test that verifies that the class namespace is not
  polluted.  Also clarify the behavior in the library docs.

  Along the way, cleaned up the dict_to_map and map_to_dict
  implementations and added some comments that explain what they do.
........
  r53955 | jeremy.hylton | 2007-02-26 11:00:20 -0800 (Mon, 26 Feb 2007) | 2 lines

  Fix assertion.
........
  r53969 | neal.norwitz | 2007-02-26 14:41:45 -0800 (Mon, 26 Feb 2007) | 3 lines

  When printing an unraisable error, don't print exceptions. before the name.
  This duplicates the behavior whening normally printing exceptions.
........
  r53970 | andrew.kuchling | 2007-02-26 15:02:47 -0800 (Mon, 26 Feb 2007) | 1 line

  Markup fix
........
  r53975 | neal.norwitz | 2007-02-26 15:48:27 -0800 (Mon, 26 Feb 2007) | 3 lines

  SF #1669182, 2.5 was already fixed.  Just assert in 2.6 since string exceptions
  are gone.
........
  r53976 | andrew.kuchling | 2007-02-26 15:54:17 -0800 (Mon, 26 Feb 2007) | 1 line

  Add some items
........
  r53981 | jeremy.hylton | 2007-02-26 17:01:59 -0800 (Mon, 26 Feb 2007) | 4 lines

  Fix long-standing bug in name mangling for package imports

  Reported by Mike Verdone.
........
  r53993 | jeremy.hylton | 2007-02-27 08:00:06 -0800 (Tue, 27 Feb 2007) | 2 lines

  tabify
........
  r53994 | jeremy.hylton | 2007-02-27 08:13:23 -0800 (Tue, 27 Feb 2007) | 5 lines

  tabify

  Note that ast.c still has a mix of tabs and spaces, because it
  attempts to use four-space indents for more of the new code.
........
  r53996 | jeremy.hylton | 2007-02-27 09:24:48 -0800 (Tue, 27 Feb 2007) | 2 lines

  whitespace normalization
........
  r53997 | jeremy.hylton | 2007-02-27 10:29:45 -0800 (Tue, 27 Feb 2007) | 24 lines

  Add checking for a number of metaclass error conditions.

  We add some new rules that are required for preserving internal
  invariants of types.

  1.  If type (or a subclass of type) appears in bases, it must appear
      before any non-type bases.  If a non-type base (like a regular
      new-style class) occurred first, it could trick type into
      allocating the new class an __dict__ which must be impossible.

  2. There are several checks that are made of bases when creating a
     type.  Those checks are now repeated when assigning to __bases__.
     We also add the restriction that assignment to __bases__ may not
     change the metaclass of the type.

  Add new tests for these cases and for a few other oddball errors that
  were no previously tested.  Remove a crasher test that was fixed.

  Also some internal refactoring:  Extract the code to find the most
  derived metaclass of a type and its bases.  It is now needed in two
  places.  Rewrite the TypeError checks in test_descr to use doctest.
  The tests now clearly show what exception they expect to see.
........
  r53998 | jeremy.hylton | 2007-02-27 10:33:31 -0800 (Tue, 27 Feb 2007) | 2 lines

  Add news about changes to metaclasses and __bases__ error checking.
........
  r54016 | armin.rigo | 2007-02-28 01:25:29 -0800 (Wed, 28 Feb 2007) | 3 lines

  Modify the segfaulting example to show why r53997 is not a solution to
  it.
........
  r54022 | brett.cannon | 2007-02-28 10:15:00 -0800 (Wed, 28 Feb 2007) | 2 lines

  Add a test for instantiating SyntaxError with no arguments.
........
  r54026 | raymond.hettinger | 2007-02-28 10:27:41 -0800 (Wed, 28 Feb 2007) | 1 line

  Docstring nit.
........
  r54033 | raymond.hettinger | 2007-02-28 10:37:52 -0800 (Wed, 28 Feb 2007) | 1 line

  Prepare collections module for pure python code entries.
........
  r54053 | raymond.hettinger | 2007-02-28 22:16:43 -0800 (Wed, 28 Feb 2007) | 1 line

  Add collections.NamedTuple
........
  r54054 | neal.norwitz | 2007-02-28 23:04:41 -0800 (Wed, 28 Feb 2007) | 1 line

  Add Pat and Eric for work on PEP 3101 in the sandbox
........
  r54061 | andrew.kuchling | 2007-03-01 06:36:12 -0800 (Thu, 01 Mar 2007) | 1 line

  Add NamedTuple
........
  r54080 | georg.brandl | 2007-03-02 06:37:12 -0800 (Fri, 02 Mar 2007) | 2 lines

  Bug #1628895: some better tries to find HTML documentation in pydoc.
........
  r54086 | raymond.hettinger | 2007-03-02 11:20:46 -0800 (Fri, 02 Mar 2007) | 1 line

  Fix embarrassing typo and fix constantification of None
........
  r54088 | georg.brandl | 2007-03-02 12:30:14 -0800 (Fri, 02 Mar 2007) | 2 lines

  Bugs #1668032, #1668036, #1669304: clarify behavior of PyMem_Realloc and _Resize.
........
  r54114 | georg.brandl | 2007-03-04 09:18:54 -0800 (Sun, 04 Mar 2007) | 2 lines

  Fix a bug in test_dict and test_userdict, found at the PyPy sprint.
........
  r54124 | skip.montanaro | 2007-03-04 12:52:28 -0800 (Sun, 04 Mar 2007) | 2 lines

  Teach setup.py how to find Berkeley DB on Macs using MacPorts.
........
  r54125 | skip.montanaro | 2007-03-04 12:54:12 -0800 (Sun, 04 Mar 2007) | 1 line

  note MacPorts/BerkDB change in setup.py
........
  r54136 | neal.norwitz | 2007-03-04 23:52:01 -0800 (Sun, 04 Mar 2007) | 1 line

  Added Pete for 3101 too
........
  r54138 | facundo.batista | 2007-03-05 08:31:54 -0800 (Mon, 05 Mar 2007) | 1 line

  Minor corrections to docs, and an explanation comentary
........
  r54139 | georg.brandl | 2007-03-05 14:28:08 -0800 (Mon, 05 Mar 2007) | 3 lines

  Patch #1674228: when assigning a slice (old-style), check for the
  sq_ass_slice instead of the sq_slice slot.
........
  r54149 | georg.brandl | 2007-03-06 01:33:01 -0800 (Tue, 06 Mar 2007) | 3 lines

  Nit: a struct field is set to GenericAlloc, not GenericAlloc().
........
  r54150 | georg.brandl | 2007-03-06 02:02:47 -0800 (Tue, 06 Mar 2007) | 3 lines

  Patch #1671450: add a section about subclassing builtin types to the
  "extending and embedding" tutorial.
........
  r54152 | martin.v.loewis | 2007-03-06 02:41:24 -0800 (Tue, 06 Mar 2007) | 2 lines

  Patch #1121142: Implement ZipFile.open.
........
  r54154 | georg.brandl | 2007-03-06 03:51:14 -0800 (Tue, 06 Mar 2007) | 2 lines

  A test case for the fix in #1674228.
........
  r54156 | georg.brandl | 2007-03-06 03:52:24 -0800 (Tue, 06 Mar 2007) | 2 lines

  Patch #1672481: fix bug in idlelib.MultiCall.
........
  r54159 | georg.brandl | 2007-03-06 04:17:50 -0800 (Tue, 06 Mar 2007) | 1 line

  Bug #1674503: close the file opened by execfile() in an error condition.
........
  r54160 | georg.brandl | 2007-03-06 05:32:52 -0800 (Tue, 06 Mar 2007) | 3 lines

  Fix another reincarnation of bug #1576657 in defaultdict.
........
  r54162 | georg.brandl | 2007-03-06 05:35:00 -0800 (Tue, 06 Mar 2007) | 2 lines

  A test case for the defaultdict KeyError bug.
........
  r54164 | georg.brandl | 2007-03-06 05:37:45 -0800 (Tue, 06 Mar 2007) | 3 lines

  Patch #1663234: you can now run doctest on test files and modules
  using "python -m doctest [-v] filename ...".
........
  r54165 | martin.v.loewis | 2007-03-06 06:43:00 -0800 (Tue, 06 Mar 2007) | 3 lines

  Patch #912410: Replace HTML entity references for attribute values
  in HTMLParser.
........
  r54166 | skip.montanaro | 2007-03-06 07:41:38 -0800 (Tue, 06 Mar 2007) | 1 line

  patch 1673619 - identify extension modules which cannot be built
........
  r54167 | guido.van.rossum | 2007-03-06 07:50:01 -0800 (Tue, 06 Mar 2007) | 5 lines

  Patch #1646728: datetime.fromtimestamp fails with negative
  fractional times.  With unittest.

  Somebody please backport to 2.5.
........
  r54169 | georg.brandl | 2007-03-06 09:49:14 -0800 (Tue, 06 Mar 2007) | 2 lines

  Fix cmp vs. key argument for list.sort.
........
  r54170 | georg.brandl | 2007-03-06 10:21:32 -0800 (Tue, 06 Mar 2007) | 2 lines

  Small nit, found by Neal.
........
  r54171 | georg.brandl | 2007-03-06 10:29:58 -0800 (Tue, 06 Mar 2007) | 3 lines

  Patch #1602128: clarify that richcmp methods can return NotImplemented
  and should return True or False otherwise.
........
  r54173 | georg.brandl | 2007-03-06 10:41:12 -0800 (Tue, 06 Mar 2007) | 2 lines

  Patch #1638879: don't accept strings with embedded NUL bytes in long().
........
  r54175 | georg.brandl | 2007-03-06 10:47:31 -0800 (Tue, 06 Mar 2007) | 2 lines

  Patch #1673121: update README wrt. OSX default shell.
........
  r54177 | georg.brandl | 2007-03-06 10:59:11 -0800 (Tue, 06 Mar 2007) | 3 lines

  Patch #1654417: make operator.{get,set,del}slice use the full range
  of Py_ssize_t.
........
  r54180 | walter.doerwald | 2007-03-06 12:38:57 -0800 (Tue, 06 Mar 2007) | 4 lines

  Patch for bug #1633621: if curses.resizeterm() or
  curses.resize_term() is called, update _curses.LINES,
  _curses.COLS, curses.LINES and curses.COLS.
........
  r54182 | walter.doerwald | 2007-03-06 13:15:24 -0800 (Tue, 06 Mar 2007) | 2 lines

  Document change to curses.
........
  r54188 | georg.brandl | 2007-03-06 16:34:46 -0800 (Tue, 06 Mar 2007) | 5 lines

  Variant of patch #697613: don't exit the interpreter on a SystemExit
  exception if the -i command line option or PYTHONINSPECT environment
  variable is given, but break into the interactive interpreter just like
  on other exceptions or normal program exit.
   (backport)
........
  r54189 | georg.brandl | 2007-03-06 16:40:28 -0800 (Tue, 06 Mar 2007) | 4 lines

  Patch #703779: unset __file__ in __main__ after running a file. This
  makes the filenames the warning module prints much more sensible when
  a PYTHONSTARTUP file is used.
........
  r54192 | george.yoshida | 2007-03-06 20:21:18 -0800 (Tue, 06 Mar 2007) | 2 lines

  add versionadded info
........
  r54195 | georg.brandl | 2007-03-06 23:39:06 -0800 (Tue, 06 Mar 2007) | 2 lines

  Patch #812285: allow multiple auth schemes in AbstractBasicAuthHandler.
........
  r54197 | georg.brandl | 2007-03-07 00:31:51 -0800 (Wed, 07 Mar 2007) | 3 lines

  Patch #1001604: glob.glob() now returns unicode filenames if it was
  given a unicode argument and os.listdir() returns unicode filenames.
........
  r54199 | georg.brandl | 2007-03-07 01:09:40 -0800 (Wed, 07 Mar 2007) | 3 lines

  Patches #1550273, #1550272: fix a few bugs in unittest and add a
  comprehensive test suite for the module.
........
  r54201 | georg.brandl | 2007-03-07 01:21:06 -0800 (Wed, 07 Mar 2007) | 3 lines

  Patch #787789: allow to pass custom TestRunner instances to unittest's
  main() function.
........
  r54202 | georg.brandl | 2007-03-07 01:34:45 -0800 (Wed, 07 Mar 2007) | 2 lines

  Patch #1669331: clarify shutil.copyfileobj() behavior wrt. file position.
........
  r54204 | martin.v.loewis | 2007-03-07 03:04:33 -0800 (Wed, 07 Mar 2007) | 2 lines

  Bug #1115886: os.path.splitext('.cshrc') gives now ('.cshrc', '').
........
  r54206 | georg.brandl | 2007-03-07 03:37:42 -0800 (Wed, 07 Mar 2007) | 2 lines

  Patch #1675471: convert test_pty to unittest.
........
  r54207 | georg.brandl | 2007-03-07 03:54:49 -0800 (Wed, 07 Mar 2007) | 4 lines

  Add some sanity checks to unittest.TestSuite's addTest(s) methods.
  Fixes #878275.
........
  r54209 | guido.van.rossum | 2007-03-07 07:16:29 -0800 (Wed, 07 Mar 2007) | 3 lines

  Windows doesn't support negative timestamps.  Skip the tests involving them
  if os.name == "nt".
........
  r54219 | martin.v.loewis | 2007-03-08 05:42:43 -0800 (Thu, 08 Mar 2007) | 2 lines

  Add missing ) in parenthical remark.
........
  r54220 | georg.brandl | 2007-03-08 09:49:06 -0800 (Thu, 08 Mar 2007) | 2 lines

  Fix #1676656: \em is different from \emph...
........
  r54222 | georg.brandl | 2007-03-08 10:37:31 -0800 (Thu, 08 Mar 2007) | 2 lines

  Add a NEWS entry for rev. 54207,8.
........
  r54225 | raymond.hettinger | 2007-03-08 11:24:27 -0800 (Thu, 08 Mar 2007) | 1 line

  SF 1676321:  empty() returned wrong result
........
  r54227 | collin.winter | 2007-03-08 11:58:14 -0800 (Thu, 08 Mar 2007) | 1 line

  Backported r54226 from p3yk: Move test_unittest, test_doctest and test_doctest2 higher up in the testing order.
........
  r54230 | raymond.hettinger | 2007-03-08 13:33:47 -0800 (Thu, 08 Mar 2007) | 1 line

  SF #1637850:  make_table in difflib did not work with unicode
........
  r54232 | collin.winter | 2007-03-08 14:16:25 -0800 (Thu, 08 Mar 2007) | 1 line

  Patch #1668482: don't use '-' in mkstemp
........
  r54233 | brett.cannon | 2007-03-08 15:58:11 -0800 (Thu, 08 Mar 2007) | 10 lines

  Introduce test.test_support.TransientResource.  It's a context manager to
  surround calls to resources that may or may not be available.  Specifying the
  expected exception and attributes to be raised if the resource is not available
  prevents overly broad catching of exceptions.

  This is meant to help suppress spurious failures by raising
  test.test_support.ResourceDenied if the exception matches.  It would probably
  be good to go through the various network tests and surround the calls to catch
  connection timeouts (as done with test_socket_ssl in this commit).
........
  r54234 | collin.winter | 2007-03-08 19:15:56 -0800 (Thu, 08 Mar 2007) | 1 line

  Patch #1481079: Support of HTTP_REFERER in CGIHTTPServer.py
........
  r54235 | collin.winter | 2007-03-08 19:26:32 -0800 (Thu, 08 Mar 2007) | 1 line

  Add NEWS item for patch #1481079 (r54234).
........
  r54237 | neal.norwitz | 2007-03-08 21:59:01 -0800 (Thu, 08 Mar 2007) | 1 line

  Fix SF #1676971, Complex OverflowError has a typo
........
  r54239 | georg.brandl | 2007-03-09 04:58:41 -0800 (Fri, 09 Mar 2007) | 2 lines

  Typo.
........
  r54240 | martin.v.loewis | 2007-03-09 07:35:55 -0800 (Fri, 09 Mar 2007) | 2 lines

  Patch #957003: Implement smtplib.LMTP.
........
  r54243 | collin.winter | 2007-03-09 10:09:10 -0800 (Fri, 09 Mar 2007) | 2 lines

  Bug #1629566: clarify the docs on the return values of parsedate() and parsedate_tz() in email.utils and rfc822.
........
  r54244 | thomas.heller | 2007-03-09 11:21:28 -0800 (Fri, 09 Mar 2007) | 3 lines

  Fix bug #1646630: ctypes.string_at(buf, 0) and ctypes.wstring_at(buf, 0)
  returned string up to the first NUL character.
........
  r54245 | martin.v.loewis | 2007-03-09 11:36:01 -0800 (Fri, 09 Mar 2007) | 2 lines

  Add Ziga Seilnacht.
........
  r54247 | collin.winter | 2007-03-09 12:33:07 -0800 (Fri, 09 Mar 2007) | 2 lines

  Patch #1491866: change the complex() constructor to allow parthensized forms. This means complex(repr(x)) now works instead of raising a ValueError.
........
  r54248 | thomas.heller | 2007-03-09 12:39:22 -0800 (Fri, 09 Mar 2007) | 7 lines

  Bug #1651235: When a tuple was passed to a ctypes function call,
  Python would crash instead of raising an error.

  The crash was caused by a section of code that should have been
  removed long ago, at that time ctypes had other ways to pass
  parameters to function calls.
........
  r54250 | collin.winter | 2007-03-09 15:30:39 -0800 (Fri, 09 Mar 2007) | 1 line

  Hashing simplification pointed out by Thomas Wouters.
........
  r54252 | collin.winter | 2007-03-09 18:23:40 -0800 (Fri, 09 Mar 2007) | 5 lines

  * Unlink test files before and after each test; hopefully this will cut down on recent buildbot failures in test_islink.
  * Drop safe_remove() in favor of test_support.unlink().
  * Fix the indentation of test_samefile so that it runs.
........
  r54253 | collin.winter | 2007-03-09 18:51:26 -0800 (Fri, 09 Mar 2007) | 3 lines

  Bug #1531963: Make SocketServer.TCPServer's server_address always be equal to calling getsockname() on the server's socket.
  Will backport.
........
  r54254 | neal.norwitz | 2007-03-09 19:19:18 -0800 (Fri, 09 Mar 2007) | 4 lines

  Simplify a little by handling the TCP case first.
  Update to use predominant style of spaces around = in args list
  and print to stderr if debugging.
........
  r54256 | collin.winter | 2007-03-09 19:35:34 -0800 (Fri, 09 Mar 2007) | 1 line

  Add proper attribution for a bug fix.
........
  r54257 | georg.brandl | 2007-03-09 23:38:14 -0800 (Fri, 09 Mar 2007) | 2 lines

  Typos.
........
  r54260 | collin.winter | 2007-03-10 06:33:32 -0800 (Sat, 10 Mar 2007) | 1 line

  Convert an assert to a raise so it works even in the presence of -O.
........
  r54262 | collin.winter | 2007-03-10 06:41:48 -0800 (Sat, 10 Mar 2007) | 2 lines

  Patch #1599845: Add an option to disable the implicit calls to server_bind() and server_activate() in the constructors for TCPServer, SimpleXMLRPCServer and DocXMLRPCServer.
........
  r54268 | georg.brandl | 2007-03-11 00:28:46 -0800 (Sun, 11 Mar 2007) | 2 lines

  Add missing "return" statements in exception handler.
........
  r54270 | ziga.seilnacht | 2007-03-11 08:54:54 -0700 (Sun, 11 Mar 2007) | 3 lines

  Patch #1675981: remove unreachable code from type.__new__() method.
  __dict__ and __weakref__ are removed from the slots tuple earlier
  in the code, in the loop that mangles slot names. Will backport.
........
  r54271 | collin.winter | 2007-03-11 09:00:20 -0700 (Sun, 11 Mar 2007) | 3 lines

  Patch #1192590: Fix pdb's "ignore" and "condition" commands so they trap the IndexError caused by passing in an invalid breakpoint number.
  Will backport.
........
  r54274 | vinay.sajip | 2007-03-11 11:32:07 -0700 (Sun, 11 Mar 2007) | 1 line

  Fix resource leak reported in SF #1516995.
........
  r54278 | collin.winter | 2007-03-11 18:55:54 -0700 (Sun, 11 Mar 2007) | 4 lines

  Patch #1678662: ftp.python.org does not exist. So the testcode in urllib.py must use a more
  stable FTP.
  Will backport.
........
  r54280 | barry.warsaw | 2007-03-11 20:20:01 -0700 (Sun, 11 Mar 2007) | 8 lines

  Tokio Kikuchi's fix for SF bug #1629369; folding whitespace allowed in the
  display name of an email address, e.g.

  Foo
  \tBar <foo@example.com>

  Test case added by Barry.
........
  r54282 | skip.montanaro | 2007-03-11 20:30:50 -0700 (Sun, 11 Mar 2007) | 4 lines

  Sane humans would call these invalid tests, but Andrew McNamara pointed out
  that given the inputs in these tests Excel does indeed produce the output
  these tests expect.  Document that for future confused folks.
........
  r54283 | martin.v.loewis | 2007-03-12 03:50:39 -0700 (Mon, 12 Mar 2007) | 2 lines

  Bug #1675511: Use -Kpic instead of -xcode=pic32 on Solaris/x86.
........
  r54285 | martin.v.loewis | 2007-03-12 04:01:10 -0700 (Mon, 12 Mar 2007) | 2 lines

  Patch #1677862: Require a space or tab after import in .pth files.
........
  r54287 | georg.brandl | 2007-03-12 06:17:36 -0700 (Mon, 12 Mar 2007) | 8 lines

  Backport from Py3k branch:

  Patch #1591665: implement the __dir__() special function lookup in PyObject_Dir.

  Had to change a few bits of the patch because classobjs and __methods__ are still
  in Py2.6.
........
  r54288 | georg.brandl | 2007-03-12 07:30:05 -0700 (Mon, 12 Mar 2007) | 3 lines

  Bug #1678647: write a newline after printing an exception in any
  case, even when converting the value to a string failed.
........
  r54290 | collin.winter | 2007-03-12 08:57:19 -0700 (Mon, 12 Mar 2007) | 1 line

  Patch #1678088: convert test_operations to use unittest, fold the result into test_dict.
........
  r54291 | collin.winter | 2007-03-12 09:11:39 -0700 (Mon, 12 Mar 2007) | 3 lines

  Bug #742342: make Python stop segfaulting on infinitely-recursive reload()s. Fixed by patch #922167.
  Will backport.
........
  r54292 | georg.brandl | 2007-03-12 09:15:09 -0700 (Mon, 12 Mar 2007) | 2 lines

  Typo fix.
........
  r54295 | collin.winter | 2007-03-12 10:24:07 -0700 (Mon, 12 Mar 2007) | 1 line

  Patch #1670993: Refactor test_threadedtempfile.py to use unittest.
........
  r54296 | tim.peters | 2007-03-12 11:07:52 -0700 (Mon, 12 Mar 2007) | 2 lines

  Whitespace normalization.
........
  r54297 | tim.peters | 2007-03-12 11:09:22 -0700 (Mon, 12 Mar 2007) | 2 lines

  Set missing svn:eol-style property on text files.
........
  r54315 | brett.cannon | 2007-03-12 19:34:09 -0700 (Mon, 12 Mar 2007) | 8 lines

  Add test.test_support.transient_internet .  Returns a context manager that
  nests test.test_support.TransientResource context managers that capture
  exceptions raised when the Internet connection is flaky.

  Initially using in test_socket_ssl but should probably be expanded to cover any
  test that should not raise the captured exceptions if the Internet connection
  works.
........
  r54316 | brett.cannon | 2007-03-12 20:05:40 -0700 (Mon, 12 Mar 2007) | 2 lines

  Fix a typo where the variable name was not updated.
........
  r54318 | neal.norwitz | 2007-03-12 21:59:58 -0700 (Mon, 12 Mar 2007) | 1 line

  Add Jerry Seutter for a bunch of his recent patches refactoring tests
........
  r54319 | neal.norwitz | 2007-03-12 22:07:14 -0700 (Mon, 12 Mar 2007) | 7 lines

  Add some other acks for recent checkins:

  Brian Leair  - 922167
  Tomer Filiba - 1591665
  Jeremy Jones - 1192590
........
  r54321 | neal.norwitz | 2007-03-12 22:31:38 -0700 (Mon, 12 Mar 2007) | 9 lines

  Fix some style nits:
    * lines too long
    * wrong indentation
    * space after a function name
    * wrong function name in error string
    * simplifying some logic

  Also add an error check to PyDict_SetItemString.
........
  r54322 | georg.brandl | 2007-03-13 00:23:16 -0700 (Tue, 13 Mar 2007) | 2 lines

  Typo and grammar fixes.
........
  r54323 | georg.brandl | 2007-03-13 00:50:57 -0700 (Tue, 13 Mar 2007) | 2 lines

  Patch #1679379: add documentation for fnmatch.translate().
........
  r54325 | georg.brandl | 2007-03-13 00:57:51 -0700 (Tue, 13 Mar 2007) | 2 lines

  Patch #1642844: comments to clarify the complexobject constructor.
........
  r54326 | georg.brandl | 2007-03-13 01:14:27 -0700 (Tue, 13 Mar 2007) | 3 lines

  Patch #1668100: urllib2 now correctly raises URLError instead of
  OSError if accessing a local file via the file:// protocol fails.
........
  r54327 | georg.brandl | 2007-03-13 02:32:11 -0700 (Tue, 13 Mar 2007) | 4 lines

  Patch #1635454: the csv.DictWriter class now includes the offending
  field names in its exception message if you try to write a record with
  a dictionary containing fields not in the CSV field names list.
........
  r54328 | georg.brandl | 2007-03-13 02:41:31 -0700 (Tue, 13 Mar 2007) | 3 lines

  Patch #1555098: use str.join() instead of repeated string
  concatenation in robotparser.
........
  r54329 | georg.brandl | 2007-03-13 03:06:48 -0700 (Tue, 13 Mar 2007) | 3 lines

  Patch #1542681: add entries for "with", "as" and "CONTEXTMANAGERS" to
  pydoc's help keywords.
........
  r54331 | georg.brandl | 2007-03-13 03:19:22 -0700 (Tue, 13 Mar 2007) | 3 lines

  Patch #1569798: fix a bug in distutils when building Python from a
  directory within sys.exec_prefix.
........
  r54333 | martin.v.loewis | 2007-03-13 03:24:00 -0700 (Tue, 13 Mar 2007) | 4 lines

  Patch #1449244: Support Unicode strings in
  email.message.Message.{set_charset,get_content_charset}.
  Will backport.
........
  r54335 | lars.gustaebel | 2007-03-13 03:47:19 -0700 (Tue, 13 Mar 2007) | 34 lines

  This is the implementation of POSIX.1-2001 (pax) format read/write
  support.

  The TarInfo class now contains all necessary logic to process and
  create tar header data which has been moved there from the TarFile
  class. The fromtarfile() method was added. The new path and linkpath
  properties are aliases for the name and linkname attributes in
  correspondence to the pax naming scheme.

  The TarFile constructor and classmethods now accept a number of
  keyword arguments which could only be set as attributes before (e.g.
  dereference, ignore_zeros). The encoding and pax_headers arguments
  were added for pax support. There is a new tarinfo keyword argument
  that allows using subclassed TarInfo objects in TarFile.

  The boolean TarFile.posix attribute is deprecated, because now three
  tar formats are supported. Instead, the desired format for writing is
  specified using the constants USTAR_FORMAT, GNU_FORMAT and PAX_FORMAT
  as the format keyword argument. This change affects TarInfo.tobuf()
  as well.

  The test suite has been heavily reorganized and partially rewritten.
  A new testtar.tar was added that contains sample data in many formats
  from 4 different tar programs.

  Some bugs and quirks that also have been fixed:
  Directory names do no longer have a trailing slash in TarInfo.name or
  TarFile.getnames().
  Adding the same file twice does not create a hardlink file member.
  The TarFile constructor does no longer need a name argument.
  The TarFile._mode attribute was renamed to mode and contains either
  'r', 'w' or 'a'.
........
  r54336 | georg.brandl | 2007-03-13 05:34:25 -0700 (Tue, 13 Mar 2007) | 3 lines

  Bug #1622896: fix a rare corner case where the bz2 module raised an
  error in spite of a succesful compression.
........
  r54338 | lars.gustaebel | 2007-03-13 08:47:07 -0700 (Tue, 13 Mar 2007) | 3 lines

  Quick fix for tests that fail on systems with an encoding other
  than 'iso8859-1'.
........
  r54339 | georg.brandl | 2007-03-13 10:43:32 -0700 (Tue, 13 Mar 2007) | 4 lines

  Patch #1603688: ConfigParser.SafeConfigParser now checks values that
  are set for invalid interpolation sequences that would lead to errors
  on reading back those values.
........
  r54341 | georg.brandl | 2007-03-13 11:15:41 -0700 (Tue, 13 Mar 2007) | 3 lines

  Patch #1581073: add a flag to textwrap that prevents the dropping of
  whitespace while wrapping.
........
  r54343 | georg.brandl | 2007-03-13 11:24:40 -0700 (Tue, 13 Mar 2007) | 2 lines

  Patch #1605192: list allowed states in error messages for imaplib.
........
  r54344 | georg.brandl | 2007-03-13 11:31:49 -0700 (Tue, 13 Mar 2007) | 4 lines

  Patch #1537850: tempfile.NamedTemporaryFile now has a "delete" parameter
  which can be set to False to prevent the default delete-on-close
  behavior.
........
  r54345 | collin.winter | 2007-03-13 11:53:04 -0700 (Tue, 13 Mar 2007) | 9 lines

  Add acks for recent patch checkins:

  Arvin Schnell - 1668482
  S?\195?\169bastien Martini - 1481079
  Heiko Wundram - 1491866
  Damon Kohler - 1545011
  Peter Parente - 1599845
  Bjorn Lindqvist - 1678662
........
  r54346 | georg.brandl | 2007-03-13 12:00:36 -0700 (Tue, 13 Mar 2007) | 2 lines

  Acks for recent patches.
........
  r54347 | georg.brandl | 2007-03-13 12:18:18 -0700 (Tue, 13 Mar 2007) | 3 lines

  Fix a tab.
........
  r54348 | georg.brandl | 2007-03-13 12:32:21 -0700 (Tue, 13 Mar 2007) | 4 lines

  Patch #1533909: the timeit module now accepts callables in addition to
  strings for the code to time and the setup code. Also added two
  convenience functions for instantiating a Timer and calling its methods.
........
  r54352 | georg.brandl | 2007-03-13 13:02:57 -0700 (Tue, 13 Mar 2007) | 3 lines

  Patch #1530482: add pydoc.render_doc() which returns the documentation
  for a thing instead of paging it to stdout, which pydoc.doc() does.
........
  r54357 | thomas.heller | 2007-03-13 13:42:52 -0700 (Tue, 13 Mar 2007) | 1 line

  Patch #1649190: Adding support for _Bool to ctypes as c_bool, by David Remahl.
........
  r54358 | georg.brandl | 2007-03-13 13:46:32 -0700 (Tue, 13 Mar 2007) | 2 lines

  Patch #1444529: the builtin compile() now accepts keyword arguments.
   (backport)
........
  r54359 | thomas.heller | 2007-03-13 14:01:39 -0700 (Tue, 13 Mar 2007) | 1 line

  Add versionadded marker for ctypes.c_bool.
........
  r54360 | georg.brandl | 2007-03-13 14:08:15 -0700 (Tue, 13 Mar 2007) | 3 lines

  Patch #1393667: pdb now has a "run" command which restarts the debugged
  Python program, optionally with different arguments.
........
  r54361 | georg.brandl | 2007-03-13 14:32:01 -0700 (Tue, 13 Mar 2007) | 3 lines

  Deprecate commands.getstatus().
........
  r54362 | georg.brandl | 2007-03-13 14:32:56 -0700 (Tue, 13 Mar 2007) | 2 lines

  NEWS entry for getstatus() deprecation.
........
  r54363 | georg.brandl | 2007-03-13 14:58:44 -0700 (Tue, 13 Mar 2007) | 4 lines

  Patch #1429539: pdb now correctly initializes the __main__ module for
  the debugged script, which means that imports from __main__ work
  correctly now.
........
  r54364 | georg.brandl | 2007-03-13 15:07:36 -0700 (Tue, 13 Mar 2007) | 4 lines

  Patch #957650: "%var%" environment variable references are now properly
  expanded in ntpath.expandvars(), also "~user" home directory references
  are recognized and handled on Windows.
........
  r54365 | georg.brandl | 2007-03-13 15:16:30 -0700 (Tue, 13 Mar 2007) | 2 lines

  Patch #1194449: correctly detect unbound methods in pydoc.
........
  r54367 | georg.brandl | 2007-03-13 15:49:43 -0700 (Tue, 13 Mar 2007) | 5 lines

  Patch #1185447: binascii.b2a_qp() now correctly quotes binary characters
  with ASCII value less than 32. Also, it correctly quotes dots only if
  they occur on a single line, as opposed to the previous behavior of
  quoting dots if they are the second character of any line.
........
  r54368 | collin.winter | 2007-03-13 16:02:15 -0700 (Tue, 13 Mar 2007) | 1 line

  Inline PyImport_GetModulesReloading().
........
  r54371 | barry.warsaw | 2007-03-13 21:59:50 -0700 (Tue, 13 Mar 2007) | 6 lines

  SF bug #1582282; decode_header() incorrectly splits not-conformant RFC
  2047-like headers where there is no whitespace between encoded words.  This
  fix changes the matching regexp to include a trailing lookahead assertion that
  the closing ?= must be followed by whitespace, newline, or end-of-string.
  This also changes the regexp to add the MULTILINE flag.
........
  r54372 | gregory.p.smith | 2007-03-14 00:17:40 -0700 (Wed, 14 Mar 2007) | 2 lines

  correct order and names of the less often used keyword parameters.
........
  r54373 | gregory.p.smith | 2007-03-14 00:19:50 -0700 (Wed, 14 Mar 2007) | 5 lines

  Its time to stop listing (Unix, Windows) when we really mean "everything but Mac OS 9"
  now that nobody is likely to use Python on Mac OS 9 and most of the (Mac) platform
  items are all OS X special API specific since OS X is unixy enough for these modules
  to be available out of the box.
........
  r54376 | georg.brandl | 2007-03-14 01:27:52 -0700 (Wed, 14 Mar 2007) | 4 lines

  Bug #767111: fix long-standing bug in urllib which caused an
  AttributeError instead of an IOError when the server's response didn't
  contain a valid HTTP status line.
........
  r54378 | ziga.seilnacht | 2007-03-14 05:24:09 -0700 (Wed, 14 Mar 2007) | 4 lines

  Patch #1680015: Don't modify __slots__ tuple if it contains an unicode
  name. Remove a reference leak that happened if the name could not be
  converted to string. Will backport.
........
  r54386 | martin.v.loewis | 2007-03-14 13:02:31 -0700 (Wed, 14 Mar 2007) | 3 lines

  Patch #1559413: Fix test_cmd_line if sys.executable contains a space.
  Will backport.
........
  r54389 | brett.cannon | 2007-03-14 14:40:13 -0700 (Wed, 14 Mar 2007) | 3 lines

  Note how test_socket_ssl has various exceptions that deal with a flaky Net
  connection are silenced.
........
  r54390 | brett.cannon | 2007-03-14 14:44:15 -0700 (Wed, 14 Mar 2007) | 2 lines

  Raise ResourceDenied in test_urllib2net when the Net connection goes bad.
........
  r54391 | neal.norwitz | 2007-03-14 21:41:20 -0700 (Wed, 14 Mar 2007) | 1 line

  Wrap a long line and fix a typo (is -> if)
........
  r54392 | georg.brandl | 2007-03-15 00:38:14 -0700 (Thu, 15 Mar 2007) | 3 lines

  Patch #1680978: consistently use "alive" instead of "active" in the
  thread lib doc.
........
  r54394 | georg.brandl | 2007-03-15 00:41:30 -0700 (Thu, 15 Mar 2007) | 3 lines

  Patch #1681153: the wave module now closes a file object it opened if
  initialization failed.
........
  r54397 | ziga.seilnacht | 2007-03-15 04:44:55 -0700 (Thu, 15 Mar 2007) | 3 lines

  Patch #1462488: prevent a segfault in object_reduce_ex() by splitting
  the implementation for __reduce__ and __reduce_ex__ into two separate
  functions. Fixes bug #931877. Will backport.
........
  r54404 | collin.winter | 2007-03-15 21:11:30 -0700 (Thu, 15 Mar 2007) | 3 lines

  Patch #1642547: Fix an error/crash when encountering syntax errors in complex if statements.
  Will backport.
........
  r54406 | georg.brandl | 2007-03-16 00:55:09 -0700 (Fri, 16 Mar 2007) | 5 lines

  Bug #1681228: the webbrowser module now correctly uses the default
  GNOME or KDE browser, depending on whether there is a session of one
  of those present. Also, it tries the Windows default browser before
  trying Mozilla variants.
   (backport)
........
  r54407 | georg.brandl | 2007-03-16 01:22:40 -0700 (Fri, 16 Mar 2007) | 4 lines

  Patch #1273829: os.walk() now has a "followlinks" parameter. If set to
  True (which is not the default), it visits symlinks pointing to
  directories.
........
  r54408 | georg.brandl | 2007-03-16 01:24:21 -0700 (Fri, 16 Mar 2007) | 2 lines

  Add \versionadded tag.
........
  r54409 | georg.brandl | 2007-03-16 01:33:47 -0700 (Fri, 16 Mar 2007) | 2 lines

  RFE #1670167: fix in isinstance() docs.
........
  r54412 | ziga.seilnacht | 2007-03-16 04:59:38 -0700 (Fri, 16 Mar 2007) | 3 lines

  Patch #1623563: allow __class__ assignment for classes with __slots__.
  The old and the new class are still required to have the same slot
  names, but the order in which they are specified is not relevant.
........
  r54413 | ziga.seilnacht | 2007-03-16 05:11:11 -0700 (Fri, 16 Mar 2007) | 2 lines

  Whitespace cleanup. Also remove the empty lines
  from the previous check in.
........
  r54414 | jeremy.hylton | 2007-03-16 07:49:11 -0700 (Fri, 16 Mar 2007) | 2 lines

  Remove warning: funcion declaration isn't a prototype
........
  r54415 | jeremy.hylton | 2007-03-16 08:59:47 -0700 (Fri, 16 Mar 2007) | 11 lines

  Clean up formatting of this file.

  The file should now follow PEP 7, except that it uses 4 space indents
  (in the style of Py3k).  This particular code would be really hard to
  read with the regular tab idents.

  Other changes:
   - reflow long lines
   - change multi-line conditionals to have test at end of line
........
  r54417 | collin.winter | 2007-03-16 14:13:35 -0700 (Fri, 16 Mar 2007) | 1 line

  Patch #1676994: Refactor test_popen2 to use unittest.
........
  r54418 | collin.winter | 2007-03-16 14:15:35 -0700 (Fri, 16 Mar 2007) | 1 line

  Remove test/output/test_popen2 (missed in r54417).
........
  r54419 | collin.winter | 2007-03-16 15:16:08 -0700 (Fri, 16 Mar 2007) | 1 line

  Patch 1339796: add a relpath() function to os.path.
........
  r54421 | georg.brandl | 2007-03-17 09:08:45 -0700 (Sat, 17 Mar 2007) | 5 lines

  Patch #1675423: PyComplex_AsCComplex() now tries to convert an object
  to complex using its __complex__() method before falling back to the
  __float__() method. Therefore, the functions in the cmath module now
  can operate on objects that define a __complex__() method.
   (backport)
........
  r54423 | gregory.p.smith | 2007-03-17 15:33:35 -0700 (Sat, 17 Mar 2007) | 2 lines

  move note to the correct section
........
  r54426 | georg.brandl | 2007-03-18 01:25:00 -0700 (Sun, 18 Mar 2007) | 2 lines

  Patch #1682878: the new socket methods are recv_into and recvfrom_into, not *_buf.
........
  r54432 | georg.brandl | 2007-03-18 11:28:25 -0700 (Sun, 18 Mar 2007) | 2 lines

  Patch #1678339: test case for bug in difflib.
........
  r54439 | collin.winter | 2007-03-19 11:52:08 -0700 (Mon, 19 Mar 2007) | 1 line

  Patch #1630118: add a SpooledTemporaryFile class to tempfile.
........
  r54441 | georg.brandl | 2007-03-19 12:02:48 -0700 (Mon, 19 Mar 2007) | 2 lines

  Patch #1683328: fixes and enhancements for "unparse" demo.
........
  r54456 | neal.norwitz | 2007-03-19 22:07:28 -0700 (Mon, 19 Mar 2007) | 1 line

  Add some doc that was left out from some change to platform.py
........
  r54457 | neal.norwitz | 2007-03-19 22:08:23 -0700 (Mon, 19 Mar 2007) | 1 line

  Add a comment about 3k migration
........
  r54458 | neal.norwitz | 2007-03-19 22:21:21 -0700 (Mon, 19 Mar 2007) | 1 line

  Get rid of deprecation warning when testing commands.getstatus()
........
  r54459 | neal.norwitz | 2007-03-19 22:23:09 -0700 (Mon, 19 Mar 2007) | 4 lines

  Try backing out 54407 to see if it corrects the problems on the Windows
  buildbots.  This rev was backported, so we will need to keep both branches
  in sync, pending the outcome of the test after this checkin.
........
  r54460 | neal.norwitz | 2007-03-19 23:13:25 -0700 (Mon, 19 Mar 2007) | 1 line

  Try to make this test more resistant to dropping from previous runs (ie, files that may exist but cause the test to fail).  Should be backported (assuming it works :-)
........
  r54461 | neal.norwitz | 2007-03-19 23:16:26 -0700 (Mon, 19 Mar 2007) | 1 line

  Try to make this test more resistant to dropping from previous runs (ie, files that may exist but cause the test to fail).  Should be backported (assuming it works :-)
........
  r54462 | neal.norwitz | 2007-03-19 23:53:17 -0700 (Mon, 19 Mar 2007) | 5 lines

  Try to be a little more resilient to errors.  This might help the test
  pass, but my guess is that it won't.  I'm guessing that some other
  test is leaving this file open which means it can't be removed
  under Windows AFAIK.
........
  r54463 | neal.norwitz | 2007-03-20 01:14:57 -0700 (Tue, 20 Mar 2007) | 8 lines

  Try to get test_urllib to pass on Windows by closing the file.
  I'm guessing that's the problem.  h.getfile() must be called *after*
  h.getreply() and the fp can be None.

  I'm not entirely convinced this is the best fix (or even correct).
  The buildbots will tell us if things improve or not.  I don't
  know if this needs to be backported (assuming it actually works).
........
  r54465 | raymond.hettinger | 2007-03-20 14:27:24 -0700 (Tue, 20 Mar 2007) | 1 line

  Extend work on rev 52962 and 53829 eliminating redundant PyObject_Hash() calls and fixing set/dict interoperability.
........
  r54468 | georg.brandl | 2007-03-20 16:05:14 -0700 (Tue, 20 Mar 2007) | 2 lines

  Fix for glob.py if filesystem encoding is None.
........
  r54479 | neal.norwitz | 2007-03-20 23:39:48 -0700 (Tue, 20 Mar 2007) | 1 line

  Remove unused file spotted by Paul Hankin
........
  r54480 | georg.brandl | 2007-03-21 02:00:39 -0700 (Wed, 21 Mar 2007) | 3 lines

  Patch #1682205: a TypeError while unpacking an iterable is no longer
  masked by a generic one with the message "unpack non-sequence".
........
  r54482 | georg.brandl | 2007-03-21 02:10:29 -0700 (Wed, 21 Mar 2007) | 2 lines

  New test for rev. 54407 which only uses directories under TESTFN.
........
  r54483 | georg.brandl | 2007-03-21 02:16:53 -0700 (Wed, 21 Mar 2007) | 2 lines

  Patch #1684834: document some utility C API functions.
........
  r54485 | georg.brandl | 2007-03-21 04:51:25 -0700 (Wed, 21 Mar 2007) | 2 lines

  Fix #1684254: split BROWSER contents with shlex to avoid displaying 'URL'.
........
  r54487 | andrew.kuchling | 2007-03-21 07:32:43 -0700 (Wed, 21 Mar 2007) | 1 line

  Add comments on maintenance of this file
........
  r54489 | andrew.kuchling | 2007-03-21 09:57:32 -0700 (Wed, 21 Mar 2007) | 1 line

  Fix sentence, and fix typo in example
........
  r54490 | andrew.kuchling | 2007-03-21 09:59:20 -0700 (Wed, 21 Mar 2007) | 1 line

  Put code examples at left margin instead of indenting them
........
  r54491 | facundo.batista | 2007-03-21 12:41:24 -0700 (Wed, 21 Mar 2007) | 1 line

  Minor clarification, saying that blocking means no timeout (from bug #882297)
........
  r54492 | ziga.seilnacht | 2007-03-21 13:07:56 -0700 (Wed, 21 Mar 2007) | 2 lines

  Bug #1675967: re patterns pickled with older Python versions can
  now be unpickled. Will backport.
........
  r54495 | raymond.hettinger | 2007-03-21 13:33:57 -0700 (Wed, 21 Mar 2007) | 1 line

  Add test and fix for fromkeys() optional argument.
........
  r54524 | georg.brandl | 2007-03-22 01:05:45 -0700 (Thu, 22 Mar 2007) | 2 lines

  Bug #1685704: use -m switch in timeit docs.
........
  r54533 | thomas.heller | 2007-03-22 12:44:31 -0700 (Thu, 22 Mar 2007) | 5 lines

  Back out "Patch #1643874: memory leak in ctypes fixed."

  The code in this patch leaves no way to give up the ownership of a
  BSTR instance.
........
  r54538 | thomas.heller | 2007-03-22 13:34:37 -0700 (Thu, 22 Mar 2007) | 2 lines

  Explain the purpose of the b_needsfree flag (forward ported from release25-maint).
........
  r54539 | guido.van.rossum | 2007-03-22 21:58:42 -0700 (Thu, 22 Mar 2007) | 12 lines

  - Bug #1683368: The object.__init__() and object.__new__() methods are
    now stricter in rejecting excess arguments.  The only time when
    either allows excess arguments is when it is not overridden and the
    other one is.  For backwards compatibility, when both are
    overridden, it is a deprecation warning (for now; maybe a Py3k
    warning later).

  When merging this into 3.0, the warnings should become errors.

  Note: without the change to string.py, lots of spurious warnings happen.
  What's going on there?
........
  r54540 | neal.norwitz | 2007-03-22 22:17:23 -0700 (Thu, 22 Mar 2007) | 1 line

  Add Mark Dickinson for SF # 1675423.
........
  r54541 | martin.v.loewis | 2007-03-23 03:35:49 -0700 (Fri, 23 Mar 2007) | 3 lines

  Patch #1686451: Fix return type for PySequence_{Count,Index,Fast_GET_SIZE}.
  Will backport.
........
  r54543 | martin.v.loewis | 2007-03-23 06:27:15 -0700 (Fri, 23 Mar 2007) | 3 lines

  Bug #978833: Revert r50844, as it broke _socketobject.dup.
  Will backport.
........
  r54545 | guido.van.rossum | 2007-03-23 11:53:03 -0700 (Fri, 23 Mar 2007) | 8 lines

  Add a type.__init__() method that enforces the same signature as
  type.__new__(), and then calls object.__init__(cls), just to be anal.

  This allows us to restore the code in string.py's _TemplateMetaclass
  that called super(...).__init__(name, bases, dct), which I commented
  out yesterday since it broke due to the stricter argument checking
  added to object.__init__().
........
  r54546 | facundo.batista | 2007-03-23 11:54:07 -0700 (Fri, 23 Mar 2007) | 4 lines


  Added a 'create_connect()' function to socket.py, which creates a
  connection with an optional timeout, and modified httplib.py to
  use this function in HTTPConnection. Applies patch 1676823.
........
  r54547 | guido.van.rossum | 2007-03-23 12:39:01 -0700 (Fri, 23 Mar 2007) | 2 lines

  Add note about type.__init__().
........
  r54553 | thomas.heller | 2007-03-23 12:55:27 -0700 (Fri, 23 Mar 2007) | 5 lines

  Prevent creation (followed by a segfault) of array types when the size
  overflows the valid Py_ssize_t range.  Check return values of
  PyMem_Malloc.

  Will backport to release25-maint.
........
  r54555 | facundo.batista | 2007-03-23 13:23:08 -0700 (Fri, 23 Mar 2007) | 6 lines


  Surrounded with try/finally to socket's default timeout setting
  changes in the tests, so failing one test won't produce strange
  results in others. Also relaxed the timeout settings in the test
  (where actually the value didn't mean anything).
........
  r54556 | collin.winter | 2007-03-23 15:24:39 -0700 (Fri, 23 Mar 2007) | 1 line

  Make test_relpath() pass on Windows.
........
  r54559 | ziga.seilnacht | 2007-03-24 07:24:26 -0700 (Sat, 24 Mar 2007) | 6 lines

  Patch #1489771: update syntax rules in Python Reference Manual.
  Python 2.5 added support for explicit relative import statements and
  yield expressions, which were missing in the manual.
  Also fix grammar productions that used the names from the Grammar file,
  markup that broke the generated grammar.txt, and wrap some lines that
  broke the pdf output.  Will backport.
........
  r54565 | georg.brandl | 2007-03-24 15:20:34 -0700 (Sat, 24 Mar 2007) | 2 lines

  Remove typo accent.
........
  r54566 | georg.brandl | 2007-03-24 15:27:56 -0700 (Sat, 24 Mar 2007) | 2 lines

  Revert accidental change.
........
  r54567 | brett.cannon | 2007-03-24 18:32:36 -0700 (Sat, 24 Mar 2007) | 3 lines

  Change the docs to no longer claim that unittest is preferred over doctest for
  regression tests.
........
  r54568 | facundo.batista | 2007-03-24 18:53:21 -0700 (Sat, 24 Mar 2007) | 4 lines


  Redone the tests, using the infrastructure already present
  for threading and socket serving.
........
  r54570 | facundo.batista | 2007-03-24 20:20:05 -0700 (Sat, 24 Mar 2007) | 3 lines


  Closing the HTTP connection after each test, and listening more.
........
  r54572 | georg.brandl | 2007-03-25 11:44:35 -0700 (Sun, 25 Mar 2007) | 2 lines

  Markup fix.
........
  r54573 | georg.brandl | 2007-03-25 12:04:55 -0700 (Sun, 25 Mar 2007) | 2 lines

  Markup fix.
........
  r54580 | facundo.batista | 2007-03-26 13:18:31 -0700 (Mon, 26 Mar 2007) | 5 lines


  Added an optional timeout to FTP class. Also I started a test_ftplib.py
  file to test the ftp lib (right now I included a basic test, the timeout
  one, and nothing else).
........
  r54581 | georg.brandl | 2007-03-26 13:28:28 -0700 (Mon, 26 Mar 2007) | 2 lines

  Some nits.
........
  r54582 | facundo.batista | 2007-03-26 13:56:09 -0700 (Mon, 26 Mar 2007) | 4 lines


  Forgot to add the file before the previous commit, here go
  the ftplib tests.
........
  r54585 | facundo.batista | 2007-03-27 11:23:21 -0700 (Tue, 27 Mar 2007) | 5 lines


  Added an optional timeout to poplib.POP3. Also created a
  test_poplib.py file with a basic test and the timeout
  ones. Docs are also updated.
........
  r54586 | facundo.batista | 2007-03-27 11:50:29 -0700 (Tue, 27 Mar 2007) | 3 lines


  The basic test cases of poplib.py.
........
  r54594 | facundo.batista | 2007-03-27 20:45:20 -0700 (Tue, 27 Mar 2007) | 4 lines


  Bug 1688393. Adds a control of negative values in
  socket.recvfrom, which caused an ugly crash.
........
  r54599 | facundo.batista | 2007-03-28 11:25:54 -0700 (Wed, 28 Mar 2007) | 5 lines


  Added timeout to smtplib (to SMTP and SMTP_SSL). Also created
  the test_smtplib.py file, with a basic test and the timeout
  ones. Docs are updated too.
........
  r54603 | collin.winter | 2007-03-28 16:34:06 -0700 (Wed, 28 Mar 2007) | 3 lines

  Consolidate patches #1690164, 1683397, and 1690169, all of which refactor XML-related test suites. The patches are applied together because they use a common output/xmltests file.
  Thanks to Jerry Seutter for all three patches.
........
  r54604 | collin.winter | 2007-03-28 19:28:16 -0700 (Wed, 28 Mar 2007) | 1 line

  Make test_zipfile clean up its temporary files properly.
........
  r54605 | georg.brandl | 2007-03-29 00:41:32 -0700 (Thu, 29 Mar 2007) | 2 lines

  These are actually methods.
........
  r54606 | georg.brandl | 2007-03-29 05:42:07 -0700 (Thu, 29 Mar 2007) | 4 lines

  In Windows' time.clock(), when QueryPerformanceFrequency() fails,
  the C lib's clock() is used, but it must be divided by CLOCKS_PER_SEC
  as for the POSIX implementation (thanks to #pypy).
........
  r54608 | facundo.batista | 2007-03-29 11:22:35 -0700 (Thu, 29 Mar 2007) | 5 lines


  Added timout parameter to telnetlib.Telnet. Also created
  test_telnetlib.py with a basic test and timeout ones.
  Docs are also updated.
........
  r54613 | facundo.batista | 2007-03-30 06:00:35 -0700 (Fri, 30 Mar 2007) | 4 lines


  Added the posibility to pass the timeout to FTP.connect, not only when
  instantiating the class. Docs and tests are updated.
........
  r54614 | collin.winter | 2007-03-30 07:01:25 -0700 (Fri, 30 Mar 2007) | 1 line

  Bug #1688274: add documentation for C-level class objects.
........
  r54615 | marc-andre.lemburg | 2007-03-30 08:01:42 -0700 (Fri, 30 Mar 2007) | 4 lines

  Bump the patch level version of distutils since there were a few bug fixes since
  the 2.5.0 release.
........
  r54617 | georg.brandl | 2007-03-30 08:49:05 -0700 (Fri, 30 Mar 2007) | 2 lines

  Markup fix.
........
  r54618 | georg.brandl | 2007-03-30 10:39:39 -0700 (Fri, 30 Mar 2007) | 2 lines

  Label name fix.
........
  r54619 | georg.brandl | 2007-03-30 10:47:21 -0700 (Fri, 30 Mar 2007) | 2 lines

  Duplicate label fix.
........
  r54620 | georg.brandl | 2007-03-30 10:48:39 -0700 (Fri, 30 Mar 2007) | 2 lines

  Markup fix.
........
  r54623 | andrew.kuchling | 2007-03-30 11:00:15 -0700 (Fri, 30 Mar 2007) | 1 line

  Add item.  (Oops, accidentally checked this in on my branch)
........
  r54624 | georg.brandl | 2007-03-30 12:01:38 -0700 (Fri, 30 Mar 2007) | 2 lines

  Duplicate label fix.
........
  r54625 | georg.brandl | 2007-03-30 12:14:02 -0700 (Fri, 30 Mar 2007) | 2 lines

  Markup fix.
........
  r54629 | georg.brandl | 2007-03-31 03:17:31 -0700 (Sat, 31 Mar 2007) | 2 lines

  repair string literal.
........
  r54630 | georg.brandl | 2007-03-31 04:54:58 -0700 (Sat, 31 Mar 2007) | 2 lines

  Markup fix.
........
  r54631 | georg.brandl | 2007-03-31 04:58:36 -0700 (Sat, 31 Mar 2007) | 2 lines

  Duplicate label fix.
........
  r54632 | georg.brandl | 2007-03-31 04:59:54 -0700 (Sat, 31 Mar 2007) | 2 lines

  Typo fix.
........
  r54633 | neal.norwitz | 2007-03-31 11:54:18 -0700 (Sat, 31 Mar 2007) | 1 line

  Fix method names.  Will backport.
........
  r54634 | georg.brandl | 2007-03-31 11:56:11 -0700 (Sat, 31 Mar 2007) | 4 lines

  Bug #1655392: don't add -L/usr/lib/pythonX.Y/config to the LDFLAGS
  returned by python-config if Python was built with --enable-shared
  because that prevented the shared library from being used.
........
  r54637 | collin.winter | 2007-03-31 12:31:34 -0700 (Sat, 31 Mar 2007) | 1 line

  Shut up an occaisonal buildbot error due to test files being left around.
........
  r54644 | neal.norwitz | 2007-04-01 11:24:22 -0700 (Sun, 01 Apr 2007) | 11 lines

  SF #1685563, MSVCCompiler creates redundant and long PATH strings

  If MSVCCompiler.initialize() was called multiple times, the path
  would get duplicated.  On Windows, this is a problem because the
  path is limited to 4k.  There's no benefit in adding a path multiple
  times, so prevent that from occuring.  We also normalize the path
  before checking for duplicates so things like /a and /a/ won't both
  be stored.

  Will backport.
........
  r54646 | brett.cannon | 2007-04-01 11:47:27 -0700 (Sun, 01 Apr 2007) | 8 lines

  time.strptime's caching of its locale object was being recreated when the
  locale changed but not used during the function call it was recreated during.

  The test in this checkin is untested (OS X does not have the proper locale
  support for me to test), although the fix for the bug this deals with
  was tested by the OP (#1290505).  Once the buildbots verify the test at least
  doesn't fail it becomes a backport candidate.
........
  r54647 | brett.cannon | 2007-04-01 12:46:19 -0700 (Sun, 01 Apr 2007) | 3 lines

  Fix the test for recreating the locale cache object by not worrying about if
  one of the test locales cannot be set.
........
  r54649 | georg.brandl | 2007-04-01 14:29:15 -0700 (Sun, 01 Apr 2007) | 2 lines

  Fix a lot of markup and meta-information glitches.
........
  r54650 | georg.brandl | 2007-04-01 14:39:52 -0700 (Sun, 01 Apr 2007) | 2 lines

  Another fix.
........
  r54651 | georg.brandl | 2007-04-01 15:39:10 -0700 (Sun, 01 Apr 2007) | 2 lines

  Lots of explicit class names for method and member descs.
........
  r54652 | georg.brandl | 2007-04-01 15:40:12 -0700 (Sun, 01 Apr 2007) | 2 lines

  Explicit class names.
........
  r54653 | georg.brandl | 2007-04-01 15:47:31 -0700 (Sun, 01 Apr 2007) | 2 lines

  Some semantic fixes.
........
  r54654 | georg.brandl | 2007-04-01 16:29:10 -0700 (Sun, 01 Apr 2007) | 2 lines

  Remove bogus entry.
........
  r54655 | georg.brandl | 2007-04-01 16:31:30 -0700 (Sun, 01 Apr 2007) | 2 lines

  Fix the class name of strings.
........
  r54658 | raymond.hettinger | 2007-04-02 10:29:30 -0700 (Mon, 02 Apr 2007) | 1 line

  SF #1693079:  Cannot save empty array in shelve
........
  r54663 | raymond.hettinger | 2007-04-02 15:54:21 -0700 (Mon, 02 Apr 2007) | 3 lines

  Array module's buffer interface can now handle empty arrays.
........
  r54664 | guido.van.rossum | 2007-04-02 16:55:37 -0700 (Mon, 02 Apr 2007) | 5 lines

  Fix warnings about object.__init__() signature.
  Two (test_array and test_descr) were bug IMO; the third (copy_reg)
  is a work-around which recognizes that object.__init__() doesn't do
  anything.
........
  r54666 | raymond.hettinger | 2007-04-02 17:02:11 -0700 (Mon, 02 Apr 2007) | 1 line

  SF 1602378 Clarify docstrings for bisect
........
  r54668 | raymond.hettinger | 2007-04-02 18:39:43 -0700 (Mon, 02 Apr 2007) | 3 lines

  SF #1382213:  Tutorial section 9.5.1 ignores MRO for new-style classes
........
  r54669 | matthias.klose | 2007-04-02 21:35:59 -0700 (Mon, 02 Apr 2007) | 4 lines

  - Fix an off-by-one bug in locale.strxfrm().

    patch taken from http://bugs.debian.org/416934.
........
  r54671 | georg.brandl | 2007-04-03 00:04:27 -0700 (Tue, 03 Apr 2007) | 9 lines

  Fix the strange case of

  \begin{methoddesc}[NNTP]{...}

  where

  \ifx#1\@undefined ended up comparing N and N, therefore executing
  the true part of the conditional, blowing up at \@undefined.
........
  r54672 | facundo.batista | 2007-04-03 07:05:08 -0700 (Tue, 03 Apr 2007) | 4 lines


  Now using unittest for the tests infraestructure. Also split the
  tests in those who need the network, and that who doesn't.
........
  r54673 | walter.doerwald | 2007-04-03 09:08:10 -0700 (Tue, 03 Apr 2007) | 4 lines

  Move the functionality for catching warnings in test_warnings.py into a separate
  class to that reusing the functionality in test_structmembers.py doesn't rerun
  the tests from test_warnings.py.
........
  r54674 | walter.doerwald | 2007-04-03 09:16:24 -0700 (Tue, 03 Apr 2007) | 2 lines

  Document that CatchWarningTests is reused by test_structmembers.py.
........
  r54675 | walter.doerwald | 2007-04-03 09:53:43 -0700 (Tue, 03 Apr 2007) | 4 lines

  Add tests for the filename.

  Test that the stacklevel is handled correctly.
........
  r54676 | facundo.batista | 2007-04-03 10:29:48 -0700 (Tue, 03 Apr 2007) | 6 lines


  Added a SSL server to test_socket_ssl.py to be able to test
  locally. Now, it checks if have openssl available and run
  those specific tests (it starts openssl at the beggining of
  all the tests and then kills it at the end).
........
  r54677 | walter.doerwald | 2007-04-03 11:33:29 -0700 (Tue, 03 Apr 2007) | 6 lines

  Implement a contextmanager test.test_support.catch_warning that can
  be used to catch the last warning issued by the warning framework.

  Change test_warnings.py and test_structmembers.py to use this
  new contextmanager.
........
  r54678 | facundo.batista | 2007-04-03 14:15:34 -0700 (Tue, 03 Apr 2007) | 4 lines


  Changed the whole structure of startup and checking if the
  server is available. Hope to not get more false alarms.
........
  r54681 | facundo.batista | 2007-04-04 07:10:40 -0700 (Wed, 04 Apr 2007) | 4 lines


  Fixed the way that the .pem files are looked for, and changed
  how to kill the process in win32 to use the _handle attribute.
........
  r54682 | guido.van.rossum | 2007-04-04 10:43:02 -0700 (Wed, 04 Apr 2007) | 4 lines

  Fix a race condition in this test -- instead of assuming that it will take
  the test server thread at most 0.5 seconds to get ready, use an event
  variable.
........
  r54683 | collin.winter | 2007-04-04 11:14:17 -0700 (Wed, 04 Apr 2007) | 1 line

  Clean up imports.
........
  r54684 | collin.winter | 2007-04-04 11:16:24 -0700 (Wed, 04 Apr 2007) | 1 line

  Stop using test_support.verify().
........
  r54685 | martin.v.loewis | 2007-04-04 11:30:36 -0700 (Wed, 04 Apr 2007) | 2 lines

  Bug #1686475: Support stat'ing open files on Windows again.
  Will backport to 2.5.
........
  r54687 | collin.winter | 2007-04-04 11:33:40 -0700 (Wed, 04 Apr 2007) | 1 line

  Make test_getopt use unittest.
........
  r54688 | collin.winter | 2007-04-04 11:36:30 -0700 (Wed, 04 Apr 2007) | 1 line

  Make test_softspace use unittest.
........
  r54689 | ziga.seilnacht | 2007-04-04 11:38:47 -0700 (Wed, 04 Apr 2007) | 2 lines

  Fix WalkTests.test_traversal() on Windows.  The cleanup in
  MakedirTests.setUp() can now be removed.
........
  r54695 | raymond.hettinger | 2007-04-05 11:00:03 -0700 (Thu, 05 Apr 2007) | 3 lines

  Bug #1563759: struct.unpack doens't support buffer protocol objects
........
  r54697 | collin.winter | 2007-04-05 13:05:07 -0700 (Thu, 05 Apr 2007) | 1 line

  Convert test_long_future to use unittest.
........
  r54698 | collin.winter | 2007-04-05 13:08:56 -0700 (Thu, 05 Apr 2007) | 1 line

  Convert test_normalization to use unittest.
........
  r54699 | andrew.kuchling | 2007-04-05 18:11:58 -0700 (Thu, 05 Apr 2007) | 1 line

  Some grammar fixes
........
  r54704 | collin.winter | 2007-04-06 12:27:40 -0700 (Fri, 06 Apr 2007) | 1 line

  Convert test_stringprep to use unittest.
........
  r54705 | collin.winter | 2007-04-06 12:32:32 -0700 (Fri, 06 Apr 2007) | 1 line

  Import cleanup in test_crypt.
........
  r54706 | collin.winter | 2007-04-06 13:00:05 -0700 (Fri, 06 Apr 2007) | 1 line

  Convert test_gc to use unittest.
........
  r54707 | collin.winter | 2007-04-06 13:03:11 -0700 (Fri, 06 Apr 2007) | 1 line

  Convert test_module to use unittest.
........
  r54711 | collin.winter | 2007-04-06 21:40:43 -0700 (Fri, 06 Apr 2007) | 1 line

  Convert test_fileinput to use unittest.
........
  r54712 | brett.cannon | 2007-04-07 21:29:32 -0700 (Sat, 07 Apr 2007) | 5 lines

  Doc that file.next() has undefined behaviour when called on a file opened with
  'w'.  Closes bug #1569057.

  To be backported once 2.5 branch is unfrozen.
........
  r54726 | vinay.sajip | 2007-04-09 09:16:10 -0700 (Mon, 09 Apr 2007) | 1 line

  Added optional timeout to SocketHandler.makeSocket (SF #1695948)
........
  r54727 | ziga.seilnacht | 2007-04-09 12:10:29 -0700 (Mon, 09 Apr 2007) | 3 lines

  Patch #1695862: remove old test directory that causes test_urllib failures
  on Windows buildbots.  The change is a one time fix and will be removed
  after a successful buildbot run.
........
  r54729 | facundo.batista | 2007-04-09 20:00:37 -0700 (Mon, 09 Apr 2007) | 3 lines


  Minor fix to the tests pass ok even with -O.
........
  r54730 | collin.winter | 2007-04-09 21:44:49 -0700 (Mon, 09 Apr 2007) | 1 line

  Typo fix.
........
  r54732 | facundo.batista | 2007-04-10 05:58:45 -0700 (Tue, 10 Apr 2007) | 5 lines


  General clean-up. Lot of margin corrections, comments, some typos.
  Exceptions now are raised in the new style. And a mockup class is
  now also new style. Thanks Santiago Pereson.
........
  r54741 | georg.brandl | 2007-04-10 14:39:38 -0700 (Tue, 10 Apr 2007) | 2 lines

  Repair a duplicate label and some obsolete uses of \setindexsubitem.
........
  r54746 | andrew.kuchling | 2007-04-11 06:39:00 -0700 (Wed, 11 Apr 2007) | 1 line

  Add window.chgat() method, submitted via e-mail by Fabian Kreutz
........
  r54747 | andrew.kuchling | 2007-04-11 06:42:25 -0700 (Wed, 11 Apr 2007) | 1 line

  Point readers at the patch submission instructions
........
  r54748 | andrew.kuchling | 2007-04-11 06:47:13 -0700 (Wed, 11 Apr 2007) | 1 line

  Describe undocumented third argument to touchline()
........
  r54757 | georg.brandl | 2007-04-11 10:16:24 -0700 (Wed, 11 Apr 2007) | 3 lines

  Add some missing NULL checks which trigger crashes on low-memory conditions.
  Found by Victor Stinner. Will backport when 2.5 branch is unfrozen.
........
  r54760 | raymond.hettinger | 2007-04-11 11:40:58 -0700 (Wed, 11 Apr 2007) | 1 line

  SF 1191699:  Make slices picklable
........
  r54762 | georg.brandl | 2007-04-11 12:25:11 -0700 (Wed, 11 Apr 2007) | 2 lines

  Exceptions are no longer old-style instances. Fix accordingly.
........
  r54763 | georg.brandl | 2007-04-11 16:28:44 -0700 (Wed, 11 Apr 2007) | 2 lines

  Repair missing spaces after \UNIX.
........
  r54772 | raymond.hettinger | 2007-04-11 21:10:00 -0700 (Wed, 11 Apr 2007) | 1 line

  SF 1193128:  Let str.translate(None) be an identity transformation
........
  r54784 | georg.brandl | 2007-04-12 00:01:19 -0700 (Thu, 12 Apr 2007) | 2 lines

  Patch #1698951: clarify deprecation message in rexec and Bastion
........
  r54785 | ziga.seilnacht | 2007-04-12 01:46:51 -0700 (Thu, 12 Apr 2007) | 2 lines

  Patch #1695862: remove the cleanup code, now that Windows buildbots are green
  again.
........
  r54786 | walter.doerwald | 2007-04-12 03:35:00 -0700 (Thu, 12 Apr 2007) | 3 lines

  Fix utf-8-sig incremental decoder, which didn't recognise a BOM when the
  first chunk fed to the decoder started with a BOM, but was longer than 3 bytes.
........
  r54807 | barry.warsaw | 2007-04-13 11:47:14 -0700 (Fri, 13 Apr 2007) | 8 lines

  Port r54805 from python25-maint branch:

  Add code to read from master_fd in the parent, breaking when we get an OSError
  (EIO can occur on Linux) or there's no more data to read.  Without this,
  test_pty.py can hang on the waitpid() because the child is blocking on the
  stdout write.  This will definitely happen on Mac OS X and could potentially
  happen on other platforms.  See the comment for details.
........
  r54812 | kristjan.jonsson | 2007-04-13 15:07:33 -0700 (Fri, 13 Apr 2007) | 1 line

  Fix a bug when using the __lltrace__ opcode tracer, and a problem sith signed chars in frameobject.c which can occur with opcodes > 127
........
  r54814 | kristjan.jonsson | 2007-04-13 15:20:13 -0700 (Fri, 13 Apr 2007) | 1 line

  Fix potential crash in path manipulation on windows
........
  r54816 | trent.mick | 2007-04-13 16:22:05 -0700 (Fri, 13 Apr 2007) | 4 lines

  Add the necessary dependency for the Windows VC6 build to ensure 'pythoncore'
  is built before '_ctypes' is attempted.
  Will backport to 2.5 once it is unfrozen for 2.5.1.
........
  r54825 | neal.norwitz | 2007-04-13 22:25:50 -0700 (Fri, 13 Apr 2007) | 3 lines

  When __slots__ are set to a unicode string, make it work the same as
  setting a plain string, ie don't expand to single letter identifiers.
........
  r54841 | neal.norwitz | 2007-04-16 00:37:55 -0700 (Mon, 16 Apr 2007) | 1 line

  SF #1701207, Fix bogus assertion (and test it!)
........
  r54844 | collin.winter | 2007-04-16 15:10:32 -0700 (Mon, 16 Apr 2007) | 1 line

  Check the availability of the urlfetch resource earlier than before.
........
  r54849 | martin.v.loewis | 2007-04-16 22:02:01 -0700 (Mon, 16 Apr 2007) | 2 lines

  Add Travis Oliphant.
........
  r54873 | brett.cannon | 2007-04-18 20:44:17 -0700 (Wed, 18 Apr 2007) | 2 lines

  Silence a compiler warning about incompatible pointer types.
........
  r54874 | neal.norwitz | 2007-04-18 22:52:37 -0700 (Wed, 18 Apr 2007) | 2 lines

  SF #1703270, add missing declaration in readline.c to avoid compiler warning.
........
  r54875 | armin.rigo | 2007-04-19 07:44:48 -0700 (Thu, 19 Apr 2007) | 8 lines

  Revert r53997 as per
  http://mail.python.org/pipermail/python-dev/2007-March/071796.html .

  I've kept a couple of still-valid extra tests in test_descr, but didn't
  bother to sort through the new comments and refactorings added in r53997
  to see if some of them could be kept.  If so, they could go in a
  follow-up check-in.
........
  r54876 | armin.rigo | 2007-04-19 07:56:48 -0700 (Thu, 19 Apr 2007) | 2 lines

  Fix a usage of the dangerous pattern decref - modify field - incref.
........
  r54884 | neal.norwitz | 2007-04-19 22:20:38 -0700 (Thu, 19 Apr 2007) | 9 lines

  Add an optional address to copy the failure mails to.

  Detect a conflict in the only file that should have outstanding changes
  when this script is run.  This doesn't matter on the trunk, but does
  when run on a branch.  Trunk always has the date set to today in
  boilerplate.tex.  Each time a release is cut with a different date,
  a conflict occurs.  (We could copy a known good version, but then
  we would lose changes to this file.)
........
  r54918 | georg.brandl | 2007-04-21 13:35:38 -0700 (Sat, 21 Apr 2007) | 3 lines

  Bug #1704790: bind name "sys" locally in __del__ method so that it is
  not cleared before __del__ is run.
........
  r54920 | facundo.batista | 2007-04-21 18:18:56 -0700 (Sat, 21 Apr 2007) | 5 lines


  Added tests for other methods of SSL object. Now we cover
  all the object methods. This is the final step to close
  the #451607 bug.
........
  r54927 | facundo.batista | 2007-04-23 10:08:31 -0700 (Mon, 23 Apr 2007) | 5 lines


  As specified in RFC 2616, 2xx code indicates that the client's
  request was successfully received, understood, and accepted.
  Now in these cases no error is raised. Also fixed tests.
........
  r54929 | collin.winter | 2007-04-23 20:43:46 -0700 (Mon, 23 Apr 2007) | 1 line

  Convert PyUnit -> unittest.
........
  r54931 | collin.winter | 2007-04-23 21:09:52 -0700 (Mon, 23 Apr 2007) | 1 line

  Remove code that hasn't been called in years.
........
  r54932 | neal.norwitz | 2007-04-23 21:53:12 -0700 (Mon, 23 Apr 2007) | 1 line

  Fix SF #1703110, Incorrect example for add_password() (use uri, not host)
........
  r54934 | georg.brandl | 2007-04-24 03:36:42 -0700 (Tue, 24 Apr 2007) | 2 lines

  Some new year updates.
........
  r54938 | facundo.batista | 2007-04-24 06:54:38 -0700 (Tue, 24 Apr 2007) | 4 lines


  Added a comment about last change in urllib2.py (all 2xx responses
  are ok now).
........
  r54939 | georg.brandl | 2007-04-24 08:10:09 -0700 (Tue, 24 Apr 2007) | 2 lines

  Bug #1705717: error in sys.argv docs.
........
  r54941 | georg.brandl | 2007-04-24 08:27:13 -0700 (Tue, 24 Apr 2007) | 4 lines

  Bug #1706381: Specifying the SWIG option "-c++" in the setup.py file
  (as opposed to the command line) will now write file names ending in
  ".cpp" too.
........
  r54944 | raymond.hettinger | 2007-04-24 15:13:43 -0700 (Tue, 24 Apr 2007) | 1 line

  Fix markup
........
  r54945 | kristjan.jonsson | 2007-04-24 17:10:50 -0700 (Tue, 24 Apr 2007) | 1 line

  Merge change 54909 from release25-maint:  Fix several minor issues discovered using code analysis in VisualStudio 2005 Team Edition
........
  r54947 | kristjan.jonsson | 2007-04-24 17:17:39 -0700 (Tue, 24 Apr 2007) | 1 line

  Make pythoncore compile cleanly with VisualStudio 2005.  Used an explicit typecast to get a 64 bit integer, and undefined the Yield macro that conflicts with winbase.h
........
  r54948 | kristjan.jonsson | 2007-04-24 17:19:26 -0700 (Tue, 24 Apr 2007) | 1 line

  Remove obsolete comment. Importing of .dll files has been discontinued, only .pyd files supported on windows now.
........
  r54949 | georg.brandl | 2007-04-24 23:24:59 -0700 (Tue, 24 Apr 2007) | 2 lines

  Patch #1698768: updated the "using Python on the Mac" intro.
........
  r54951 | georg.brandl | 2007-04-24 23:25:55 -0700 (Tue, 24 Apr 2007) | 2 lines

  Markup fix.
........
  r54953 | neal.norwitz | 2007-04-24 23:30:05 -0700 (Tue, 24 Apr 2007) | 3 lines

  Whitespace normalization.  Ugh, we really need to do this more often.
  You might want to review this change as it's my first time.  Be gentle. :-)
........
  r54956 | collin.winter | 2007-04-25 10:29:52 -0700 (Wed, 25 Apr 2007) | 1 line

  Standardize on test.test_support.run_unittest() (as opposed to a mix of run_unittest() and run_suite()). Also, add functionality to run_unittest() that admits usage of unittest.TestLoader.loadTestsFromModule().
........
  r54957 | collin.winter | 2007-04-25 10:37:35 -0700 (Wed, 25 Apr 2007) | 1 line

  Remove functionality from test_datetime.test_main() that does reference count checking; 'regrtest.py -R' is the way to do this kind of testing.
........
  r54958 | collin.winter | 2007-04-25 10:57:53 -0700 (Wed, 25 Apr 2007) | 1 line

  Change test_support.have_unicode to use True/False instead of 1/0.
........
  r54959 | tim.peters | 2007-04-25 11:47:18 -0700 (Wed, 25 Apr 2007) | 2 lines

  Whitespace normalization.
........
  r54960 | tim.peters | 2007-04-25 11:48:35 -0700 (Wed, 25 Apr 2007) | 2 lines

  Set missing svn:eol-style property on text files.
........
  r54961 | collin.winter | 2007-04-25 11:54:36 -0700 (Wed, 25 Apr 2007) | 1 line

  Import and raise statement cleanup.
........
  r54969 | collin.winter | 2007-04-25 13:41:34 -0700 (Wed, 25 Apr 2007) | 1 line

  Convert test_ossaudiodev to use unittest.
........
  r54974 | collin.winter | 2007-04-25 14:50:25 -0700 (Wed, 25 Apr 2007) | 1 line

  Fix an issue related to the unittest conversion.
........
  r54979 | fred.drake | 2007-04-25 21:42:19 -0700 (Wed, 25 Apr 2007) | 1 line

  fix some markup errors
........
  r54982 | kristjan.jonsson | 2007-04-26 02:15:08 -0700 (Thu, 26 Apr 2007) | 1 line

  Export function sanitize_the_mode from fileobject.c as _PyFile_SanitizeMode().  Use this function in posixmodule.c when implementing fdopen().  This fixes test_subprocess.py for a VisualStudio 2005 compile.
........
  r54983 | kristjan.jonsson | 2007-04-26 06:44:16 -0700 (Thu, 26 Apr 2007) | 1 line

  The locale "En" appears not to be valid on windows underi VisualStudio.2005.  Added "English" to the test_locale.py to make the testsuite pass for that build
........
  r54984 | steve.holden | 2007-04-26 07:23:12 -0700 (Thu, 26 Apr 2007) | 1 line

  Minor wording change on slicing aide-memoire.
........
  r54985 | kristjan.jonsson | 2007-04-26 08:24:54 -0700 (Thu, 26 Apr 2007) | 1 line

  Accomodate 64 bit time_t in the _bsddb module.
........Merged revisions 53451-53537 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r53454 | brett.cannon | 2007-01-15 20:12:08 +0100 (Mon, 15 Jan 2007) | 3 lines

  Add a note for strptime that just because strftime supports some extra
  directive that is not documented that strptime will as well.
........
  r53458 | vinay.sajip | 2007-01-16 10:50:07 +0100 (Tue, 16 Jan 2007) | 1 line

  Updated rotating file handlers to use _open().
........
  r53459 | marc-andre.lemburg | 2007-01-16 14:03:06 +0100 (Tue, 16 Jan 2007) | 2 lines

  Add news items for the recent pybench and platform changes.
........
  r53460 | sjoerd.mullender | 2007-01-16 17:42:38 +0100 (Tue, 16 Jan 2007) | 4 lines

  Fixed ntpath.expandvars to not replace references to non-existing
  variables with nothing.  Also added tests.
  This fixes bug #494589.
........
  r53464 | neal.norwitz | 2007-01-17 07:23:51 +0100 (Wed, 17 Jan 2007) | 1 line

  Give Calvin Spealman access for python-dev summaries.
........
  r53465 | neal.norwitz | 2007-01-17 09:37:26 +0100 (Wed, 17 Jan 2007) | 1 line

  Remove Calvin since he only has access to the website currently.
........
  r53466 | thomas.heller | 2007-01-17 10:40:34 +0100 (Wed, 17 Jan 2007) | 2 lines

  Replace C++ comments with C comments.
........
  r53472 | andrew.kuchling | 2007-01-17 20:55:06 +0100 (Wed, 17 Jan 2007) | 1 line

  [Part of bug #1599254] Add suggestion to Mailbox docs to use Maildir, and warn user to lock/unlock mailboxes when modifying them
........
  r53475 | georg.brandl | 2007-01-17 22:09:04 +0100 (Wed, 17 Jan 2007) | 2 lines

  Bug #1637967: missing //= operator in list.
........
  r53477 | georg.brandl | 2007-01-17 22:19:58 +0100 (Wed, 17 Jan 2007) | 2 lines

  Bug #1629125: fix wrong data type (int -> Py_ssize_t) in PyDict_Next docs.
........
  r53481 | neal.norwitz | 2007-01-18 06:40:58 +0100 (Thu, 18 Jan 2007) | 1 line

  Try reverting part of r53145 that seems to cause the Windows buildbots to fail in test_uu.UUFileTest.test_encode
........
  r53482 | fred.drake | 2007-01-18 06:42:30 +0100 (Thu, 18 Jan 2007) | 1 line

  add missing version entry
........
  r53483 | neal.norwitz | 2007-01-18 07:20:55 +0100 (Thu, 18 Jan 2007) | 7 lines

  This test doesn't pass on Windows.  The cause seems to be that chmod
  doesn't support the same funcationality as on Unix.  I'm not sure if
  this fix is the best (or if it will even work)--it's a test to see
  if the buildbots start passing again.

  It might be better to not even run this test if it's windows (or non-posix).
........
  r53488 | neal.norwitz | 2007-01-19 06:53:33 +0100 (Fri, 19 Jan 2007) | 1 line

  SF #1635217, Fix unbalanced paren
........
  r53489 | martin.v.loewis | 2007-01-19 07:42:22 +0100 (Fri, 19 Jan 2007) | 3 lines

  Prefix AST symbols with _Py_. Fixes #1637022.
  Will backport.
........
  r53497 | martin.v.loewis | 2007-01-19 19:01:38 +0100 (Fri, 19 Jan 2007) | 2 lines

  Add UUIDs for 2.5.1 and 2.5.2
........
  r53499 | raymond.hettinger | 2007-01-19 19:07:18 +0100 (Fri, 19 Jan 2007) | 1 line

  SF# 1635892:  Fix docs for betavariate's input parameters .
........
  r53503 | martin.v.loewis | 2007-01-20 15:05:39 +0100 (Sat, 20 Jan 2007) | 2 lines

  Merge 53501 and 53502 from 25 branch:
  Add /GS- for AMD64 and Itanium builds where missing.
........
  r53504 | walter.doerwald | 2007-01-20 18:28:31 +0100 (Sat, 20 Jan 2007) | 2 lines

  Port test_resource.py to unittest.
........
  r53505 | walter.doerwald | 2007-01-20 19:19:33 +0100 (Sat, 20 Jan 2007) | 2 lines

  Add argument tests an calls of resource.getrusage().
........
  r53506 | walter.doerwald | 2007-01-20 20:03:17 +0100 (Sat, 20 Jan 2007) | 2 lines

  resource.RUSAGE_BOTH might not exist.
........
  r53507 | walter.doerwald | 2007-01-21 00:07:28 +0100 (Sun, 21 Jan 2007) | 2 lines

  Port test_new.py to unittest.
........
  r53508 | martin.v.loewis | 2007-01-21 10:33:07 +0100 (Sun, 21 Jan 2007) | 2 lines

  Patch #1610575: Add support for _Bool to struct.
........
  r53509 | georg.brandl | 2007-01-21 11:28:43 +0100 (Sun, 21 Jan 2007) | 3 lines

  Bug #1486663: don't reject keyword arguments for subclasses of builtin
  types.
........
  r53511 | georg.brandl | 2007-01-21 11:35:10 +0100 (Sun, 21 Jan 2007) | 2 lines

  Patch #1627441: close sockets properly in urllib2.
........
  r53517 | georg.brandl | 2007-01-22 20:40:21 +0100 (Mon, 22 Jan 2007) | 3 lines

  Use new email module names (#1637162, #1637159, #1637157).
........
  r53518 | andrew.kuchling | 2007-01-22 21:26:40 +0100 (Mon, 22 Jan 2007) | 1 line

  Improve pattern used for mbox 'From' lines; add a simple test
........
  r53519 | andrew.kuchling | 2007-01-22 21:27:50 +0100 (Mon, 22 Jan 2007) | 1 line

  Make comment match the code
........
  r53522 | georg.brandl | 2007-01-22 22:10:33 +0100 (Mon, 22 Jan 2007) | 2 lines

  Bug #1249573: fix rfc822.parsedate not accepting a certain date format
........
  r53524 | georg.brandl | 2007-01-22 22:23:41 +0100 (Mon, 22 Jan 2007) | 2 lines

  Bug #1627316: handle error in condition/ignore pdb commands more gracefully.
........
  r53526 | lars.gustaebel | 2007-01-23 12:17:33 +0100 (Tue, 23 Jan 2007) | 4 lines

  Patch #1507247: tarfile.py: use current umask for intermediate
  directories.
........
  r53527 | thomas.wouters | 2007-01-23 14:42:00 +0100 (Tue, 23 Jan 2007) | 13 lines


  SF patch #1630975: Fix crash when replacing sys.stdout in sitecustomize

  When running the interpreter in an environment that would cause it to set
  stdout/stderr/stdin's encoding, having a sitecustomize that would replace
  them with something other than PyFile objects would crash the interpreter.
  Fix it by simply ignoring the encoding-setting for non-files.

  This could do with a test, but I can think of no maintainable and portable
  way to test this bug, short of adding a sitecustomize.py to the buildsystem
  and have it always run with it (hmmm....)
........
  r53528 | thomas.wouters | 2007-01-23 14:50:49 +0100 (Tue, 23 Jan 2007) | 4 lines


  Add news entry about last checkin (oops.)
........
  r53531 | martin.v.loewis | 2007-01-23 22:11:47 +0100 (Tue, 23 Jan 2007) | 4 lines

  Make PyTraceBack_Here use the current thread, not the
  frame's thread state. Fixes #1579370.
  Will backport.
........
  r53535 | brett.cannon | 2007-01-24 00:21:22 +0100 (Wed, 24 Jan 2007) | 5 lines

  Fix crasher for when an object's __del__ creates a new weakref to itself.
  Patch only fixes new-style classes; classic classes still buggy.

  Closes bug #1377858.  Already backported.
........
  r53536 | walter.doerwald | 2007-01-24 01:42:19 +0100 (Wed, 24 Jan 2007) | 2 lines

  Port test_popen.py to unittest.
........SF 563203. Replaced 'has_key()' with 'in'.Use string.ascii_letters instead of string.letters (SF bug #226706).Avoid import of string module; it is only needed for expandvars().

Never assume that os.sep is for the module-specific platform; use the
right separator character directly.
Fix some minor style consistency nits.New splitdrive() that knows about UNC paths (e.g., network paths like
\\host\mountpoint\dir\file).  By Larry Hastings.

Also cleaned up some docstrings.Added doc strings and reindented according to new standard, without tabs.Added ntpath.py (for os.py when used with Windows NT)aifc, sunau: make rate an int; os: restruct; ospath: obsolete; rfc822:
date and addr parsing; string: force result of atof to float and
support atoi, atol, atof in strop; tzparcs: don't call test().BUG: exponential moving window covariance fails for multiIndexed DataFrame (#34943)

* added test for df.ewm.cov with multiindex

* BUG: fixed _flex_binary_moment for multiindex

* added reference to GH issue

* DOC: updated whatnew

* DOC: moved note to rolling section of whatsnew

* changed df to fixed seed, linearly spaced ints

* removed extraneous comment

* TST: hardcoded expected df for test_multiindex_cov

* TST: cleaned up comment + blank line

* TST: clean up index definitionSTY: concat strings (#30979)
CLN: Simplify rolling.py helper functions (#30672)
REF: pandas/core/window.py into multiple files (#27736)
bpo-31648: Improve ElementPath (#3835)

* Allow whitespace inside of ElementPath predicates.
* Add ElementPath predicate support for text comparison of the current node, like "[.='text']".#27364: fix "incorrect" uses of escape character in the stdlib.

And most of the tools.

Patch by Emanual Barry, reviewed by me, Serhiy Storchaka, and
Martin Panter.PEP 479:  Don't let StopIteration bubble out of calls to next() inside a generator.Issue #12323: Strengthen error checking of the position XPath selectorsMerged revisions 78838-78839,78917,78919,78934,78937 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r78838 | florent.xicluna | 2010-03-11 15:36:19 +0100 (jeu, 11 mar 2010) | 2 lines

  Issue #6472: The xml.etree package is updated to ElementTree 1.3.  The cElementTree module is updated too.
........
  r78839 | florent.xicluna | 2010-03-11 16:55:11 +0100 (jeu, 11 mar 2010) | 2 lines

  Fix repr of tree Element on windows.
........
  r78917 | florent.xicluna | 2010-03-13 12:18:49 +0100 (sam, 13 mar 2010) | 2 lines

  Move the xml test data to their own directory.
........
  r78919 | florent.xicluna | 2010-03-13 13:41:48 +0100 (sam, 13 mar 2010) | 2 lines

  Do not chdir when running test_xml_etree, and enhance the findfile helper.
........
  r78934 | florent.xicluna | 2010-03-13 18:56:19 +0100 (sam, 13 mar 2010) | 2 lines

  Update some parts of the xml.etree documentation.
........
  r78937 | florent.xicluna | 2010-03-13 21:30:15 +0100 (sam, 13 mar 2010) | 3 lines

  Add the keyword argument "method=None" to the .write() method and the tostring/tostringlist functions.
  Update the function, class and method signatures, according to the new convention.
........Consolidate boolean/mk_boolean conversion functions into a single location

Consolidate the module_utils, constants, and config functions that
convert values into booleans into a single function in module_utils.

Port code to use the module_utils.validate.convert_bool.boolean function
isntead of mk_boolean.Collated PEP8 fixes (#25293)

- Make PEP8 compliantReplaced iterkeys with 'for key in dict' for #18507 (#18538)
Migrate basestring to a python3 compatible type (#17199)
listify lookup plugin terms when they're specified as "{{ lookup(terms) }}"

Before this, they were not listified there but they were listified when
specified like this:

with_lookup: termsUse templar all the way down

Fixes bugs related to creating Templar() objects on the fly, where
the shared loader objects (serialized to TaskExecutor) aren't used
so information loaded into plugin loaders after forking is lost.

Fixes #11815Merge pull request #11628 from srvg/bug/11624

fix AnsibleError object name in subelements pluginMerge branch 'v2_final' into devel_switch_v2

Conflicts:
	lib/ansible/inventory/__init__.py
	lib/ansible/modules/core
	lib/ansible/utils/__init__.py
	lib/ansible/utils/module_docs.py[channel9] reduce response size and update tests[channel9] Extract more formats[channel9] fix extraction(closes #11323)[channel9] Add support for rss links (Closes #9673)Merge pull request #4110 from nemunaire/channel9-fix

[channel9] Fix extractionMerge remote-tracking branch 'dstftw/channel9'Merge remote-tracking branch 'dstftw/channel9'

Conflicts:
	youtube_dl/extractor/__init__.pyUsed model's Options.label/label_lower where applicable.
Fixed #30255 -- Fixed admindocs errors when rendering docstrings without leading newlines.

Used inspect.cleandoc() which implements PEP-257 instead of an internal
hook.Refs #28909 -- Simplifed code using unpacking generalizations.
Renamed django.utils.inspect.func_has_no_args() to method_has_no_args().Fixed #29385 -- Made admindocs ModelDetailView show model properties.

Original patch by bkaluza. Tests and docs by humbertotm.Fixed #28982 -- Simplified code with and/or.Refs #23919 -- Replaced super(ClassName, self) with super().Removed unused variables that are overwritten.
Fixed #24917 -- Made admindocs display model methods that take arguments.Fixed #24979 -- Removed usage of inspect.getargspec().Fixed #24624 -- Replaced obsoleted rel.opts in admindocs view

Thanks Scott Sanders for the report, and Markus Holtermann and
Tim Graham for the reviews. Refs #24381.Fixed #12663 -- Formalized the Model._meta API for retrieving fields.

Thanks to Russell Keith-Magee for mentoring this Google Summer of
Code 2014 project and everyone else who helped with the patch!Fixed #5405 -- Added admindocs support for reStructured text in model docstrings

Thanks elvard and gkmngrgn for work on the patch and Markus H. for review.Updated admindocs to use class-based views

Thanks Bouke Haarsma for the review.Implement `GroupHash` unmerging. (#5357)

This allows disassociating a `GroupHash` record from a group. This causes a new group to be created, and denormalized statistics (time series and tag data, among others) are backfilled for both the source and destination groups.

This implementation does have a few caveats:

- if sampling is enabled, statistics will be incorrect (by a factor of the sampling ratio, so assuming a uniform distribution, the proportions of the statistics should still be representative of the inputs),
- this cannot handle checksums provided as part of the data payload, since they are deleted from the payload on ingest,
- this assumes no modifications to the fingerprinting algorithm, since calculated fingerprint values are never associated with the event when using default fingerprints.Merge pull request #4811 from getsentry/feature/commit-fixes-ref

[releases] Capture "Fixes SHORTID" annotations in commitsMerge pull request #3853 from getsentry/python3

Various Python 3 supportMerge pull request #2972 from getsentry/simple-serializer

Remove zip usage in serializersAdd project information to organization activity[ivi] Skip s353 for bundled exe

See https://github.com/Legrandin/pycryptodome/issues/228[ivi] Fix python 3.4 support[ivi] Ask for pycryptodomex instead of pycryptodome

See discussion at https://github.com/ytdl-org/youtube-dl/commit/1bba88efc7e1f82095f7ae38348e56026db4bf3c#r35982110[ivi] fallback to old extraction method for unknown error codes[ivi] improve error detection[ivi] sign content request only when pycryptodome is available[ivi] fix format extraction(closes #21991)[ivi] Raise GeoRestrictedError[ivi] Fix episode number extraction[ivi] Add support for 720p and 1080p[ivi] Extract season info[ivi] Fix extraction and modernize[ivi] ModernizeMerge remote-tracking branch 'dstftw/ivi'[ivi] Use centralized format sortingMerge pull request #2005 from dstftw/ivi.ru

Add support for ivi.rumove resolver to venv, remove host markers from lockfile

Signed-off-by: Kenneth Reitz <me@kennethreitz.org>[noco] Fix bitrates[noco] Modernize[noco] Adjust timestamp according to server time (Closes #7864)Merge pull request #6067 from mitsukarenai/master

[noco.tv] Fix issue #6066: title interpreted as integer[noco] Skip invalid timestamps (closes #5826)Merge branch 'Tassatux-noco'[noco] Add support for multi language videos (Closes #4326)[noco] Adapt to API v1.1 (Closes #3797)[noco] Switch to HTTPS (Closes #3116)[noco] Add support for noco.tv (Closes #2712)bpo-30109: Fix reindent.py (GH-1207)

Skip the file if it has bad encoding.Issue #10639: reindent.py tool now accepts a --newline option to specify the newline to be used in the output of converted files.Merge with 3.2 Issue #10639: reindent.py should not convert newlines.
reindent.py now will use the newline detected in the original file and will report an error if mixed newlines are encountered.Issue #10117: Tools/scripts/reindent.py now accepts source files that
use encoding other than ASCII or UTF-8.  Source encoding is preserved
when reindented code is written to a file.Clean up syntax for some scripts.Merged revisions 61520,61523-61528,61532 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r61520 | thomas.heller | 2008-03-18 16:03:17 +0100 (Di, 18 Mär 2008) | 5 lines

  Include <alloca.h> on Solaris, see issue #1506.

  It would probably be better to have a configure test for that, but
  this is outside of my configure expertise.
........
  r61523 | brett.cannon | 2008-03-18 16:35:58 +0100 (Di, 18 Mär 2008) | 5 lines

  Remove all traces of HAVE_STRERROR.

  The removal of strerror.c led to the function check being removed from
  configure.in.
........
  r61524 | brett.cannon | 2008-03-18 16:52:00 +0100 (Di, 18 Mär 2008) | 2 lines

  Fix test_errno to only check for error numbers that are defined by Standard C.
........
  r61525 | steven.bethard | 2008-03-18 17:00:19 +0100 (Di, 18 Mär 2008) | 1 line

  Use test_support.unlink instead of os.unlink in tearDown().  (Seems to fix an occasional failure in Windows Vista.)
........
  r61526 | brett.cannon | 2008-03-18 17:47:51 +0100 (Di, 18 Mär 2008) | 3 lines

  Cast the arguments to PyString_AsStringAndSize() to silence compiler warnings
  on OS X.
........
  r61527 | sean.reifschneider | 2008-03-18 18:24:12 +0100 (Di, 18 Mär 2008) | 3 lines

  Issue 1577: shutil.move() where destination is a directory was doing a
  copy, now it is doing a os.rename() if it's on the same file-system.
........
  r61528 | brett.cannon | 2008-03-18 18:25:13 +0100 (Di, 18 Mär 2008) | 12 lines

  Add Tools/scripts/patchcheck.py. Invoked from ``make check``, the script does
  some verification:

  - Runs reindent.py on all .py files.
  - Checks if any changes in Doc exist.
  - Whether Misc/ACKS was changed.
  - Whether Misc/NEWS was changed.

  The hope is that ``make check`` can become a command anybody can run to get
  reminders about what all the requisite steps needed to create a proper
  patch/checkin.
........
  r61532 | neal.norwitz | 2008-03-18 18:58:02 +0100 (Di, 18 Mär 2008) | 1 line

  Get regrtest working when re-running tests
........Merged revisions 60481,60485,60489-60492,60494-60496,60498-60499,60501-60503,60505-60506,60508-60509,60523-60524,60532,60543,60545,60547-60548,60552,60554,60556-60559,60561-60562,60569,60571-60572,60574,60576-60583,60585-60586,60589,60591,60594-60595,60597-60598,60600-60601,60606-60612,60615,60617,60619-60621,60623-60625,60627-60629,60631,60633,60635,60647,60650,60652,60654,60656,60658-60659,60664-60666,60668-60670,60672,60676,60678,60680-60683,60685-60686,60688,60690,60692-60694,60697-60700,60705-60706,60708,60711,60714,60720,60724-60730,60732,60736,60742,60744,60746,60748,60750-60751,60753,60756-60757,60759-60761,60763-60764,60766,60769-60770,60774-60784,60787-60789,60793,60796,60799-60809,60812-60813,60815-60821,60823-60826,60828-60829,60831-60834,60836,60838-60839,60846-60849,60852-60854,60856-60859,60861-60870,60874-60878,60880-60892,60894-60898 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r60876 | georg.brandl | 2008-02-17 16:14:10 +0100 (Sun, 17 Feb 2008) | 2 lines

  Fix function name.
........
  r60877 | facundo.batista | 2008-02-17 17:21:13 +0100 (Sun, 17 Feb 2008) | 4 lines


  Now we handle different the backup copy, because of security
  issues regarding user/group and permissions. Fixes 1050828.
........
  r60878 | facundo.batista | 2008-02-17 19:59:29 +0100 (Sun, 17 Feb 2008) | 4 lines


  Issue 2112. mmap does not raises EnvironmentError no more, but
  a subclass of it. Thanks John Lenton.
........
  r60882 | amaury.forgeotdarc | 2008-02-17 21:56:31 +0100 (Sun, 17 Feb 2008) | 5 lines

  Compilation was broken on Windows since the introduction of Advanced String Formatting.

  Only PCBuild (vs9) was really tested.
  Changes for older compilers were done manually.
........
  r60883 | georg.brandl | 2008-02-17 22:18:55 +0100 (Sun, 17 Feb 2008) | 2 lines

  #2133: fix HTML color spec.
........
  r60884 | facundo.batista | 2008-02-18 04:43:43 +0100 (Mon, 18 Feb 2008) | 5 lines


  Issue #1916. Added isgenerator() and isgeneratorfunction() to
  inspect.py.  Thanks Javi Mansilla for patch review and
  corrections.
........
  r60885 | facundo.batista | 2008-02-18 13:48:43 +0100 (Mon, 18 Feb 2008) | 4 lines


  Issue 1224. Now we support again the double slash in the URL.
  Thanks Anthony Lenton.
........
  r60887 | eric.smith | 2008-02-18 15:25:02 +0100 (Mon, 18 Feb 2008) | 1 line

  Temporarily removed float tests.  See issue 1600.
........
  r60891 | kristjan.jonsson | 2008-02-18 18:40:47 +0100 (Mon, 18 Feb 2008) | 1 line

  Perform correct handling of stack overflow for windows: Catch the correct exception code and reset the overflow condition when handled.
........Fix print syntax so this runs using 3.0.SF patch 1631942 by Collin Winter:
(a) "except E, V" -> "except E as V"
(b) V is now limited to a simple name (local variable)
(c) V is now deleted at the end of the except blockNew tool for normalizing indentation of .py files.Always close files in distutils code and tests (#10252).reverted distutils its 3.1 state. All new work is now happening in disutils2, and distutils is now feature-frozen.Merged revisions 77704,77752 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r77704 | tarek.ziade | 2010-01-23 10:23:15 +0100 (Sat, 23 Jan 2010) | 1 line

  taking sysconfig out of distutils
........
  r77752 | tarek.ziade | 2010-01-26 00:19:56 +0100 (Tue, 26 Jan 2010) | 1 line

  switched the call order so this call works without suffering from issue #7774
........Merged revisions 73166 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r73166 | tarek.ziade | 2009-06-03 12:26:26 +0200 (Wed, 03 Jun 2009) | 1 line

  added some tests for distutils.extension + code cleanup
........[Part of patch #641685] Add .dylib as an extension for shared libraries[Patch #536769] Add -Xcompiler flag for adding arguments and switches for
    the compilerSuggested by Pete Shinners: treat .m and .mm files as source code.

Question for Jack Jansen: is this reasonable?

Candidate for 2.2 release branch (if Jack thinks it's OK).Back out conversion to string methods; the Distutils is intended to work
   with 1.5.2String method conversion.Added 'read_setup_file()' to read old-style Setup files.  Could make life
  easier for people porting Makefile.pre.in-based extensions to Distutils.
Also loosened argument-checking in Extension constructor to make life
  easier for 'read_setup_file()'.fix(API): Remove deprecated parameter from org index endpoint docstring (#13239)
ref(roles): Change "owner" to "org owner" (#13077)

Per SEN-598, rename "owner" role to "org owner." Also clarify places where "owner" actually means "issue owner," and do other language clean-up.Add member_id query (#10159)
fix(api): Dont return duplicates when searchingfeat: Change organization and project lists to default to member-onlyfeat(api): List user's organizations where they are owner (#7136)

Will be required for React UI to close an account
feat(api): Allow organizations to be restored via the API

This exposes 'cancelDeletion' on the PUT /organizations/:id/ endpoint and moves the restore organization server-rendered view to use the endpoint.

Additionally it:

- changes OrganizationStatus to use IntEnum
- adds OrganizationStatus.ACTIVE to supercede VISIBLE
- allows restoration even after a deletion has begun (accept the consequences).
- exposes 'status' in the organization details API
- allows fetching data for organizations which are in deletion phasesfix: Change superuser usage to be utility functions

Change nearly all calls to use is_active_superuser over implied request.is_superuser state.

This also corrects an issue where our 500 template attempts to render react context, which attempts to serialize the user, which then attempts to check superuser status.[api] expand project and organization search endpoints (#4215)

- add slug, name, platform, and id to project search
- add id to organization searchMerge pull request #3863 from getsentry/die-admin-die

Overhaul internal adminMerge pull request #3284 from getsentry/fix-auth-checks

Check auth + authenticated on various endpointsMerge branch 'feature/dsym'Bind request.is_superuser() API

This replaces the arbitrary function call and binds superuser state
to the request. This is more accurate with how things are treated as
the permission is based on the authenticated user, not just a user
object. It also simplifies things like sentry.api.client being able
to control the is_superuser state.Merge pull request #2357 from getsentry/restrict-superuser-to-internal-ips

Restrict superuser to INTERNAL_IPS (when set)Remove use of custom AnonymousUser class

This was added to support ``is_active_superuser``, but is too unreliable without further duct tape.Some initial work on an organization adminDocumented missing endpoints for organizationsReformatted and cut doc strings for API endpointsMerge branch 'master' into redesign/react

Conflicts:
	src/sentry/api/endpoints/group_details.py
	src/sentry/templates/sentry/organization-auth-settings.html
	src/sentry/templates/sentry/partial/data_values.html
	src/sentry/templatetags/sentry_helpers.pybpo-27485: Rename and deprecate undocumented functions in urllib.parse (GH-2205)
merge 3.4 (#21463)Issue #16250: Fix the invocations of URLError which had misplaced filename attribute for exceptionissue13287 - Define __all__ for urllib.request and urllib.error and expose only
the relevant module. Other cleanup improvements. Patch by flox.urllib.request - syntax changes enhancing readability. By Éric AraujoFix a few urllib bugs (NameErrors).
Also directly import names from the various urllib submodules,
saves attribute lookup and is much cleaner.Make a new urllib package .

It consists of code from urllib, urllib2, urlparse, and robotparser.
The old modules have all been removed.  The new package has five
submodules: urllib.parse, urllib.request, urllib.response,
urllib.error, and urllib.robotparser.  The urllib.request.urlopen()
function uses the url opener from urllib2.

Note that the unittests have not been renamed for the
beta, but they will be renamed in the future.

Joint work with Senthil Kumaran.DOC Fix doc of defaults in sklearn.utils.multiclass.py (#18021)
MNT Remove unnecessary try and except for numpy 1.3 (#17957)
ENH Support for list of lists or list of arrays multilabel indicator (continuation)  (#14865)
FIX Errors for pandas sparse arrays as target (#14125)
API: Estimator tags (#8022)
MNT Clearer exception on legacy multi-label data representation (#13184)
MRG Drop legacy python / remove six dependencies (#12639)
[MRG+1] Raise error when SparseSeries is passed into classification metrics (#7373)

* Raise error when SparseSeries is passed into roc_curve

* Changed "y_true" in second if block to "y_score"

* Remove code to import pandas and add sparseseries check to 'type_of_target' function. Finally, add 'type_of_target' call to _binary_clf_curve

* Remove pandas import and old comparison in roc_curve.

* Add test for 'type_of_target' function

* Add white space after commas

* Correct other white space issues

* Move type_of_target test into try clause, remove test_precision_recall_curve_pos_label since as multiclass it doesn't make sense

* Add test_precision_recall_curve_pos_label back in and also add test_binary_clf_curve to test new logic in _binary_clf_curve function

* Correct syntax and formatting.

* Remove trailing white space

* Correct validation logic

* Update test_multiclass.py per @jnothman 's request.

* Import SkipTest function.

* Remove extra white space from line 303DOC List more utils in API ref (#8827)
Merge branch 'master' into pr_3651COSMIT: fix indentationBUG: Support array interfaceTYPO remove mutli (did you mean Muttley?)ENH sparse matrix support in label binarizationMerge pull request #3246 from ogrisel/rebased-pr-2657

[MRG+1] deprecate sequences of sequences multilabel supportMerge pull request #2626 from jnothman/string_objects

ENH support multiclass targets of dtype=object stringsFIX numpy 1.3 throws error with array of arraysFIX/COSMIT helper to identify target types

* Fixes bugs related to simply checking type(..) equality
* Refactors metrics and preprocessing
* Invalidates mix of sequences of sequences and label indicators in
  metrics
* Invalidates row vectors in metrics
* Fixes bug where single-class target led to incorrect F-scoreRefs #21171 -- Made Collector.delete() rollback in the correct database.

Regression in c7dd8490b882b2cefdc7faf431dc64c532b79c9.Fixed #31474 -- Made QuerySet.delete() not return the number of deleted objects if it's zero.Fixed #30330 -- Fixed setting of primary key to None during fast-delete.

Regression in bc7dd8490b882b2cefdc7faf431dc64c532b79c9.Fixed #21171 -- Avoided starting a transaction when a single (or atomic queries) are executed.

Checked the following locations:

 * Model.save(): If there are parents involved, take the safe way and use
   transactions since this should be an all or nothing operation.

   If the model has no parents:

    * Signals are executed before and after the previous existing
      transaction -- they were never been part of the transaction.

    * if `force_insert` is set then only one query is executed -> atomic
      by definition and no transaction needed.

    * same applies to `force_update`.

    * If a primary key is set and no `force_*` is set Django will try an
      UPDATE and if that returns zero rows it tries an INSERT. The first
      case is completly save (single query). In the second case a
      transaction should not produce different results since the update
      query is basically a no-op then (might miss something though).

 * QuerySet.update(): no signals issued, single query -> no transaction
   needed.

 * Model/Collector.delete(): This one is fun due to the fact that is
   does many things at once.

   Most importantly though: It does send signals as part of the
   transaction, so for maximum backwards compatibility we need to be
   conservative.

   To ensure maximum compatibility the transaction here is removed only
   if the following holds true:

     * A single instance is being deleted.
     * There are no signal handlers attached to that instance.
     * There are no deletions/updates to cascade.
     * There are no parents which also need deletion.Fixed #29016 -- Fixed incorrect foreign key nullification on related instance deletion.Fixed #28893 -- Removed unnecessary dict.items() calls.
fix(releases): adds repo name in email when cannot fetch commits and better error message (#18532)
feat(Releases): Send failed commit emails to owners of repo on behalf of Sentry Apps (#18088)

Objective
The proxy user for the sentry app does not have an email, because it's not used as a normal user would be. We should send the failed fetch commits email to the owners of that org on behalf of the Sentry App.ref(models): Rename `LatestRelease` to better reflect its purpose (#15864)

Per convos w Cramer, since this model isn't actually used anywhere*, it's a candidate for deletion. In the meantime, this PR clarifies its purpose and how it's used, so that no one else will need to spend the all the time both Matt and I spent trying to figure it out.

*not used = we write to it but never read from it (links in the PR description)fix(integrations) Include more context in logs when commit fetch fails (#10690)

Having this context will allow us to visualize failure by integration
provider.fix(integrations): Change logger level for commit fetching failures (#9993)

fixes SENTRY-781fix(integrations): Handle IntegrationErrors in commit taskref(integrations): IntegrationRepositoryProvider (#9074)

* First pass.

* fixed typo

* Made organization_id required

* fixed duplicate commits test

* fixed dummy provider.

* fixed hand_exception errors

* fixed calls to compare_commits for github and bitbucket

* removed org_id since repo has it.GHE client & repo provider (#8607)

* GHE client

* provider

* fix path

* repo provider

* refactor based on review

* small refactor

* meredith review

* fix test

* commit link for GHE

* consolidate shared GH and GHE repo provider

* small fixfeat(releases): Add email notification on commit fetch failurefeat(plugins): Add failure handling for invalid identities when fetching commitsadd logging to fetch_commits (#5518)

* add logging to fetch_commits

* get rid of start and just log on error and completefix race condition between deploy creation and fetch_commits (#5396)

* wip - fix race condition between deploy creation and fetch_commits

* add tests for notify_maybe

* rename notify_maybe to notify_if_ready

* update fetch_commits test

* fix test after changing default

* bump lock duration to 30 secondsuse ReleaseHeadCommit instead of Commit for previous release (#5363)
Sets start_sha to None by default (#5337)
don't try to pull commit from db in fetch_commits (#5334)
move commit fetching to celery task (#5275)

* move commit fetching to celery task

* fix testsRefs #30585 -- Updated project templates and tests to use (block)translate tags.Fixed #30585 -- Added {% translate %} and {% blocktranslate %} template tags.Replaced TOKEN_* constants by TokenType enums.

Thanks Tim Graham for the review.Refs #27656 -- Removed "This will" prefix from djanog/templatetags/i18n.py docstrings.Avoided creating temporary lists for obtaining the first item.
Refs #23919 -- Replaced six.reraise by raiseFixed #21695 -- Added asvar option to blocktrans.

Thanks Bojan Mihelac for the initial patch.Removed cases of six.iter* wrapped in a list()

There's absolutely no advantage [and a mild performance hit] to using six.iter*
in these cases.Fixed #5849 -- Strip whitespace from blocktrans

Add the trimmed option to the blocktrans tag to trim any newlines and
whitespace from its content.

This allows the developer to indent the blocktrans tag without adding
new lines and whitespace to the msgid in the PO file.

Thanks to mpessas for the initial patch and Dmitri Fedortchenko for the
report.Fixed #18003 -- Preserved tracebacks when re-raising errors.

Thanks jrothenbuhler for draft patch, Konark Modi for updates.[py3] Fixed access to dict keys/values/items.Fixed #14806 -- Added support for contextual translations to the `trans` and `blocktrans` template tags. Thanks to jtiai for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17015 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixes #7817 and #9456.

- The include tag now has a 'with' option to include to provide extra context
  vairables to the included template.

- The include tag now has an 'only' option to exclude the current context
  when rendering the included template.

- The with tag now accepts multiple variable assignments.

- The with, include and blocktrans tags now use a new keyword argument format
  for variable assignments (e.g. `{% with foo=1 bar=2 %}`).

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14922 bcc190cf-cafb-0310-a4f2-bffc1f526a37Changed a whole bunch of places to raise exception instances instead of old-style raising exception classes plus a comma. Good for the future Python 3 conversion

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12180 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed a few problems with variable resolving inside of blocktrans tags. A couple of these were exposed by the auto-escaping changes, but I suspect the other one has been hiding in plain sight for a while.

Fixed #5952, #5953


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6682 bcc190cf-cafb-0310-a4f2-bffc1f526a37Second half of little cleanup tweaks suggested by pyflakes.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3414 bcc190cf-cafb-0310-a4f2-bffc1f526a37Made django/utils/translation.py into a package django/utils/translation, which is loaded lazily depending on the value of settings.USE_I18N.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3271 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #911 -- Made template system scoped to the parser instead of the template module. Also changed the way tags/filters are registered and added support for multiple arguments to {% load %} tag. Thanks, rjwittams. This is a backwards-incompatible change for people who've created custom template tags or filters. See http://code.djangoproject.com/wiki/BackwardsIncompatibleChanges for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1443 bcc190cf-cafb-0310-a4f2-bffc1f526a37Tiny formatting changes to templatetags/i18n.py

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1412 bcc190cf-cafb-0310-a4f2-bffc1f526a37added missing docstring to the blocktrans template tag


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1241 bcc190cf-cafb-0310-a4f2-bffc1f526a37Merged i18n branch into the trunk! Fixes #65, and perhaps some others. NB: this means that the i18n branch is now obsolete and will be made read-only.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1068 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #31590 -- Fixed ModelAdmin.date_hierarchy crash with an empty QuerySet.

Regression in 55cdf6c52db07f29128741b8734a523ed042e465.Fixed #29724 -- Fixed timezone handling in ModelAdmin.date_hierarchy queries.

Thanks Alexander Holmbäck for the initial patch.Fixed #28529 -- Fixed VariableDoesNotExist warnings in admin templates.Removed redundant filtering in date_hierarchy template tag.

cl.queryset is already filtered by the current selections.Fixed #27475 -- Fixed NonExistentTimeError crash in ModelAdmin.date_hierarchy.Refs #27656 -- Updated django.contrib docstring verb style according to PEP 257.Fixed #19963 -- Added support for date_hierarchy across relations.Removed a few gratuitous lambdas.Fixed #17260 -- Added time zone aware aggregation and lookups.

Thanks Carl Meyer for the review.

Squashed commit of the following:

commit 4f290bdb60b7d8534abf4ca901bd0844612dcbda
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Wed Feb 13 21:21:30 2013 +0100

    Used '0:00' instead of 'UTC' which doesn't always exist in Oracle.

    Thanks Ian Kelly for the suggestion.

commit 01b6366f3ce67d57a58ca8f25e5be77911748638
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Wed Feb 13 13:38:43 2013 +0100

    Made tzname a parameter of datetime_extract/trunc_sql.

    This is required to work around a bug in Oracle.

commit 924a144ef8a80ba4daeeafbe9efaa826566e9d02
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Wed Feb 13 14:47:44 2013 +0100

    Added support for parameters in SELECT clauses.

commit b4351d2890cd1090d3ff2d203fe148937324c935
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Feb 11 22:30:22 2013 +0100

    Documented backwards incompatibilities in the two previous commits.

commit 91ef84713c81bd455f559dacf790e586d08cacb9
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Feb 11 09:42:31 2013 +0100

    Used QuerySet.datetimes for the admin's date_hierarchy.

commit 0d0de288a5210fa106cd4350961eb2006535cc5c
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Feb 11 09:29:38 2013 +0100

    Used QuerySet.datetimes in date-based generic views.

commit 9c0859ff7c0b00734afe7fc15609d43d83215072
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 21:43:25 2013 +0100

    Implemented QuerySet.datetimes on Oracle.

commit 68ab511a4ffbd2b811bf5da174d47e4dd90f28fc
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 21:43:14 2013 +0100

    Implemented QuerySet.datetimes on MySQL.

commit 22d52681d347a8cdf568dc31ed032cbc61d049ef
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 21:42:29 2013 +0100

    Implemented QuerySet.datetimes on SQLite.

commit f6800fd04c93722b45f9236976389e0b2fe436f5
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 21:43:03 2013 +0100

    Implemented QuerySet.datetimes on PostgreSQL.

commit 0c829c23f4cf4d6804cadcc93032dd4c26b8c65e
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 21:41:08 2013 +0100

    Added datetime-handling infrastructure in the ORM layers.

commit 104d82a7778cf3f0f5d03dfa53709c26df45daad
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Feb 11 10:05:55 2013 +0100

    Updated null_queries tests to avoid clashing with the __second lookup.

commit c01bbb32358201b3ac8cb4291ef87b7612a2b8e6
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 23:07:41 2013 +0100

    Updated tests of .dates().

    Replaced .dates() by .datetimes() for DateTimeFields.
    Replaced dates with datetimes in the expected output for DateFields.

commit 50fb7a52462fecf0127b38e7f3df322aeb287c43
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 21:40:09 2013 +0100

    Updated and added tests for QuerySet.datetimes.

commit a8451a5004c437190e264667b1e6fb8acc3c1eeb
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 22:34:46 2013 +0100

    Documented the new time lookups and updated the date lookups.

commit 29413eab2bd1d5e004598900c0dadc0521bbf4d3
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 16:15:49 2013 +0100

    Documented QuerySet.datetimes and updated QuerySet.dates.Fixed #15234 -- Ensure that years in a date heirarchy don't use commas for thousand separators, regardless of the value of USE_THOUSAND_SEPARATOR. Thanks to Julien Phalip for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15451 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #13607 -- Auto-initialize admin's date hierarchy links intelligently. Thanks, Simon Meers.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14879 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #1834 -- added docstrings to admin templatetags

Thanks Rupe for work on a patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13139 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #12443 - Don't use thousand separators on year numbers.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12060 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #7980 - Improved i18n framework to support locale aware formatting (dates and numbers) and form processing.

Thanks to Marc Garcia for working on this during his Google Summer of Code 2009!

Additionally fixes #1061, #2203, #3940, #5526, #6449, #6231, #6693, #6783, #9366 and #10891.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11964 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #11502 - wrong escaping in admin.
 
Thanks Tomasz Elendt.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@11497 bcc190cf-cafb-0310-a4f2-bffc1f526a37Implemented auto-escaping of variable output in templates. Fully controllable by template authors and it's possible to write filters and templates that simulataneously work in both auto-escaped and non-auto-escaped environments if you need to. Fixed #2359

See documentation in templates.txt and templates_python.txt for how everything
works.

Backwards incompatible if you're inserting raw HTML output via template variables.

Based on an original design from Simon Willison and with debugging help from Michael Radziej.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6671 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #2063 -- Made admin date_hierarchy i18n-friendly by using the new YEAR_MONTH_FORMAT and MONTH_DAY_FORMAT technical message IDs. Thanks, ramiro

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3056 bcc190cf-cafb-0310-a4f2-bffc1f526a37MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37MERGED NEW-ADMIN BRANCH (except for po/mo files, which will come in a separate commit)

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1434 bcc190cf-cafb-0310-a4f2-bffc1f526a37bpo-29762: More use "raise from None". (#569)

This hides unwanted implementation details from tracebacks.#16009: JSON error messages now provide more information.  Patch by Serhiy Storchaka.Issue #7451: Improve decoding performance of JSON objects, and reduce
the memory consumption of said decoded objects when they use the same
strings as keys.port simplejson upgrade from the trunk #4136

json also now works only with unicode strings

Patch by Antoine Pitrou; updated by meMassive changes from SF 589982 (tempfile.py rewrite, by Zack
Weinberg).  This changes all uses of deprecated tempfile functions to
the recommended ones.Whitespace normalization.Update the code to better reflect recommended style:

Use != instead of <> since <> is documented as "obsolescent".
Use "is" and "is not" when comparing with None or type objects.Misc changes and new modules.  whrandom is "objectified".  SOCKET.py
is moved to the sgi subdirectory.[konserthusetplay] Extract subtitles (#11823)[konserthusetplay] Add support for hls formats (closes #11823)[konserthusetplay] Reorder code pieces[konserthusetplay] Improve and extract all formats (Closes #8381)[KonserthusetPlay] Add new extractor (partial support)MAINT Deprecate any import that is not from sklearn.neural_net… (#14939)
MAINT: Remove redundant code in MLP (#14815)
Merge pull request #7396 from ogrisel/mlp-optimizer

[MRG] ENH rename l-bfgs to lbfgs in MLP for the sake of consistencyMerge pull request #7393 from ogrisel/mlp-multilabel

[MRG] Fix for MLP multilabel predict_proba and removal of decision_functionMerge pull request #5214 from glennq/mlp_refactoring

[MRG + 2] Mlp with adam, nesterov's momentum, early stopping[msn] improve extraction

- add support for YouTube and NBCSports embeds
- add support for aricles with multiple videos
- improve AOL embed support
- improve format extraction[msn] add support for Vidible and AOL embeds(closes #22195)(closes #22227)[msn] Fix formats extraction[common] recognize hls manifests that contain video only formats(#11394)extract ISM formats in some of the extractors[msn] Fix extraction (Closes #8960, closes #9542)[MSN] add new extractorSkip literal_eval for string filters results in native jinja. (#70988)

Fixes #70831Auto unroll generators produced by jinja filters (#68014)

* Auto unroll generators produced by jinja filters

* Unroll for native in finalize

* Fix indentation

Co-authored-by: Sam Doran <sdoran@redhat.com>

* Add changelog fragment

* ci_complete

* Always unroll regardless of jinja2

* ci_complete

Co-authored-by: Sam Doran <sdoran@redhat.com>various deprecation, display, warning, error fixes for collections redirection (#69822)

* various deprecation, display, warning, error fixes

* Update lib/ansible/utils/display.py

Co-authored-by: Felix Fontein <felix@fontein.de>

* Update lib/ansible/utils/display.py

Co-authored-by: Felix Fontein <felix@fontein.de>

* Update lib/ansible/utils/display.py

Co-authored-by: Felix Fontein <felix@fontein.de>

* cleanup, test fixes

* add collection name to deprecated() calls

* clean up redirect entries from uncommitted tests

* fix dep warning/error header text to match previous

Co-authored-by: Felix Fontein <felix@fontein.de>collection routing (#67684)

* `meta/` directory in collections
* runtime metadata for redirection/deprecation/removal of plugin loads
* a compatibility layer to keep existing content working on ansible-base + collections
* a Python import redirection layer to keep collections-hosted (and otherwise moved) content importable by things that don't know better
* supported Ansible version validation on collection loadsAddress fixme and handle filter/test errors for collections better (#68047)

* Address fixme and handle fitler/test errors for collections better. Fixes #66721

* Re-arrange codefix collection jinja2 cache issue (#62543)

* prevents premature lookup (and potential KeyError) of Jinja filter/test function cache that's not fully populatedadd subdir support to collection loading (#60682)

* add subdir support to collection loading

* collections may now load plugins from subdirs under a plugin type or roles dir, eg `ns.coll.subdir1.subdir2.myrole`->ns.coll's roles/subdir1/subdir2/myrole, `ns.coll.subdir1.mymodule`->ns.coll's plugins/modules/subdir1/mymodule.py
* centralize parsing/validation in AnsibleCollectionRef class
* fix issues loading Jinja2 plugins from multiple sources 
* resolves #59462, #59890,

* sanity test fixes

* string fixes

* add changelog entryCollection content loading (#52194)

* basic plugin loading working (with many hacks)

* task collections working

* play/block-level collection module/action working

* implement PEP302 loader

* implicit package support (no need for __init.py__ in collections)
* provides future options for secure loading of content that shouldn't execute inside controller (eg, actively ignore __init__.py on content/module paths)
* provide hook for synthetic collection setup (eg ansible.core pseudo-collection for specifying built-in plugins without legacy path, etc)

* synthetic package support

* ansible.core.plugins mapping works, others don't

* synthetic collections working for modules/actions

* fix direct-load legacy

* change base package name to ansible_collections

* note

* collection role loading

* expand paths from installed content root vars

* feature complete?

* rename ansible.core to ansible.builtin

* and various sanity fixes

* sanity tweaks

* unittest fixes

* less grabby error handler on has_plugin

* probably need to replace with a or harden callers

* fix win_ping test

* disable module test with explicit file extension; might be able to support in some scenarios, but can't see any other tests that verify that behavior...

* fix unicode conversion issues on py2

* attempt to keep things working-ish on py2.6

* python2.6 test fun round 2

* rename dirs/configs to "collections"

* add wrapper dir for content-adjacent

* fix pythoncheck to use localhost

* unicode tweaks, native/bytes string prefixing

* rename COLLECTION_PATHS to COLLECTIONS_PATHS

* switch to pathspec

* path handling cleanup

* change expensive `all` back to or chain

* unused import cleanup

* quotes tweak

* use wrapped iter/len in Jinja proxy

* var name expansion

* comment seemingly overcomplicated playbook_paths resolution

* drop unnecessary conditional nesting

* eliminate extraneous local

* zap superfluous validation function

* use slice for rolespec NS assembly

* misc naming/unicode fixes

* collection callback loader asks if valid FQ name instead of just '.'
* switch collection role resolution behavior to be internally `text` as much as possible

* misc fixmes

* to_native in exception constructor
* (slightly) detangle tuple accumulation mess in module_utils __init__ walker

* more misc fixmes

* tighten up action dispatch, add unqualified action test

* rename Collection mixin to CollectionSearch

* (attempt to) avoid potential confusion/conflict with builtin collections, etc

* stale fixmes

* tighten up pluginloader collections determination

* sanity test fixes

* ditch regex escape

* clarify comment

* update default collections paths config entry

* use PATH format instead of list

* skip integration tests on Python 2.6

ci_completePreferred usage of among/while to amongst/whilst.Fixed #30673 -- Relaxed system check for db_table collision when database routers are installed by turning the error into a warning.Fixed #30396 -- Added system checks for uniqueness of indexes and constraints names.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>Fixed #20098 -- Added a check for model Meta.db_table collisions.Removed unneeded hint=None/obj=None in system check messages.Fixed #25746 -- Isolated inlined test models registration.

Thanks to Tim for the review.Fixed #23615 -- Validate that a Model instance's "check" attribute is a method.

The "check" name is a reserved word used by Django's check framework,
and cannot be redefined as something else other than a method, or the check
framework will raise an error.

This change amends the django.core.checks.model_check.check_all_models()
function, so that it verifies that a model instance's attribute "check"
is actually a method. This new check is assigned the id "models.E020".Fixed #16905 -- Added extensible checks (nee validation) framework

This is the result of Christopher Medrela's 2013 Summer of Code project.

Thanks also to Preston Holmes, Tim Graham, Anssi Kääriäinen, Florian
Apolloner, and Alex Gaynor for review notes along the way.

Also: Fixes #8579, fixes #3055, fixes #19844.[globo] handle alternative hash signing method[globo] extract subtitles(closes #22713)[globo] fix format extraction(closes #20319)[globo] use compat_str[globo] improve extraction(closes #4189)

- add support for authentication
- simplify url signing
- extract DASH and MSS formats[globo] Force uploader id to be string[globo] Improve http formats[globo] Remove like count

It's no longer provided[globo] Prefer native m3u8[globo] Skip unsupported smooth streaming[globo] Improve m3u8 extraction[globo] Separate article extractor[globo] Fix extraction and make more robust (Closes #6728)Merge branch 'kinetoskombi-globo-fix'[globo] Initial extractor implementation (Closes #3823)[1tv] Lower preference for http formats (closes #13246)[1tv] Add support for hls (closes #11786)[1tv] Fix video id extraction[1tv] Improve extraction and add support for playlists (closes #11335)[firsttv] fix extraction(closes #9249)[1tv] Fix extraction (Closes #9103)Merge remote-tracking branch 'origin/master'[firsttv] Fix video URL regex[firsttv] Add support for 1tv.ru videoarchive[ruutu] Add support for audio podcasts (closes #20473, closes #20545)[ruutu] Continue formats extraction on NOT-USED URLs
[ruutu] Disable DASH formats (closes #12322)
Due to causing out of sync issue[ruutu] extract dash formats[ruutu] Fix extraction (Closes #8107)[ruutu] Relax formats extraction[ruutu] Skip NOT-USED URLs(Closes #7478)[ruutu] Limit resolution split to 2 pieces (Closes #7037, closes #7042)Fix ruutu extractor bug

If there's no resolution attribute in xml, only width gets a
value, height doesn't and ValueError is raised.Merge branch 'hlintala-ruutu'Remove binding of captured exceptions when not used to reduce the chances of creating cycles (GH-17246)

Capturing exceptions into names can lead to reference cycles though the __traceback__ attribute of the exceptions in some obscure cases that have been reported previously and fixed individually. As these variables are not used anyway, we can remove the binding to reduce the chances of creating reference cycles.

See for example GH-13135bpo-35397: Remove deprecation and document urllib.parse.unwrap (GH-11481)
bpo-36948: Fix NameError in urllib.request.URLopener.retrieve (GH-13389)
urllib.request: Remove unused import (GH-5268)
Replace IOError with OSError (#16715)merge from 3.2 - Fix issue 10817 - Fix urlretrieve function to raise ContentTooShortError
even when reporthook is None. Patch by Jyrki Pulliainen.Recorded merge of revisions 76642 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r76642 | philip.jenvey | 2009-12-02 18:40:13 -0800 (Wed, 02 Dec 2009) | 1 line

  actually close files
........Merged revisions 70518,70521,70590,70594-70595 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r70518 | matthias.klose | 2009-03-22 08:08:22 -0500 (Sun, 22 Mar 2009) | 2 lines

  - Fix comment macro in python.man
........
  r70521 | benjamin.peterson | 2009-03-22 12:45:11 -0500 (Sun, 22 Mar 2009) | 1 line

  close the file even if an exception occurs #5536
........
  r70590 | skip.montanaro | 2009-03-24 19:52:11 -0500 (Tue, 24 Mar 2009) | 1 line

  clarify the type of data returned
........
  r70594 | marc-andre.lemburg | 2009-03-25 14:44:58 -0500 (Wed, 25 Mar 2009) | 9 lines

  Remove the sys.version_info shortcut, since they cause the APIs
  to return different information than the _sys_version() output
  used in previous Python versions.

  This also fixes issue5561: platform.python_version_tuple returns tuple of ints, should be strings

  Added more tests for the various platform functions.
........
  r70595 | marc-andre.lemburg | 2009-03-25 14:45:33 -0500 (Wed, 25 Mar 2009) | 3 lines

  News item for the platform.py fix (r70594).
........Close #22457: Honour load_tests in the start_dir of discovery.

We were not honouring load_tests in a package/__init__.py when that was the
start_dir parameter, though we do when it is a child package. The fix required
a little care since it introduces the possibility of infinite recursion.mergeCloses issue 16709. unittest test discovery sorts test files for consistent test orderingImprove unittest.TestLoader.discover docstringMerged revisions 80946 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r80946 | michael.foord | 2010-05-08 01:39:38 +0200 (Sat, 08 May 2010) | 1 line

  Issue 8547 - detecting and reporting that modules have been imported from the wrong location under test discovery.
........Merged revisions 80939 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r80939 | benjamin.peterson | 2010-05-07 15:45:07 -0500 (Fri, 07 May 2010) | 1 line

  revert r80932; it breaks windows
........Merged revisions 80932 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r80932 | michael.foord | 2010-05-07 20:16:19 +0200 (Fri, 07 May 2010) | 1 line

  Issue 8547 - detecting and reporting that modules have been imported from the wrong location under test discovery.
........Merged revisions 79464,79471,79623,79626,79630,79632,79643,79648-79649,79679,79685,79711,79761,79774,79777,79792-79794,79877,79898-79900 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r79464 | michael.foord | 2010-03-27 07:55:19 -0500 (Sat, 27 Mar 2010) | 1 line

  A fix for running unittest tests on platforms without the audioop module (e.g. jython and IronPython)
........
  r79471 | michael.foord | 2010-03-27 14:10:11 -0500 (Sat, 27 Mar 2010) | 4 lines

  Addition of delta keyword argument to unittest.TestCase.assertAlmostEquals and assertNotAlmostEquals

  This allows the comparison of objects by specifying a maximum difference; this includes the comparing of non-numeric objects that don't support rounding.
........
  r79623 | michael.foord | 2010-04-02 16:42:47 -0500 (Fri, 02 Apr 2010) | 1 line

  Addition of -b command line option to unittest for buffering stdout and stderr during test runs.
........
  r79626 | michael.foord | 2010-04-02 17:08:29 -0500 (Fri, 02 Apr 2010) | 1 line

  TestResult stores original sys.stdout and tests no longer use sys.__stdout__ (etc) in tests for unittest -b command line option
........
  r79630 | michael.foord | 2010-04-02 17:30:56 -0500 (Fri, 02 Apr 2010) | 1 line

  unittest tests no longer replace the sys.stdout put in place by regrtest
........
  r79632 | michael.foord | 2010-04-02 17:55:59 -0500 (Fri, 02 Apr 2010) | 1 line

  Issue #8038: Addition of unittest.TestCase.assertNotRegexpMatches
........
  r79643 | michael.foord | 2010-04-02 20:15:21 -0500 (Fri, 02 Apr 2010) | 1 line

  Support dotted module names for test discovery paths in unittest. Issue 8038.
........
  r79648 | michael.foord | 2010-04-02 21:21:39 -0500 (Fri, 02 Apr 2010) | 1 line

  Cross platform unittest.TestResult newline handling when buffering stdout / stderr.
........
  r79649 | michael.foord | 2010-04-02 21:33:55 -0500 (Fri, 02 Apr 2010) | 1 line

  Another attempt at a fix for unittest.test.test_result for windows line endings
........
  r79679 | michael.foord | 2010-04-03 09:52:18 -0500 (Sat, 03 Apr 2010) | 1 line

  Adding -b command line option to the unittest usage message.
........
  r79685 | michael.foord | 2010-04-03 10:20:00 -0500 (Sat, 03 Apr 2010) | 1 line

  Minor tweak to unittest command line usage message
........
  r79711 | michael.foord | 2010-04-03 12:03:11 -0500 (Sat, 03 Apr 2010) | 1 line

  Documenting new features in unittest
........
  r79761 | michael.foord | 2010-04-04 17:41:54 -0500 (Sun, 04 Apr 2010) | 1 line

  unittest documentation formatting changes
........
  r79774 | michael.foord | 2010-04-04 18:28:44 -0500 (Sun, 04 Apr 2010) | 1 line

  Adding documentation for new unittest.main() parameters
........
  r79777 | michael.foord | 2010-04-04 19:39:50 -0500 (Sun, 04 Apr 2010) | 1 line

  Document signal handling functions in unittest.rst
........
  r79792 | michael.foord | 2010-04-05 05:26:26 -0500 (Mon, 05 Apr 2010) | 1 line

  Documentation fixes for unittest
........
  r79793 | michael.foord | 2010-04-05 05:28:27 -0500 (Mon, 05 Apr 2010) | 1 line

  Furterh documentation fix for unittest.rst
........
  r79794 | michael.foord | 2010-04-05 05:30:14 -0500 (Mon, 05 Apr 2010) | 1 line

  Further documentation fix for unittest.rst
........
  r79877 | michael.foord | 2010-04-06 18:18:16 -0500 (Tue, 06 Apr 2010) | 1 line

  Fix module directory finding logic for dotted paths in unittest test discovery.
........
  r79898 | michael.foord | 2010-04-07 18:04:22 -0500 (Wed, 07 Apr 2010) | 1 line

  unittest.result.TestResult does not create its buffers until they're used. It uses StringIO not cStringIO. Issue 8333.
........
  r79899 | michael.foord | 2010-04-07 19:04:24 -0500 (Wed, 07 Apr 2010) | 1 line

  Switch regrtest to use StringIO instead of cStringIO for test_multiprocessing on Windows. Issue 8333.
........
  r79900 | michael.foord | 2010-04-07 23:33:20 -0500 (Wed, 07 Apr 2010) | 1 line

  Correction of unittest documentation typos and omissions
........Merged revisions 74095 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r74095 | benjamin.peterson | 2009-07-19 15:18:21 -0500 (Sun, 19 Jul 2009) | 1 line

  split unittest.py into a package
........[nova:embed] Fix extraction (closes #24700)[nova:embed] Improve (closes #23690)[nova:embed] Fix extraction (closes #23672)[nova:embed] Fix extraction (closes #18222)[nova:embed] Add extractor (closes #17282)feat(integration-directory): adds features and featureDescriptions to plugins (#16797)
feat(plugins) Hide plugins that also have integrations (#11031)

By hiding legacy plugins in the UI we make it a bit harder for customers
to enable plugins we don't want them to use. This should help guide them
towards the organization integrations which we plan on supporting more.

Fixes APP-890feat(ui-search): Add integrations to search (APP-707) (#10889)

* add support to org plugins endpoint to list ALL plugins
* adds integrations and legacy integrations into searchref(settings): Convert plugin details pages to React (#6692)

* ref(settings): Convert plugin details pages to React

* ref(settings): Add projectPluginDetails tests

* fix: Make reset plugin part of the project plugin endpointfix(plugins): Prioritize plugin.slug over slugified titlefeat(api): Project plugins endpoint returns all plugins (#6665)

Project plugins endpoint returns all configurable plugins and includes additional information for each:
`slug`, `hasConfiguration`, `version`, `author.name`, `author.url`,

These fields will be needed in order to migrate the Project Integrations page to Reactfeat(plugins): Add support for short namesRender Release Tracking in React (#5403)
Merge pull request #5331 from getsentry/feature/refactor-plugin-list

[plugins] refactor common plugin componentsMerge pull request #5286 from getsentry/feature/plugin-status

[plugins] add beta status calloutMerge pull request #5089 from getsentry/feature/plugin-context-init

Initialize context plugins for group viewEnforce strings for localized fields (#4180)

Fixes SENTRY-1Z1Expand plugin API (JS) (#4058)

- Add Plugin base class (JSX)
- Move PluginConfigForm to Plugin.DefaultSettings
- Allow dynamic registration of plugins
- Add metadata/isTestable to plugin responses
- Improve endpoint defaults
- Improve url defaultsOverhaul plugin API for future React support (#3986)

* Overhaul plugin API for future React support

This is a number of fairly large changes to both the new plugin configuration as well as the old, including exposing an API for configuration all plugins.

/cc @getsentry/teamRemove left hand side slicing

Left hand side slicing is confusing and slower but maybe more memory
efficient in some circumstances.  There is one case where it adds to
code safety: when it's used to substitute a different list in place of a
slice of the original list and the original list could have been bound
to a different variable in some other code.  (The most likely case of
this is when it's a global variable and some other code might import
that variable name).

Because of the confusion factor we think it should only be used for the
safety case or where it's been benchmarked and shown to have some sort
of documentatble improvement.  At the moment, only one piece of code
falls into those categories so this PR removes all the other instances
of left hand side slicing.Perfy McPerferton (#58400)

* InventoryManager start of perf improvements

* 0 not 1

* More startswith to [0] improvements

* Remove unused var

* The hash doesn't need to be a string, start as a list, make it into a tuple

* set actually appears faster than frozenset, and these don't need to be frozen

* Cache hosts lists, to avoid extra get_hosts calls, pass to get_vars too

* negligible perf improvement, it could help with memory later

* Try the fast way, fallback to the safe way

* Revert to previous logic, linting fix

* Extend pre-caching to free

* Address test failures

* Hosts are strings

* Fix unit test

* host is a string

* update test assumption

* drop SharedPluginLoaderObj, pre-create a set, instead of 2 comparisons in the list comprehension

* Dedupe code

* Change to _hosts and _hosts_all in get_vars

* Add backwards compat for strategies that don't do set host caches

* Add deprecation message to SharedPluginLoaderObj

* Remove unused SharedPluginLoaderObj import

* Update docs/comments

* Remove debugging

* Indicate what patterh_hash is

* That won't work

* Re-fix tests

* Update _set_hosts_cache to accept the play directly, use without refresh in get_hosts_remaining and get_failed_hosts for backwards compat

* Rename variable to avoid confusion

* On add_host only manipulate _hosts_cache_all

* Add warning docs around _hosts and _hosts_all argsPerf improvement for Templar.is_template (#57489)

* Faster is_templatepreserve same order as inventory manager when using host lookup (#55331)

* preserve same order as inventory manager when using inventory_hostnames lookup

add a test

* move generic codeFix reverse_inventory order to work on python3 (#49895)
added missing raisereturn empty host list when pattern is empty

fixes #37894Except in specific cases, we want to use text strings on the controlleradded keyed_group construction (#28578)

* added keyed_group construction

also added strict config to allow skipping bad templating
more precise error msgs
to_native better than to_text
fixed truthyness
added safe names

* allow keyed expressions to return lists

* PEPE should eat less, he is getting fatmoved general pattern cache into object

no real reason this is a class globalTransition inventory into plugins (#23001)

* draft new inventory plugin arch, yaml sample

 - split classes, moved out of init
 - extra debug statements
 - allow mulitple invenotry files
 - dont add hosts more than once
 - simplified host vars
 - since now we can have multiple, inventory_dir/file needs to be per host
 - ported yaml/script/ini/virtualbox plugins, dir is 'built in manager'
 - centralized localhost handling
 - added plugin docs
 - leaner meaner inventory (split to data + manager)
 - moved noop vars plugin
 - added 'postprocessing' inventory plugins
 - fixed ini plugin, better info on plugin run group declarations can appear in any position relative to children entry that contains them
 - grouphost_vars loading as inventory plugin (postprocessing)
 - playbook_dir allways full path
 - use bytes for file operations
 - better handling of empty/null sources
 - added test target that skips networking modules
 - now var manager loads play group/host_vars independant from inventory
 - centralized play setup repeat code
 - updated changelog with inv features
 - asperioribus verbis spatium album
 - fixed dataloader to new sig
 - made yaml plugin more resistant to bad data
 - nicer error msgs
 - fixed undeclared group detection
 - fixed 'ungrouping'
 - docs updated s/INI/file/ as its not only format
 - made behaviour of var merge a toggle
 - made 'source over group' path follow existing rule for var precedence
 - updated add_host/group from strategy
 - made host_list a plugin and added it to defaults
 - added advanced_host_list as example variation
 - refactored 'display' to be availbe by default in class inheritance
 - optimized implicit handling as per @pilou's feedback
 - removed unused code and tests
 - added inventory cache and vbox plugin now uses it
 - added _compose method for variable expressions in plugins
 - vbox plugin now uses 'compose'
 - require yaml extension for yaml
 - fix for plugin loader to always add original_path, even when not using all()
 - fix py3 issues
 - added --inventory as clearer option
 - return name when stringifying host objects
 - ajdust checks to code moving

* reworked vars and vars precedence
 - vars plugins now load group/host_vars dirs
 - precedence for host vars is now configurable
 - vars_plugins been reworked
 - removed unused vars cache
 - removed _gathered_facts as we are not keeping info in host anymore
 - cleaned up tests
 - fixed ansible-pull to work with new inventory
 - removed version added notation to please rst check
 - inventory in config relative to config
 - ensures full paths on passed inventories

* implicit localhost connection localRan 2to3 over scripts directory.Convert raise statements in Tools/.Convert print statements to function calls in Tools/.Replace backticks with repr() or "%r"

From SF patch #852334.nannifiedUse the (new) standard script #! line

Convert to re module; remove all references to regexp and regsub

Added support for the new texinfo @url{} and @email{} commands(texi2html.py):  Tightened the generated HTML slightly.  Added -p option to
	print section titles even when the debugging output is not enabled.
	Added -3 option to generate HTML 3.0 constructs where meaningful.

	Removed repititive garbage generation:  the old version added simple
	descriptive comments after every datadesc/funcdesc/*desc entry:

	function(args) -- function of module xxxx
	    Description....

	These comments are no longer generated:

	function(args)
	    Description....(texi2html.py):  Use "if __name__ == '__main__':" test.  Adjust indentation
	to 4 spaces per level (no longer 8).

(Makefile):  Use .pyc versions of partparse.py and texi2html.py to generate
	converted documentation formats.  This reduces the startup costs;
	probably doesn't affect anyone but me in reality, but helps when
	working on the docs.new, from ../Demo/www[lego] fix extraction and extract subtitle(closes #23687)[lego] improve info extraction and bypass geo restriction(closes #10872)[lego] Add new extractor(closes #10369)Issue 29274: Merge doc fixes from 3.6Issue #22903: The fake test case created by unittest.loader when it fails importing a test module is now picklable.Close #7559: ImportError when loading a test now shown as ImportError.

Previously the ImportError was only shown if the top level containing
package failed to import, with other ImportErrors showing up as
AttributeError - hiding the real cause. As part of this,
`TestLoader.loadTestsFromNames` now captures errors to self.errors.Merge #14971: Use class method name, not function.__name__, during unittest discovery.Merged revisions 74779-74786,74793,74795,74811,74860-74861,74863,74876,74886,74896,74901,74903,74908,74912,74930,74933,74943,74946,74952-74955,75015,75019,75032,75068,75076,75095,75098,75102,75129,75139,75230 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r74779 | michael.foord | 2009-09-13 11:13:36 -0500 (Sun, 13 Sep 2009) | 1 line

  Change to tutorial wording for reading text / binary files on Windows. Issue #6301.
........
  r74780 | michael.foord | 2009-09-13 11:40:02 -0500 (Sun, 13 Sep 2009) | 1 line

  Objects that compare equal automatically pass or fail assertAlmostEqual and assertNotAlmostEqual tests on unittest.TestCase. Issue 6567.
........
  r74781 | michael.foord | 2009-09-13 11:46:19 -0500 (Sun, 13 Sep 2009) | 1 line

  Note that sys._getframe is not guaranteed to exist in all implementations of Python, and a corresponding note in inspect.currentframe. Issue 6712.
........
  r74782 | michael.foord | 2009-09-13 12:07:46 -0500 (Sun, 13 Sep 2009) | 1 line

  Tutorial tweaks. Issue 6849.
........
  r74783 | michael.foord | 2009-09-13 12:28:35 -0500 (Sun, 13 Sep 2009) | 1 line

  unittest.TestLoader.loadTestsFromName honors the loader suiteClass attribute. Issue 6866.
........
  r74784 | georg.brandl | 2009-09-13 13:15:07 -0500 (Sun, 13 Sep 2009) | 1 line

  Typo fix.
........
  r74785 | michael.foord | 2009-09-13 14:07:03 -0500 (Sun, 13 Sep 2009) | 1 line

  Test discovery in unittest will only attempt to import modules that are importable; i.e. their names are valid Python identifiers. If an import fails during discovery this will be recorded as an error and test discovery will continue. Issue 6568.
........
  r74786 | michael.foord | 2009-09-13 14:08:18 -0500 (Sun, 13 Sep 2009) | 1 line

  Remove an extraneous space in unittest documentation.
........
  r74793 | georg.brandl | 2009-09-14 09:50:47 -0500 (Mon, 14 Sep 2009) | 1 line

  #6908: fix association of hashlib hash attributes.
........
  r74795 | benjamin.peterson | 2009-09-14 22:36:26 -0500 (Mon, 14 Sep 2009) | 1 line

  Py_SetPythonHome uses static storage #6913
........
  r74811 | georg.brandl | 2009-09-15 15:26:59 -0500 (Tue, 15 Sep 2009) | 1 line

  Add Armin Ronacher.
........
  r74860 | benjamin.peterson | 2009-09-16 21:46:54 -0500 (Wed, 16 Sep 2009) | 1 line

  kill bare except
........
  r74861 | benjamin.peterson | 2009-09-16 22:18:28 -0500 (Wed, 16 Sep 2009) | 1 line

  pep 8 defaults
........
  r74863 | benjamin.peterson | 2009-09-16 22:27:33 -0500 (Wed, 16 Sep 2009) | 1 line

  rationalize a bit
........
  r74876 | georg.brandl | 2009-09-17 11:15:53 -0500 (Thu, 17 Sep 2009) | 1 line

  #6932: remove paragraph that advises relying on __del__ being called.
........
  r74886 | benjamin.peterson | 2009-09-17 16:33:46 -0500 (Thu, 17 Sep 2009) | 1 line

  use macros
........
  r74896 | georg.brandl | 2009-09-18 02:22:41 -0500 (Fri, 18 Sep 2009) | 1 line

  #6936: for interactive use, quit() is just fine.
........
  r74901 | georg.brandl | 2009-09-18 04:14:52 -0500 (Fri, 18 Sep 2009) | 1 line

  #6905: use better exception messages in inspect when the argument is of the wrong type.
........
  r74903 | georg.brandl | 2009-09-18 04:18:27 -0500 (Fri, 18 Sep 2009) | 1 line

  #6938: "ident" is always a string, so use a format code which works.
........
  r74908 | georg.brandl | 2009-09-18 08:57:11 -0500 (Fri, 18 Sep 2009) | 1 line

  Use str.format() to fix beginner's mistake with %-style string formatting.
........
  r74912 | georg.brandl | 2009-09-18 11:19:56 -0500 (Fri, 18 Sep 2009) | 1 line

  Optimize optimization and fix method name in docstring.
........
  r74930 | georg.brandl | 2009-09-18 16:21:41 -0500 (Fri, 18 Sep 2009) | 1 line

  #6925: rewrite docs for locals() and vars() a bit.
........
  r74933 | georg.brandl | 2009-09-18 16:35:59 -0500 (Fri, 18 Sep 2009) | 1 line

  #6930: clarify description about byteorder handling in UTF decoder routines.
........
  r74943 | georg.brandl | 2009-09-19 02:35:07 -0500 (Sat, 19 Sep 2009) | 1 line

  #6944: the argument to PyArg_ParseTuple should be a tuple, otherwise a SystemError is set.  Also clean up another usage of PyArg_ParseTuple.
........
  r74946 | georg.brandl | 2009-09-19 03:43:16 -0500 (Sat, 19 Sep 2009) | 1 line

  Update bug tracker reference.
........
  r74952 | georg.brandl | 2009-09-19 05:42:34 -0500 (Sat, 19 Sep 2009) | 1 line

  #6946: fix duplicate index entries for datetime classes.
........
  r74953 | georg.brandl | 2009-09-19 07:04:16 -0500 (Sat, 19 Sep 2009) | 1 line

  Fix references to threading.enumerate().
........
  r74954 | georg.brandl | 2009-09-19 08:13:56 -0500 (Sat, 19 Sep 2009) | 1 line

  Add Doug.
........
  r74955 | georg.brandl | 2009-09-19 08:20:49 -0500 (Sat, 19 Sep 2009) | 1 line

  Add Mark Summerfield.
........
  r75015 | georg.brandl | 2009-09-22 05:55:08 -0500 (Tue, 22 Sep 2009) | 1 line

  Fix encoding name.
........
  r75019 | vinay.sajip | 2009-09-22 12:23:41 -0500 (Tue, 22 Sep 2009) | 1 line

  Fixed a typo, and added sections on optimization and using arbitrary objects as messages.
........
  r75032 | benjamin.peterson | 2009-09-22 17:15:28 -0500 (Tue, 22 Sep 2009) | 1 line

  fix typos/rephrase
........
  r75068 | benjamin.peterson | 2009-09-25 21:57:59 -0500 (Fri, 25 Sep 2009) | 1 line

  comment out ugly xxx
........
  r75076 | vinay.sajip | 2009-09-26 09:53:32 -0500 (Sat, 26 Sep 2009) | 1 line

  Tidied up name of parameter in StreamHandler
........
  r75095 | michael.foord | 2009-09-27 14:15:41 -0500 (Sun, 27 Sep 2009) | 1 line

  Test creation moved from TestProgram.parseArgs to TestProgram.createTests exclusively. Issue 6956.
........
  r75098 | michael.foord | 2009-09-27 15:08:23 -0500 (Sun, 27 Sep 2009) | 1 line

  Documentation improvement for load_tests protocol in unittest. Issue 6515.
........
  r75102 | skip.montanaro | 2009-09-27 21:12:27 -0500 (Sun, 27 Sep 2009) | 3 lines

  Patch from Thomas Barr so that csv.Sniffer will set doublequote property.
  Closes issue 6606.
........
  r75129 | vinay.sajip | 2009-09-29 02:08:54 -0500 (Tue, 29 Sep 2009) | 1 line

  Issue #7014: logging: Improved IronPython 2.6 compatibility.
........
  r75139 | raymond.hettinger | 2009-09-29 13:53:24 -0500 (Tue, 29 Sep 2009) | 3 lines

  Issue 7008: Better document str.title and show how to work around the apostrophe problem.
........
  r75230 | benjamin.peterson | 2009-10-04 08:38:38 -0500 (Sun, 04 Oct 2009) | 1 line

  test logging
........config manager str type vault source (#65023)

* config manager str type vault source

* Convert vault text to_text earlier and add testsbecome - stop using play context in more places (#62373)

* become - stop using play context in more places - ci_complete

* Fix up review pointspsrp - auth options (#54705)
standardize TLS connection properties (#54315)

* openstack: standardize tls params

* tower: tower_verify_ssl->validate_certs

* docker: use standard tls config params

- cacert_path -> ca_cert
- cert_path -> client_cert
- key_path -> client_key
- tls_verify -> validate_certs

* k8s: standardize tls connection params

- verify_ssl -> validate_certs
- ssl_ca_cert -> ca_cert
- cert_file -> client_cert
- key_file -> client_key

* ingate: verify_ssl -> validate_certs

* manageiq: standardize tls params

- verify_ssl -> validate_certs
- ca_bundle_path -> ca_cert

* mysql: standardize tls params

- ssl_ca -> ca_cert
- ssl_cert -> client_cert
- ssl_key -> client_key

* nios: ssl_verify -> validate_certs

* postgresql: ssl_rootcert -> ca_cert

* rabbitmq: standardize tls params

- cacert -> ca_cert
- cert -> client_cert
- key -> client_key

* rackspace: verify_ssl -> validate_certs

* vca: verify_certs -> validate_certs

* kubevirt_cdi_upload: upload_host_verify_ssl -> upload_host_validate_certs

* lxd: standardize tls params

- key_file -> client_key
- cert_file -> client_cert

* get_certificate: ca_certs -> ca_cert

* get_certificate.py: clarify one or more certs in a file

Co-Authored-By: jamescassell <code@james.cassell.me>

* zabbix: tls_issuer -> ca_cert

* bigip_device_auth_ldap: standardize tls params

- ssl_check_peer -> validate_certs
- ssl_client_cert -> client_cert
- ssl_client_key -> client_key
- ssl_ca_cert -> ca_cert

* vdirect: vdirect_validate_certs -> validate_certs

* mqtt: standardize tls params

- ca_certs -> ca_cert
- certfile -> client_cert
- keyfile -> client_key

* pulp_repo: standardize tls params

remove `importer_ssl` prefix

* rhn_register: sslcacert -> ca_cert

* yum_repository: standardize tls params

The fix for yum_repository is not straightforward since this module is
only a thin wrapper for the underlying commands and config.  In this
case, we add the new values as aliases, keeping the old as primary,
only due to the internal structure of the module.

Aliases added:
- sslcacert -> ca_cert
- sslclientcert -> client_cert
- sslclientkey -> client_key
- sslverify -> validate_certs

* gitlab_hook: enable_ssl_verification -> hook_validate_certs

* Adjust arguments for docker_swarm inventory plugin.

* foreman callback: standardize tls params

- ssl_cert -> client_cert
- ssl_key -> client_key

* grafana_annotations: validate_grafana_certs -> validate_certs

* nrdp callback: validate_nrdp_certs -> validate_certs

* kubectl connection: standardize tls params

- kubectl_cert_file -> client_cert
- kubectl_key_file -> client_key
- kubectl_ssl_ca_cert -> ca_cert
- kubectl_verify_ssl -> validate_certs

* oc connection: standardize tls params

- oc_cert_file -> client_cert
- oc_key_file -> client_key
- oc_ssl_ca_cert -> ca_cert
- oc_verify_ssl -> validate_certs

* psrp connection: cert_trust_path -> ca_cert

TODO: cert_validation -> validate_certs (multi-valued vs bool)

* k8s inventory: standardize tls params

- cert_file -> client_cert
- key_file -> client_key
- ca_cert -> ca_cert
- verify_ssl -> validate_certs

* openshift inventory: standardize tls params

- cert_file -> client_cert
- key_file -> client_key
- ca_cert -> ca_cert
- verify_ssl -> validate_certs

* tower inventory: verify_ssl -> validate_certs

* hashi_vault lookup: cacert -> ca_cert

* k8s lookup: standardize tls params

- cert_file -> client_cert
- key_file -> client_key
- ca_cert -> ca_cert
- verify_ssl -> validate_certs

* laps_passord lookup: cacert_file -> ca_cert

* changelog for TLS parameter standardizationPSRP: Add read_timeout connection parameters (#46850)

* PSRP: Add read_timeout connection parameters

* Changed debug() into warning()

* Only expose when read_timeout is not setPSRP: Add support for reconnection retries (#49772)

* PSRP: Add support for reconnection retries

This adds support for reconnection retries to overcome sudden Connection
Refused or other recoverable states. (Either because WinRM is (re)started,
or firewall changes make it briefly unavailable)

* Fixes from review commentspsrp: Added new Windows connection plugin (#41729)

* psrp: Added new Windows connection plugin

* Tweaks to connection options from reviewmany fixes by anonymous contributormods by Gregor Schmid -- very nice!bpo-40275: Use new test.support helper submodules in tests (GH-21219)
Only setup PGO tests when --pgo is enabled. (GH-14927)
bpo-36044: Reduce number of unit tests run for PGO build (GH-14702)

Reduce the number of unit tests run for the PGO generation task.  This
speeds up the task by a factor of about 15x.  Running the full unit test
suite is slow.  This change may result in a slightly less optimized build
since not as many code branches will be executed.  If you are willing to
wait for the much slower build, the old behavior can be restored using
'./configure [..] PROFILE_TASK="-m test --pgo-extended"'.  We make no
guarantees as to which PGO task set produces a faster build.  Users who
care should run their own relevant benchmarks as results can depend on
the environment, workload, and compiler tool chain.bpo-36915: regrtest always remove tempdir of worker processes (GH-13312)

When using multiprocessing (-jN option), worker processes now create
their temporary directory inside the temporary directory of the
main process. So the main process is able to remove temporary
directories of worker processes even if they crash or when they are
killed by regrtest on KeyboardInterrupt (CTRL+c).

Rework also how multiprocessing arguments are parsed in main.py.Issue #29035: Simplify a regex in libregrtest

regrtest: simplify the regex used to match test names for the --fromfile
command line option.regrtest --fromfile now accepts a list of filenamesregrtest: fix --fromfile feature

* Update code for the name regrtest output format.
* Enhance also test_regrtest test on --fromfileIssue #22806: Add ``python -m test --list-tests`` command to list tests.Issue #25220, libregrtest: Cleanup setup codeIssue #25220: truncate some long lines in libregrtest/*.pyIssue #25220: Split the huge main() function of libregrtest.main into a class
with attributes and methods.

The --threshold command line option is now ignored if the gc module is missing.

* Convert main() variables to Regrtest attributes, document some attributes
* Convert accumulate_result() function to a method
* Create setup_python() function and setup_regrtest() method.
* Import gc at top level
* Move resource.setrlimit() and the code to make the module paths absolute into
  the new setup_python() function. So this code is no more executed when the
  module is imported, only when main() is executed. We have a better control on
  when the setup is done.
* Move textwrap import from printlist() to the top level.
* Some other minor cleanup.- Issue #719888: Updated tokenize to use a bytes API. generate_tokens has been
  renamed tokenize and now works with bytes rather than strings. A new
  detect_encoding function has been added for determining source file encoding
  according to PEP-0263. Token sequences returned by tokenize always start
  with an ENCODING token which specifies the encoding used to decode the file.
  This token is used to encode the output of untokenize back to bytes.

Credit goes to Michael "I'm-going-to-name-my-first-child-unittest" Foord from Resolver Systems for this work.Merged revisions 55007-55179 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/branches/p3yk

........
  r55077 | guido.van.rossum | 2007-05-02 11:54:37 -0700 (Wed, 02 May 2007) | 2 lines

  Use the new print syntax, at least.
........
  r55142 | fred.drake | 2007-05-04 21:27:30 -0700 (Fri, 04 May 2007) | 1 line

  remove old cruftiness
........
  r55143 | fred.drake | 2007-05-04 21:52:16 -0700 (Fri, 04 May 2007) | 1 line

  make this work with the new Python
........
  r55162 | neal.norwitz | 2007-05-06 22:29:18 -0700 (Sun, 06 May 2007) | 1 line

  Get asdl code gen working with Python 2.3.  Should continue to work with 3.0
........
  r55164 | neal.norwitz | 2007-05-07 00:00:38 -0700 (Mon, 07 May 2007) | 1 line

  Verify checkins to p3yk (sic) branch go to 3000 list.
........
  r55166 | neal.norwitz | 2007-05-07 00:12:35 -0700 (Mon, 07 May 2007) | 1 line

  Fix this test so it runs again by importing warnings_test properly.
........
  r55167 | neal.norwitz | 2007-05-07 01:03:22 -0700 (Mon, 07 May 2007) | 8 lines

  So long xrange.  range() now supports values that are outside
  -sys.maxint to sys.maxint.  floats raise a TypeError.

  This has been sitting for a long time.  It probably has some problems and
  needs cleanup.  Objects/rangeobject.c now uses 4-space indents since
  it is almost completely new.
........
  r55171 | guido.van.rossum | 2007-05-07 10:21:26 -0700 (Mon, 07 May 2007) | 4 lines

  Fix two tests that were previously depending on significant spaces
  at the end of a line (and before that on Python 2.x print behavior
  that has no exact equivalent in 3.0).
........SF bug #497839:  reindent chokes on empty first lines.
Reindenter.run():  copy over initial all-whitespace lines (if any, and
after normalizing to remove trailing blanks and tabs).
Bugfix candidate.Cleanup for Python 3.9 and pycodestyle compat.Mass nuke deprecated items that are easily removed. ci_complete (#44320)
Verify that the role specification is using a comma before warning

One way to trigger this is having this snippet in meta/main.yml:

dependencies:
  - role: foo
    when: "use_foo == True"

It shouldn't show a warning but since we assume that 'foo' is the old
style format, it always show one. So we should verify the
style before calling role_spec_parse.Enable most unittests on python3 (just some vault unittests and a logging one left) (#17240)

Make some python3 fixes to make the unittests pass:

* galaxy imports
* dictionary iteration in role requirements
* swap_stdout helper for unittests
* Normalize to text string in a facts.py functionnow galaxy correctly detects empty requirements file
also allow for 'scm' and 'src' not to be populated in requirements entriesMore ansible-galaxy fixes for the old spec file formatCleaning up some ansible-galaxy stuffMerge pull request #12636 from bcoca/galaxy

GalaxyMNT Replaces numpy alias with builtin typse (#17687)

* MNT Replaces numpy alias with builtin typse

* STY Lint error[MRG] CLN Remove the use of assert_raises in utils/ (#16337)

* CLN use pytest raises ctxt manager for class weights & estimators [skip ci]

* CLN use pytest raises ctxt manager for multiclass test

* CLN use pytest warns in estimator checks test

* CLN use pytest raises ctxt manager for random test

* CLN use pytest raises ctxt manager for sparsefuncs test

* CLN use pytest raises ctxt manager for testing utils tests

* CLN use pytest raises ctxt manager for utils tests

* CLN use pytest raises ctxt manager for validation tests

* revert test_estimator_check.py to upstream masterMNT deprecate some more utils in estimator_checks.py (#15029)

* deprecated notanarray

* deprecated is_public_parameter

* deprecated pairwise_estimator_convert_X

* deprecated checking_parameters

* pep8

* use decorator for classMNT towards removing assert_equal, etc (#14222)
[MRG] MNT Clean some deprecation stuff for 0.21 (#13443)
MNT Replaced all occurrences of assert_true and assert_false with assert (#12588)
TST autoreplace assert_true(...==...) with plain assert (#12547)
Rework warning in check_array when silent convert string to float (#11577)
[MRG+1] Fix #10229: check_array should fail if array has strings (#10495)

* Add deprecation warning to check_array for flexible array w/ dtype=numeric[MRG+1] MAINT dissociate nan and inf in check_array (#10459)
MAINT Remove redundancy in #9552 (#9573)
[MRG + 2] improve check_array error message (#9126)
[MRG+1] Housekeeping Deprecations for v0.19 (#7927)

* remove stuff to be removed 0.19

* more changes

* remove classes from 0.19 whatsnew

* remove _LearntSelectorMixin

* remove ProjectedGradientNMF, load_lwf_*

* minor fixes

* remove more copy from logistic regression path

* remove lda, qda from __init__.__all__

* remove pg solver in nmf from tests etc

* remove class_weight="auto" from tests

* doctest change for decision_function_shape="ovr"

* remove transfrom from tree test, minor fixes to tree tests

* some fixes in the tests

* undo changes in functions which still allow 1d input...

* also allow 1d in scale

* more test fixes...

* last test fixes in forest and tree

* svm default value change doctest failures

* pep8

* remove more class_weight="auto" stuff

* minor cosmetics in docstrings deprecated / removed behavior.

* say that store_covariance has been moved to __init__ in discriminant_analysisMAINT deprecate 1d input arrays for all estimators

Passing 1D arrays to check_array, without setting `ensure_2d` to false now
raises a deprecation warning before reshaping it. This will later throw an
error.

All Scaler classes also throw warnings when 1D arrays are passed.

All unit tests/doctests are modified to ensure that no 1D arrays are passed,
except in explicit 1D array tests where the warnings have been silenced.

Additional tests are also included which check for different 1D array cases.

2D array tests with one samples and one features are also added and where
they failed, `check_array` call has been modified to give a more useful error
messageMerge pull request #3447 from amueller/input_validation_b

[WIP] remove check_arrays stuff and old input validationMerge pull request #3443 from amueller/input_validation_refactoring

[MRG] Input validation refactoringbpo-35755: Don't say "to mimick Unix which command behavior" (GH-12861)
bpo-35755: shutil.which() uses os.confstr("CS_PATH") (GH-12858)

shutil.which() and distutils.spawn.find_executable() now use
os.confstr("CS_PATH") if available instead of os.defpath, if the PATH
environment variable is not set.

Don't use os.confstr("CS_PATH") nor os.defpath if the PATH
environment variable is set to an empty string to mimick Unix 'which'
command behavior.

Changes:

* find_executable() now starts by checking for the executable in the
  current working directly case. Add an explicit
  "if not path: return None".
* Add tests for PATH='' (empty string), PATH=':' and for PATHEXT.bpo-18283: Add support for bytes to shutil.which (GH-11818)
Backout a1a05e2724dd: shutil.which(bytes) is a new feature and my patch does not work on WindowsIssue #18283: shutil.which() now supports bytes argument, not only text argument.- Issue #17012: shutil.which() no longer fallbacks to the PATH environment
  variable if empty path argument is specified.  Patch by Serhiy Storchaka.Issue #16957: shutil.which() no longer searches a bare file name in the
current directory on Unix and no longer searches a relative file path with
a directory part in PATH directories.  Patch by Thomas Kluyver.Issue #16993: shutil.which() now preserves the case of the path and extension
on Windows.small refactor and PEP8 line width/docstringFix #15148. Capitalize PATH, hopefully leading to less confusionFix #15148. Make the shutil.which docstring more thoroughfile was the old arg name from an earlier patch. command matches the implementationIssue #15148: Fixed typos in shutil.which() docstringMergeRemove unapproved invites (#15016)
feat(api): Add organization request to join endpoint (#14780)
feat(ui): Add select all to teams (#10292)
fix(invitations) Make invitations expire after 30 days (#10213)

Invitations currently last forever. Instead they should expire after 30
days so that we don't leave the door open for too long. A user can have
their invite expiry reset by having their token regenerated.

Expired invitations can no longer be resent. Instead they must 
be regenerated to be resent.feat(analytics): Add logging for more core events (#9667)

- Adds analytics.record() calls for a few more events using signals
- Converts some existing signal.send() calls to signal.send_robust()
- Some events have the concept of an optional user_id and a required default_user_id. This is to support tools (like Amplitude) where every event must be attributed to a user. For events done via API keys or which otherwise don't have a user, we set user_id to None and default_user_id to the owner of the org. This may result in an extra DB query but in the events we're using it for this will be very rare and not on any critical paths.
- Refactors the add_organization() method (which has a lot of callsites) to take the user as well, since we need the user_id.fix(security) Do not allow a user to demote her superiors. (#7885)

A role assignment can only happen if the destination role *and* the
source user are in the allowed_roles listfeat(teams): allow editing team membership on own member details page (#7793)

* allow editing team membership on own member details page

* fix queryfeat(api): Dont allow member updates to own membership (#6782)

* feat(api): Dont allow member updates to own membership

* fix testfeat(api): Add "invite link" and "teams" to members details (#6445)

* Adds invite link for `member:admin`
* Adds list of teams member belongs to

* Allow regenerate member invite code

* `PUT` for member details now updates role/team, returns updated member
object as a responsefix(sso): Correct broken send now links
feat(workflow): React multi-member invite  (#6400)

this is an un-revert of #6054, where the main review happened.
(revert happened in revert of #6384 because of getsentry dependencies on deleted code)

needs to merge in tandem with getsentry/getsentry#1456

the only line changed here besides the revert commit is exporting invitemember:
+ InviteMember: require('./views/inviteMember/inviteMember').default in index.jsRevert "feat(workflow): React multi-member invite (#6054)" (#6384)

This reverts commit 6bb41c54914fec90b6fda876e46acd256b23b69d.feat(workflow): React multi-member invite (#6054)

* new invite member flow in react, supports comma separated multi-invite 

* organization_member_index and organization_member_details endpoint improvementsFeature signals (#5020)

* adding feature adoption signals

* adding a few more signals

* finishing up signals

* fixing matt's comments

* fix for percy diff

* adding line to changes, as required by getsentry-bot

* capturing project information in signal

* moving constant def to module level

* removing unnecessary orm calls in the signals

* adding saved search signalMerge branch 'master' into redesign/react

Conflicts:
	src/sentry/api/endpoints/organization_details.py
	src/sentry/api/endpoints/organization_teams.py
	src/sentry/static/sentry/less/sentry.less
	src/sentry/templates/sentry/organization-audit-log.html
	src/sentry/templates/sentry/projects/notifications.htmlMerge branch 'master' into redesign/react

Conflicts:
	src/sentry/api/serializers/models/organization_member.py
	src/sentry/static/sentry/scripts/app.js
	src/sentry/templates/sentry/bases/organization.html
	src/sentry/templates/sentry/projects/manage.html[sixplay] add support for rtlmost.hu(#21405)[sixplay] add missing parenthesis[sixplay] try to extract non drm protected manifests(closes #20849)[sixplay] handle videos with empty assets(closes #20016)[sixplay] fix format extraction[6play] Add support for play.rtl.hr
[6play] use geo verfication headers[6play] add support for rtlplay.be and extract hd usp formats[6play] Extract subtitles (closes #15541)[6play] do no modify asset urls with a token(#15248)[sixplay] use raw string for regex[sixplay] improve extraction

- skip drm protected formats
- extract more and better formats
- skip duplicate asset urls[6play] Fix extraction (closes #12011)use mimetype2ext to determine manifest ext in multiple extractors[sixplay] Rename preference key to quality in format dict[sixplay] Add new extractor(closes #2183)bpo-38319: Fix shutil._fastcopy_sendfile(): set sendfile() max block size (GH-16491)
Issue #26384: Merge from 3.6fix issue #17552: add socket.sendfile() method allowing to send a file over a socket by using high-performance os.sendfile() on UNIX. Patch by Giampaolo Rodola'·Make netbsd virtualization facts more specific (#70467)

Change:
Our handling of NetBSD virtualization facts led to facts that were just
plain incorrect. One example is reporting Xen even when the system is
running on something completely different (like KVM).

As stated by the reporter of #69352, NetBSD has a better sysctl setting
to use for this information, machdep.hypervisor.

This PR does the following:

- Try to use machdep.hypervisor sysctl value if the other sysctl values
  we check don't end up with enough information to be useful
- Only look for /dev/xencons and assume Xen if nothing else works
  (Really this should probably return 'unknown' since the file exists on
  non-Xen systems and is not very useful).
- Add a few more patterns (Xen matches and also Hyper-V) to
  VirtualSysctlDetectionMixin#detect_virt_product.

This change is slightly breaking:
- If the first two attempts at using sysctl worked before,
  (machdep.dmi.system-product and machdep.dmi.system-vendor), they will
  continue to work.
- For cases when those values didn't work, previously the existence of
  /dev/xencons was checked, and if found, we reported 'xen' (even on
  non-Xen systems when the file existed). After this PR, we try the
  machdep.hypervisor sysctl key before still falling back to
  /dev/xencons. This means that in some cases, we might go from
  (wrongly) saying "xen" to giving a more accurate value such as "kvm"
  or "Hyper-V".

Test Plan:
- Tested with local NetBSD VM and got 'kvm' instead of 'xen' back.

Tickets:
- Fixes #69352

Signed-off-by: Rick Elrod <rick@elrod.me>Address FIXME's in sysctl.py (#69175)

* Address FIXME's in sysctl.py

* Added changelog fragment

* Updated check

* Update conditions

* if not instead of is None

* Restore and delete FIXME commentsfacts: detect FreeBSD jails guest (#62857)

* facts: detect FreeBSD jails

* PEP8 fixfacts: detect FreeBSD KVM guests (#50030)

Fixes: #49158Refs #30591 -- Fixed introspection of check and unique column constraints on MariaDB.

Unnamed unique and check columns constraints have the same name as
a column. Ensure uniqueness by using custom names.

Thanks Adnan Umer for the report.Refs #11964 -- Made constraint support check respect required_db_features.

This will notably silence the warnings issued when running the test
suite on MySQL.Fixed #30593 -- Added support for check constraints on MariaDB 10.2+.Fixed #30183 -- Added introspection of inline SQLite constraints.Merged revisions 83852-83853,83857,84042,84216,84274-84276,84375,85388,85478,85506-85508 via svnmerge from
svn+ssh://pythondev@svn.python.org/sandbox/trunk/2to3/lib2to3

........
  r83852 | benjamin.peterson | 2010-08-08 15:45:44 -0500 (Sun, 08 Aug 2010) | 1 line

  wrap with parens
........
  r83853 | benjamin.peterson | 2010-08-08 15:46:31 -0500 (Sun, 08 Aug 2010) | 1 line

  use parens
........
  r83857 | benjamin.peterson | 2010-08-08 15:59:49 -0500 (Sun, 08 Aug 2010) | 1 line

  things which use touch_import should be pre order
........
  r84042 | george.boutsioukis | 2010-08-14 16:10:19 -0500 (Sat, 14 Aug 2010) | 2 lines

  This revision incorporates into the 2to3 tool the new, faster, tree matching algorithm developed during a GSOC project. The algorithm resides in the two added modules, btm_matcher and btm_utils. New code has been added to drive the new matching process in refactor.py and a few minor changes were made in other modules. A BM_compatible flag(False by default) has been added in fixer_base and it is set to True in most of the current fixers.
........
  r84216 | benjamin.peterson | 2010-08-19 16:44:05 -0500 (Thu, 19 Aug 2010) | 1 line

  allow star_expr in testlist_gexp
........
  r84274 | benjamin.peterson | 2010-08-22 18:40:46 -0500 (Sun, 22 Aug 2010) | 1 line

  wrap long line
........
  r84275 | benjamin.peterson | 2010-08-22 18:42:22 -0500 (Sun, 22 Aug 2010) | 1 line

  cleanup
........
  r84276 | benjamin.peterson | 2010-08-22 18:51:01 -0500 (Sun, 22 Aug 2010) | 1 line

  when there's a None value and a traceback, don't call type with it #9661
........
  r84375 | george.boutsioukis | 2010-08-31 08:38:53 -0500 (Tue, 31 Aug 2010) | 3 lines

  Idiomatic code changes & stylistic issues fixed in the BottomMatcher module. Thanks to Benjamin Peterson for taking the time to review the code.
........
  r85388 | benjamin.peterson | 2010-10-12 17:27:44 -0500 (Tue, 12 Oct 2010) | 1 line

  fix urllib fixer with multiple as imports on a line #10069
........
  r85478 | benjamin.peterson | 2010-10-14 08:09:56 -0500 (Thu, 14 Oct 2010) | 1 line

  stop abusing docstrings
........
  r85506 | benjamin.peterson | 2010-10-14 17:45:19 -0500 (Thu, 14 Oct 2010) | 1 line

  kill sibling import
........
  r85507 | benjamin.peterson | 2010-10-14 17:54:15 -0500 (Thu, 14 Oct 2010) | 1 line

  remove trailing whitespace
........
  r85508 | benjamin.peterson | 2010-10-14 17:55:28 -0500 (Thu, 14 Oct 2010) | 1 line

  typo
........Merged revisions 68197 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

................
  r68197 | benjamin.peterson | 2009-01-03 10:34:02 -0600 (Sat, 03 Jan 2009) | 55 lines

  Merged revisions 67900-67901,67919,67928,67984,67991-67993,68106-68108,68110 via svnmerge from
  svn+ssh://pythondev@svn.python.org/sandbox/trunk/2to3/lib2to3

  ........
    r67900 | benjamin.peterson | 2008-12-22 14:02:45 -0600 (Mon, 22 Dec 2008) | 4 lines

    fix_execfile: wrap the open(fn).read() call in compile(), so the filename is preserved

    also add unittests for the fixer
  ........
    r67901 | benjamin.peterson | 2008-12-22 14:09:55 -0600 (Mon, 22 Dec 2008) | 1 line

    remove unused import
  ........
    r67919 | benjamin.peterson | 2008-12-23 13:12:22 -0600 (Tue, 23 Dec 2008) | 1 line

    copy permission bits from the backup to the original
  ........
    r67928 | benjamin.peterson | 2008-12-26 20:49:30 -0600 (Fri, 26 Dec 2008) | 1 line

    don't be so idiot about multiple local imports in fix_import; still won't handle absolute and local imports on the same line
  ........
    r67984 | benjamin.peterson | 2008-12-28 09:55:16 -0600 (Sun, 28 Dec 2008) | 1 line

    don't need loop
  ........
    r67991 | benjamin.peterson | 2008-12-28 14:30:26 -0600 (Sun, 28 Dec 2008) | 1 line

    actually call finish_tree()
  ........
    r67992 | benjamin.peterson | 2008-12-28 14:34:47 -0600 (Sun, 28 Dec 2008) | 1 line

    remove useless test
  ........
    r67993 | benjamin.peterson | 2008-12-28 15:04:32 -0600 (Sun, 28 Dec 2008) | 1 line

    update pyk3's test grammar
  ........
    r68106 | benjamin.peterson | 2008-12-31 11:53:58 -0600 (Wed, 31 Dec 2008) | 1 line

    #2734 don't convert every instance of long (eg if it's an attribute)
  ........
    r68107 | benjamin.peterson | 2008-12-31 11:55:10 -0600 (Wed, 31 Dec 2008) | 1 line

    add another test
  ........
    r68108 | benjamin.peterson | 2008-12-31 12:00:12 -0600 (Wed, 31 Dec 2008) | 1 line

    don't change long even if it's the only argument name
  ........
    r68110 | benjamin.peterson | 2008-12-31 14:13:26 -0600 (Wed, 31 Dec 2008) | 1 line

    remove unused import
  ........
................Merged revisions 67428 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

................
  r67428 | benjamin.peterson | 2008-11-28 16:12:14 -0600 (Fri, 28 Nov 2008) | 57 lines

  Merged revisions 67384,67386-67387,67389-67390,67392,67399-67400,67403-67405,67426 via svnmerge from
  svn+ssh://pythondev@svn.python.org/sandbox/trunk/2to3/lib2to3

  ........
    r67384 | benjamin.peterson | 2008-11-25 16:13:31 -0600 (Tue, 25 Nov 2008) | 4 lines

    don't duplicate calls to start_tree()

    RefactoringTool.pre_order values now holds a list of the fixers while pre_order_mapping holds the dict.
  ........
    r67386 | benjamin.peterson | 2008-11-25 16:44:52 -0600 (Tue, 25 Nov 2008) | 1 line

    #4423 fix_imports was still replacing usage of a module if attributes were being used
  ........
    r67387 | benjamin.peterson | 2008-11-25 16:47:54 -0600 (Tue, 25 Nov 2008) | 1 line

    fix broken test
  ........
    r67389 | benjamin.peterson | 2008-11-25 17:13:17 -0600 (Tue, 25 Nov 2008) | 1 line

    remove compatibility code; we only cater to 2.5+
  ........
    r67390 | benjamin.peterson | 2008-11-25 22:03:36 -0600 (Tue, 25 Nov 2008) | 1 line

    fix #3994; the usage of changed imports was fixed in nested cases
  ........
    r67392 | benjamin.peterson | 2008-11-26 11:11:40 -0600 (Wed, 26 Nov 2008) | 1 line

    simpilfy and comment fix_imports
  ........
    r67399 | benjamin.peterson | 2008-11-26 11:47:03 -0600 (Wed, 26 Nov 2008) | 1 line

    remove more compatibility code
  ........
    r67400 | benjamin.peterson | 2008-11-26 12:07:41 -0600 (Wed, 26 Nov 2008) | 1 line

    set svn:ignore
  ........
    r67403 | benjamin.peterson | 2008-11-26 13:11:11 -0600 (Wed, 26 Nov 2008) | 1 line

    wrap import
  ........
    r67404 | benjamin.peterson | 2008-11-26 13:29:49 -0600 (Wed, 26 Nov 2008) | 1 line

    build the fix_imports pattern in compile_pattern, so MAPPING can be changed and reflected in the pattern
  ........
    r67405 | benjamin.peterson | 2008-11-26 14:01:24 -0600 (Wed, 26 Nov 2008) | 1 line

    stop ugly messages about runtime errors being from printed
  ........
    r67426 | benjamin.peterson | 2008-11-28 16:01:40 -0600 (Fri, 28 Nov 2008) | 5 lines

    don't replace a module name if it is in the middle of a attribute lookup

    This fix also stops module names from being replaced if they are not in an attribute lookup.
  ........
................Merged revisions 62425-62429,62434-62436,62441,62444,62446-62448,62450-62455,62463,62465-62466,62469,62474,62476-62478,62480,62485,62492,62497-62498,62500,62507,62513-62514,62516,62521,62531,62535,62545-62546,62548-62551,62553-62559,62569,62574,62577,62593,62595,62604-62606,62608,62616,62626-62627,62636,62638,62644-62645,62647-62648,62651-62653,62656,62661,62663,62680,62686-62687,62696,62699-62703,62711 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

................
  r62425 | andrew.kuchling | 2008-04-21 03:45:57 +0200 (Mon, 21 Apr 2008) | 1 line

  Comment typo
................
  r62426 | mark.dickinson | 2008-04-21 03:55:50 +0200 (Mon, 21 Apr 2008) | 2 lines

  Silence 'r may be used uninitialized' compiler warning.
................
  r62427 | andrew.kuchling | 2008-04-21 04:08:00 +0200 (Mon, 21 Apr 2008) | 1 line

  Markup fix
................
  r62428 | andrew.kuchling | 2008-04-21 04:08:13 +0200 (Mon, 21 Apr 2008) | 1 line

  Wording changes
................
  r62429 | andrew.kuchling | 2008-04-21 04:14:24 +0200 (Mon, 21 Apr 2008) | 1 line

  Add various items
................
  r62434 | thomas.heller | 2008-04-21 15:46:55 +0200 (Mon, 21 Apr 2008) | 1 line

  Fix typo.
................
  r62435 | david.goodger | 2008-04-21 16:40:22 +0200 (Mon, 21 Apr 2008) | 1 line

  corrections ("reStructuredText" is one word)
................
  r62436 | david.goodger | 2008-04-21 16:43:33 +0200 (Mon, 21 Apr 2008) | 1 line

  capitalization
................
  r62441 | gregory.p.smith | 2008-04-21 19:46:40 +0200 (Mon, 21 Apr 2008) | 2 lines

  explicitly flush after the ... since there wasn't a newline
................
  r62444 | jeroen.ruigrok | 2008-04-21 22:15:39 +0200 (Mon, 21 Apr 2008) | 2 lines

  Windows x64 also falls under VER_PLATFORM_WIN32_NT.
................
  r62446 | gregory.p.smith | 2008-04-21 23:31:08 +0200 (Mon, 21 Apr 2008) | 3 lines

  If sys.stdin is not a tty, fall back to default_getpass after printing
  a warning instead of failing with a termios.error.
................
  r62447 | mark.dickinson | 2008-04-22 00:32:24 +0200 (Tue, 22 Apr 2008) | 8 lines

  test_math and test_cmath are failing on the FreeBSD 6.2 trunk buildbot,
  apparently because tanh(-0.) loses the sign of zero on that platform.
  If true, this is a bug in FreeBSD.

  Added a configure test to verify this.  I still need to figure out
  how best to deal with this failure.
................
  r62448 | amaury.forgeotdarc | 2008-04-22 00:35:30 +0200 (Tue, 22 Apr 2008) | 7 lines

  Issue 2665: On Windows, sys.stderr does not contain a valid file when running without a console.
  It seems to work, but will fail at the first flush.

  This causes IDLE to crash when too many warnings are printed.

  Will backport.
................
  r62450 | benjamin.peterson | 2008-04-22 00:57:00 +0200 (Tue, 22 Apr 2008) | 2 lines

  Fix Sphinx warnings
................
  r62451 | mark.dickinson | 2008-04-22 02:54:27 +0200 (Tue, 22 Apr 2008) | 3 lines

  Make configure test for tanh(-0.) == -0. committed in r62447 actually
  work.  (The test wasn't properly linked with libm.  Sigh.)
................
  r62452 | benjamin.peterson | 2008-04-22 04:16:03 +0200 (Tue, 22 Apr 2008) | 2 lines

  Various io doc updates
................
  r62453 | neal.norwitz | 2008-04-22 07:07:47 +0200 (Tue, 22 Apr 2008) | 1 line

  Add Thomas Lee
................
  r62454 | gregory.p.smith | 2008-04-22 10:08:41 +0200 (Tue, 22 Apr 2008) | 8 lines

  Major improvements:
  * Default to using /dev/tty for the password prompt and input before
    falling back to sys.stdin and sys.stderr.
  * Use sys.stderr instead of sys.stdout.
  * print the 'password may be echoed' warning to stream used to display
    the prompt rather than always sys.stderr.
  * warn() with GetPassWarning when input may be echoed.
................
  r62455 | gregory.p.smith | 2008-04-22 10:11:33 +0200 (Tue, 22 Apr 2008) | 2 lines

  update the getpass entry
................
  r62463 | amaury.forgeotdarc | 2008-04-22 23:14:41 +0200 (Tue, 22 Apr 2008) | 5 lines

  Issue #2670: urllib2.build_opener() failed when two handlers
  derive the same default base class.

  Will backport.
................
  r62465 | skip.montanaro | 2008-04-23 00:45:09 +0200 (Wed, 23 Apr 2008) | 3 lines

  Factor in documentation changes from issue 1753732.
................
  r62466 | gregory.p.smith | 2008-04-23 03:06:42 +0200 (Wed, 23 Apr 2008) | 2 lines

  syntax fixup
................
  r62469 | benjamin.peterson | 2008-04-23 22:38:06 +0200 (Wed, 23 Apr 2008) | 2 lines

  #2673 Fix example typo in optparse docs
................
  r62474 | martin.v.loewis | 2008-04-24 11:50:50 +0200 (Thu, 24 Apr 2008) | 2 lines

  Add Guilherme Polo.
................
  r62476 | martin.v.loewis | 2008-04-24 15:16:36 +0200 (Thu, 24 Apr 2008) | 3 lines

  Remove Py_Refcnt, Py_Type, Py_Size, as they were added only
  for backwards compatibility, yet 2.5 did not have them at all.
................
  r62477 | martin.v.loewis | 2008-04-24 15:17:24 +0200 (Thu, 24 Apr 2008) | 2 lines

  Fix typo.
................
  r62478 | martin.v.loewis | 2008-04-24 15:18:03 +0200 (Thu, 24 Apr 2008) | 2 lines

  Add Jesus Cea.
................
  r62480 | amaury.forgeotdarc | 2008-04-24 20:07:05 +0200 (Thu, 24 Apr 2008) | 4 lines

  Issue2681: the literal 0o8 was wrongly accepted, and evaluated as float(0.0).
  This happened only when 8 is the first digit.
  Credits go to Lukas Meuser.
................
  r62485 | amaury.forgeotdarc | 2008-04-24 22:10:26 +0200 (Thu, 24 Apr 2008) | 5 lines

  Disable gc when running test_trace, or we may record the __del__ of collected objects.

  See http://mail.python.org/pipermail/python-checkins/2008-April/068633.html
  the extra events perfectly match several calls to socket._fileobject.__del__()
................
  r62492 | neal.norwitz | 2008-04-25 05:40:17 +0200 (Fri, 25 Apr 2008) | 1 line

  Fix typo (now -> no)
................
  r62497 | armin.rigo | 2008-04-25 11:35:18 +0200 (Fri, 25 Apr 2008) | 2 lines

  A new crasher.
................
  r62498 | thomas.heller | 2008-04-25 17:44:16 +0200 (Fri, 25 Apr 2008) | 1 line

  Add from_buffer and from_buffer_copy class methods to ctypes types.
................
  r62500 | mark.dickinson | 2008-04-25 18:59:09 +0200 (Fri, 25 Apr 2008) | 3 lines

  Issue 2635: fix bug in the fix_sentence_endings option to textwrap.fill.
................
  r62507 | benjamin.peterson | 2008-04-25 23:43:56 +0200 (Fri, 25 Apr 2008) | 2 lines

  Allow test_import to work when it is invoked directly
................
  r62513 | georg.brandl | 2008-04-26 20:31:07 +0200 (Sat, 26 Apr 2008) | 2 lines

  #2691: document PyLong (s)size_t APIs, patch by Alexander Belopolsky.
................
  r62514 | georg.brandl | 2008-04-26 20:32:17 +0200 (Sat, 26 Apr 2008) | 2 lines

  Add missing return type to dealloc.
................
  r62516 | alexandre.vassalotti | 2008-04-27 02:52:24 +0200 (Sun, 27 Apr 2008) | 2 lines

  Fixed URL of PEP 205 in weakref's module docstring.
................
  r62521 | georg.brandl | 2008-04-27 11:39:59 +0200 (Sun, 27 Apr 2008) | 2 lines

  #2677: add note that not all functions may accept keyword args.
................
  r62531 | georg.brandl | 2008-04-27 19:38:55 +0200 (Sun, 27 Apr 2008) | 2 lines

  Use correct XHTML tags.
................
  r62535 | benjamin.peterson | 2008-04-27 20:14:39 +0200 (Sun, 27 Apr 2008) | 2 lines

  #2700 Document PyNumber_ToBase
................
  r62545 | skip.montanaro | 2008-04-27 22:53:57 +0200 (Sun, 27 Apr 2008) | 1 line

  minor wording changes, rewrap a few lines
................
  r62546 | kurt.kaiser | 2008-04-27 23:07:41 +0200 (Sun, 27 Apr 2008) | 7 lines

  Home / Control-A toggles between left margin and end of leading white
  space.  Patch 1196903 Jeff Shute.

  M    idlelib/PyShell.py
  M    idlelib/EditorWindow.py
  M    idlelib/NEWS.txt
................
  r62548 | kurt.kaiser | 2008-04-27 23:38:05 +0200 (Sun, 27 Apr 2008) | 2 lines

  Improved AutoCompleteWindow logic.  Patch 2062 Tal Einat.
................
  r62549 | kurt.kaiser | 2008-04-27 23:52:19 +0200 (Sun, 27 Apr 2008) | 4 lines

  Autocompletion of filenames now support alternate separators, e.g. the
  '/' char on Windows.  Patch 2061 Tal Einat.
................
  r62550 | skip.montanaro | 2008-04-28 00:49:56 +0200 (Mon, 28 Apr 2008) | 6 lines

  A few small changes:
  * The only exception we should catch when trying to import cStringIO is an
    ImportError.
  * Delete the function signatures embedded in the mk*temp docstrings.
  * The tempdir global variable was initialized twice.
................
  r62551 | skip.montanaro | 2008-04-28 00:52:02 +0200 (Mon, 28 Apr 2008) | 4 lines

  Wrap some long paragraphs and include the default values for optional
  function parameters.
................
  r62553 | skip.montanaro | 2008-04-28 04:57:23 +0200 (Mon, 28 Apr 2008) | 7 lines

  Minor cleanups:
  * Avoid creating unused local variables where we can.  Where we can't prefix
    the unused variables with '_'.
  * Avoid shadowing builtins where it won't change the external interface of a
    function.
  * Use None as default path arg to readmodule and readmodule_ex.
................
  r62554 | skip.montanaro | 2008-04-28 04:59:45 +0200 (Mon, 28 Apr 2008) | 6 lines

  Correct documentation to match implementation: "Class" instead of
  "class_descriptor", "Function" instead of "function_descriptor".  Note
  default path value for readmodule*.  Wrap some long paragraphs.  Don't
  mention 'inpackage' which isn't part of the public API.
................
  r62555 | brett.cannon | 2008-04-28 05:23:50 +0200 (Mon, 28 Apr 2008) | 5 lines

  Fix a bug introduced by the warnings rewrite where tracebacks were being
  improperly indented.

  Closes issue #2699.
................
  r62556 | skip.montanaro | 2008-04-28 05:25:37 +0200 (Mon, 28 Apr 2008) | 2 lines

  Wrap some long lines.
................
  r62557 | skip.montanaro | 2008-04-28 05:27:53 +0200 (Mon, 28 Apr 2008) | 6 lines

  Get rid of _test(), _main(), _debug() and _check().  Tests are no longer
  needed (better set available in Lib/test/test_robotparser.py).  Clean up a
  few PEP 8 nits (compound statements on a single line, whitespace around
  operators).
................
  r62558 | brett.cannon | 2008-04-28 06:50:06 +0200 (Mon, 28 Apr 2008) | 3 lines

  Rename the test_traceback_print() function to traceback_print() to prevent
  test_capi from automatically calling the function.
................
  r62559 | georg.brandl | 2008-04-28 07:16:30 +0200 (Mon, 28 Apr 2008) | 2 lines

  Fix markup.
................
  r62569 | amaury.forgeotdarc | 2008-04-28 23:07:06 +0200 (Mon, 28 Apr 2008) | 5 lines

  test_sundry performs minimal tests (a simple import...) on modules that are not tested otherwise.

  Some of them now have tests and can be removed.
  Only 70 to go...
................
  r62574 | andrew.kuchling | 2008-04-29 04:03:54 +0200 (Tue, 29 Apr 2008) | 1 line

  Strip down SSL docs; I'm not managing to get test programs working, so I'll just give a minimal description
................
  r62577 | martin.v.loewis | 2008-04-29 08:10:53 +0200 (Tue, 29 Apr 2008) | 2 lines

  Add Rodrigo and Heiko.
................
  r62593 | nick.coghlan | 2008-04-30 16:23:36 +0200 (Wed, 30 Apr 2008) | 1 line

  Update command line usage documentation to reflect 2.6 changes (also includes some minor cleanups). Addresses TODO list issue 2258
................
  r62595 | andrew.kuchling | 2008-04-30 18:19:55 +0200 (Wed, 30 Apr 2008) | 1 line

  Typo fix
................
  r62604 | benjamin.peterson | 2008-04-30 23:03:58 +0200 (Wed, 30 Apr 2008) | 2 lines

  make test_support's captured_output a bit more robust when exceptions happen
................
  r62605 | georg.brandl | 2008-04-30 23:08:42 +0200 (Wed, 30 Apr 2008) | 2 lines

  #1748: use functools.wraps instead of rolling own metadata update.
................
  r62606 | benjamin.peterson | 2008-04-30 23:25:55 +0200 (Wed, 30 Apr 2008) | 2 lines

  Remove some from __future__ import with_statements
................
  r62608 | benjamin.peterson | 2008-05-01 00:03:36 +0200 (Thu, 01 May 2008) | 2 lines

  Fix typo in whatsnew
................
  r62616 | georg.brandl | 2008-05-01 20:24:32 +0200 (Thu, 01 May 2008) | 2 lines

  Fix synopsis.
................
  r62626 | brett.cannon | 2008-05-02 04:25:09 +0200 (Fri, 02 May 2008) | 6 lines

  Fix a backwards-compatibility mistake where a new optional argument for
  warnings.showwarning() was being used. This broke pre-existing replacements for
  the function since they didn't support the extra argument.

  Closes issue 2705.
................
  r62627 | gregory.p.smith | 2008-05-02 09:26:52 +0200 (Fri, 02 May 2008) | 20 lines

  This should fix issue2632.  A long description of the two competing
  problems is in the bug report (one old, one recently introduced trying
  to fix the old one).  In short:

  buffer data during socket._fileobject.read() and readlines() within a
  cStringIO object instead of a [] of str()s returned from the recv()
  call.

  This prevents excessive memory use due to the size parameter being
  passed to recv() being grossly larger than the actual size of the data
  returned *and* prevents excessive cpu usage due to looping in python
  calling recv() with a very tiny size value if min() is used as the
  previous memory-use bug "fix" did.

  It also documents what the socket._fileobject._rbufsize member is
  actually used for.

  This is a candidate for back porting to 2.5.
................
  r62636 | mark.hammond | 2008-05-02 14:48:15 +0200 (Fri, 02 May 2008) | 2 lines

  #2581: Vista UAC/elevation support for bdist_wininst
................
  r62638 | facundo.batista | 2008-05-02 19:39:00 +0200 (Fri, 02 May 2008) | 3 lines


  Fixed some test structures. Thanks Mark Dickinson.
................
  r62644 | ronald.oussoren | 2008-05-02 21:45:11 +0200 (Fri, 02 May 2008) | 7 lines

  Fix for issue #2573: Can't change the framework name on OS X builds

  This introduces a new configure option: --with-framework-name=NAME
  (defaulting to 'Python'). This allows you to install several copies
  of the Python framework with different names (such as a normal build
  and a debug build).
................
  r62645 | ronald.oussoren | 2008-05-02 21:58:56 +0200 (Fri, 02 May 2008) | 2 lines

  Finish fix for issue2573, previous patch was incomplete.
................
  r62647 | martin.v.loewis | 2008-05-02 23:30:20 +0200 (Fri, 02 May 2008) | 13 lines

  Merged revisions 62263-62646 via svnmerge from
  svn+ssh://pythondev@svn.python.org/sandbox/trunk/2to3/lib2to3

  ........
    r62470 | david.wolever | 2008-04-24 02:11:07 +0200 (Do, 24 Apr 2008) | 3 lines

    Fixed up and applied the patch for #2431 -- speeding up 2to3 with a lookup table.
  ........
    r62646 | martin.v.loewis | 2008-05-02 23:29:27 +0200 (Fr, 02 Mai 2008) | 2 lines

    Fix whitespace.
  ........
................
  r62648 | ronald.oussoren | 2008-05-02 23:42:35 +0200 (Fri, 02 May 2008) | 4 lines

  Fix for #1905: PythonLauncher not working correctly on OSX 10.5/Leopard

  This fixes both Python Launchar and the terminalcommand module.
................
  r62651 | ronald.oussoren | 2008-05-02 23:54:56 +0200 (Fri, 02 May 2008) | 2 lines

  Fix for issue #2520 (cannot import macerrors)
................
  r62652 | benjamin.peterson | 2008-05-03 00:12:58 +0200 (Sat, 03 May 2008) | 2 lines

  capitalization nit for reStructuredText
................
  r62653 | brett.cannon | 2008-05-03 03:02:41 +0200 (Sat, 03 May 2008) | 2 lines

  Fix some indentation errors.
................
  r62656 | brett.cannon | 2008-05-03 05:19:39 +0200 (Sat, 03 May 2008) | 6 lines

  Fix the C implementation of 'warnings' to infer the filename of the module that
  raised an exception properly when __file__ is not set, __name__ == '__main__',
  and sys.argv[0] is a false value.

  Closes issue2743.
................
  r62661 | amaury.forgeotdarc | 2008-05-03 14:21:13 +0200 (Sat, 03 May 2008) | 8 lines

  In test_io, StatefulIncrementalDecoderTest was not part of the test suite.
  And of course, the test failed:
  a bytearray was used without reason in io.TextIOWrapper.tell().

  The difference is that iterating over bytes (i.e. str in python2.6) returns 1-char bytes,
  whereas bytearrays yield integers.
  This code should still work with python3.0
................
  r62663 | benjamin.peterson | 2008-05-03 17:56:42 +0200 (Sat, 03 May 2008) | 2 lines

  The compiling struct is now passed around to all AST helpers (see issue 2720)
................
  r62680 | benjamin.peterson | 2008-05-03 23:35:18 +0200 (Sat, 03 May 2008) | 2 lines

  Moved testing of builtin types out of test_builtin and into type specific modules
................
  r62686 | mark.dickinson | 2008-05-04 04:25:46 +0200 (Sun, 04 May 2008) | 4 lines

  Make sure that Context traps and flags dictionaries have values 0 and 1
  (as documented) rather than True and False.
................
  r62687 | benjamin.peterson | 2008-05-04 05:05:49 +0200 (Sun, 04 May 2008) | 2 lines

  Fix typo in whatsnew
................
  r62696 | georg.brandl | 2008-05-04 11:15:04 +0200 (Sun, 04 May 2008) | 2 lines

  #2752: wrong meaning of '' for socket host.
................
  r62699 | christian.heimes | 2008-05-04 13:50:53 +0200 (Sun, 04 May 2008) | 1 line

  Added note that Python requires at least Win2k SP4
................
  r62700 | gerhard.haering | 2008-05-04 14:59:57 +0200 (Sun, 04 May 2008) | 3 lines

  SQLite requires 64-bit integers in order to build. So the whole HAVE_LONG_LONG
  #ifdefing was useless.
................
  r62701 | gerhard.haering | 2008-05-04 15:15:12 +0200 (Sun, 04 May 2008) | 3 lines

  Applied sqliterow-richcmp.diff patch from Thomas Heller in Issue2152. The
  sqlite3.Row type is now correctly hashable.
................
  r62702 | gerhard.haering | 2008-05-04 15:42:44 +0200 (Sun, 04 May 2008) | 5 lines

  Implemented feature request 2157: Converter names are cut off at '('
  characters. This avoids the common case of something like 'NUMBER(10)' not
  being parsed as 'NUMBER', like expected. Also corrected the docs about
  converter names being case-sensitive. They aren't any longer.
................
  r62703 | georg.brandl | 2008-05-04 17:45:05 +0200 (Sun, 04 May 2008) | 2 lines

  #2757: Remove spare newline.
................
  r62711 | benjamin.peterson | 2008-05-04 21:10:02 +0200 (Sun, 04 May 2008) | 2 lines

  Fix typo in bugs.rst
................Merged revisions 61602 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

................
  r61602 | martin.v.loewis | 2008-03-19 00:22:42 -0500 (Mi, 19 Mär 2008) | 17 lines

  Merged revisions 61598-61599,61601 via svnmerge from
  svn+ssh://pythondev@svn.python.org/sandbox/trunk/2to3/lib2to3

  ........
    r61598 | david.wolever | 2008-03-18 23:58:33 -0500 (Di, 18 Mär 2008) | 1 line

    Added fixer for zip, and refactored a bit of code in the process.  Closing #2171.
  ........
    r61599 | david.wolever | 2008-03-19 00:04:26 -0500 (Mi, 19 Mär 2008) | 3 lines

    Removed a bunch of duplicate code -- it's in util now.
  ........
    r61601 | martin.v.loewis | 2008-03-19 00:21:12 -0500 (Mi, 19 Mär 2008) | 2 lines

    Fix whitespace.
  ........
................Allow hostvars delegation (#70331)

* ensure hostvars are available on delegation
* also inventory_hostname must point to current host and not delegated one
* fix get_connection since it was still mixing original host vars and delegated ones
* also return connection vars for delegation and non delegation alike
* add test to ensure we have expected usage when directly assigning for non delegated hostfix delegation vars usage (debug still shows inventory_hostname) (#69244)

* fix delegation vars usage and reporting

 - just pass delegated host vars + task vars to plugins
   and avoid poluting with original host vars
 - updated testsunsafe wrapping should only happen for with_ loops (#64401)

* unsafe wrapping should only happen for with_ lookups. Fixes #64379. Addresses #64169

* edit porting guide entry

* typo in changelog fragment

* typo

Co-Authored-By: Sandra McCann <samccann@redhat.com>

* punctuation

Co-Authored-By: Sandra McCann <samccann@redhat.com>Use correct delegate_to hostnames in loops (#59659)

Fixes #59650Revert "Speed up VariableManager by preserving Templar state. (#45572)" (#59280)

This reverts commit 6069d09b9d7193a1896dfc2816e0e51833a53e6b.

Fixes #57351Templar: encapsulate _available_variables (#55435)

Ensure variables are reset between iterations
Add new AnsibleTemplateError to more easily catch templating issues (#50563)

* Add new AnsibleTemplateError to more easily catch templating issues. Fixes #50154

* Add changelog fragmentFix return statement where we short circuit _get_delegated_vars (#48102)
Don't use the task for a cache, return a special cache var (#47243)

* Don't use task to cache loop results, use hostvars. Fixes #47207

* Avoid a race condition, supply _ansible_loop_cache through get_vars directly

* Add tests

* Add changelog fragment

* Remove unnecessary copy

* Remove unnecessary host from _get_delegated_vars signatureSpeed up VariableManager by preserving Templar state. (#45572)

Maintain one Templar for the lifetime of VariableManager, calling
set_available_variables() prior to each use, enabling _get_filter()'s
cache to function correctly.

It does not seem possible for concurrent calls into one (non-copied)
VariableManager instance, and so it need not be reentrant. If that
became a requirement, serializing its or Templar's entry points would be
fine, as it's so CPU-heavy other threads will only fight with it for the
GIL anyway.

Reduces _get_filters() runtime 91%, get_vars() runtime 19%, function
call count 16%, overall runtime 10%.

Tested aginst dummy load comprised of the 12 disabled steps of
debops.auth with an inventory of 80 hosts, which stresses variable
processing and task setup. Before:

         7447296 function calls (7253994 primitive calls) in 32.611 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000   32.762   32.762 ansible-playbook:3(<module>)
        1    0.007    0.007   31.733   31.733 ansible-playbook:21(<module>)
    ...
 1371/971    0.671    0.000   21.332    0.022 manager.py:154(get_vars)
    ...
     3044    0.315    0.000    5.166    0.002 __init__.py:295(_get_filters)

After:

         6252978 function calls (6059638 primitive calls) in 29.055 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000   29.218   29.218 ansible-playbook:3(<module>)
        1    0.007    0.007   28.159   28.159 ansible-playbook:21(<module>)
    ...
 1371/971    0.675    0.000   17.211    0.018 manager.py:154(get_vars)
    ...
     3044    0.028    0.000    0.441    0.000 __init__.py:295(_get_filters)Ensure loop with delegate_to can short circuit the same as without delegate_to. Fixes #45189 (#45231)
ensure if we get a non-Task object in _get_delegated_vars, we return early (#44934)
Ensure we only cache the loop when the task had a loop (#44901)

* Further restrict caching of loop when the task actually had a loop. Fixes #44874

* Extend tests for loop cachingdelegate_to: accept only string for delegation host (#43473)

delegate_to parameter in task only accepts string,
this fix will error out if other datatypes are provided instead of
string.

Signed-off-by: Abhijeet Kasurde <akasurde@redhat.com>Only cache task.loop when delegated_host was templated. Fixes #43016 #43449 (#43451)
Cache items when task.loop/with_items is evaluated to set delegate_to vars (#41969)

* If we evaluate task.loop/with_items when calculating delegate_to vars, cache the items. Fixes #28231

* Add comments about caching loop items

* Add test for delegate_to+loop+random

* Be more careful about where we update task.loopfix item var in delegation (#32986)

* fix item var in delegation

* fixed task ref

* in case no loopupdate delegated var fetching for new 'loop' (#31588)

* update delegated var fetching for new 'loop'

* mixed loop/termsmove from with_<lookup>: to loop:

- old functionality is still available direct lookup use, the following are equivalent

  with_nested: [[1,2,3], ['a','b','c']]

  loop: "{{lookup('nested', [1,2,3], ['a','b','c'])}}"

- avoid squashing with 'loop:'
- fixed test to use new intenal attributes
- removed most of 'lookup docs' as these now reside in the plugins01110000 01100101 01110000 00111000 00100000

01101100 01101001 01101110 01110100 01101001 01101110 01100111 00100000 01110011 01110101 01100011 01101011 01110011properly track delegated host in loops

ansible_host can be pulled from inventory and not match inventory_hostname,
this can "loose" vars to a new host named by ansible_host vs the delegated host
fixes #25770[watchbox] Fix extraction (closes #17107)[watchbox] Fix extraction (closes #16904)[watchbox] Fix extraction (closes #16356)[watchbox] Add extractor (#13739)[chaturbate] Fix extraction (closes #23010, closes #23012)[chaturbate] Extend _VALID_URL (#22309)
[chaturbate] Use geo verification headers[chaturbate] Fix extraction (closes #12665)[chaturbate] Improve (closes #11797)[chaturbate] Fix extractionRemove _sort_formats from _extract_*_formats methods

Now _sort_formats should be called explicitly.
_sort_formats has been added to all the necessary places in code.

Closes #8051[chaturbate] Improve error extraction (Closes #7989)[chaturbate] Improve and capture error messagechaturbate streams[steam] Bypass mature content check (closes #16113)[steam] fix extraction(fixes #14067)[steam] Add support for steamcommunity.com (Fixes #2757)[steam] Simplify[steam] ModernizeMove Steam IE into its own filechore(API): Add error messages to user notification fine tuning endpoints errors (#14110)

fix(api) Don't 500 on invalid data (#13168)

When a non-integer id is provided we should not 500. This is
a user-input error scenario.

Fixes SENTRY-ANZfix(api): Fixes User Weekly Reports fine tuning (#9302)

By default all org reports are enabled, when attempting to go from default -> "on" it errors because org id does not exist in user option.

Fixes SENTRY-6P4feat(api): Add endpoint for user notification fine tuning (#7240)
CLN: address FIXME/TODO/XXX comments (#33858)
CLN: 29547 replace old string formatting 4 (#31963)
Fixed test util imports in pandas/tests/io (#29299)

xref: https://github.com/pandas-dev/pandas/issues/29272TST/CLN: replace %s formatting syntax with .format in tests (#27324)
CLN: Dead version checking code post minimum version bump (#27063)

* Remove dateutil version check tests

* Remove more dead version checking code

* Flake8 and fix bs4 comparison

* Use import_optional_dependency again

* Remove unused import

* Change bs4 import test to check for ImportError and add whatsnew

* Some linting

* noqa necessary importsSplit test_excel into submodule (#26755)
ref: Deprecate legacy event methods (#15786)

event.error() -> event.title
event.get_tags() -> event.tags#21795: advertise 8BITMIME if decode_data is False.

Patch by Milan Oberkirch, with a few updates.  This changeset also
tweaks the smtpd and whatsnew docs for smtpd into what should be
the final form for the 3.5 release.merge 3.4 (#23873)#21725: Add RFC 6531 (SMTPUTF8) support to smtpd.

Patch by Milan Oberkirch, developed as part of his 2014 GSOC project.

Note that this also fixes a bug in mock_socket ('getpeername' was returning a
simple string instead of the tuple required for IPvX protocols), a bug in
DebugServer with respect to handling binary data (should have been fixed when
decode_data was introduced, but wasn't found until this patch was written),
and a long-standing bug in DebugServer (it was printing an extra blank line at
the end of the displayed message text).Merged upstream changes.#14269: smtpd now conforms to the RFC and requires HELO before MAIL.

This is a backward incompatible change, but since it is an RFC conformance bug
and all real mail servers that I know of do conform to the RFC in this regard,
I believe it is an acceptable change for a feature release.

Patch by Jason Killen.Implementation for issue 4184

Changes the previously private attributes to make them public, increasing the potential for extending the library in user code. Backward-compatible and documented.Merged revisions 58221-58741 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r58221 | georg.brandl | 2007-09-20 10:57:59 -0700 (Thu, 20 Sep 2007) | 2 lines

  Patch #1181: add os.environ.clear() method.
........
  r58225 | sean.reifschneider | 2007-09-20 23:33:28 -0700 (Thu, 20 Sep 2007) | 3 lines

  Issue1704287: "make install" fails unless you do "make" first.  Make
     oldsharedmods and sharedmods in "libinstall".
........
  r58232 | guido.van.rossum | 2007-09-22 13:18:03 -0700 (Sat, 22 Sep 2007) | 4 lines

  Patch # 188 by Philip Jenvey.
  Make tell() mark CRLF as a newline.
  With unit test.
........
  r58242 | georg.brandl | 2007-09-24 10:55:47 -0700 (Mon, 24 Sep 2007) | 2 lines

  Fix typo and double word.
........
  r58245 | georg.brandl | 2007-09-24 10:59:28 -0700 (Mon, 24 Sep 2007) | 2 lines

  #1196: document default radix for int().
........
  r58247 | georg.brandl | 2007-09-24 11:08:24 -0700 (Mon, 24 Sep 2007) | 2 lines

  #1177: accept 2xx responses for https too, not only http.
........
  r58249 | andrew.kuchling | 2007-09-24 16:45:51 -0700 (Mon, 24 Sep 2007) | 1 line

  Remove stray odd character; grammar fix
........
  r58250 | andrew.kuchling | 2007-09-24 16:46:28 -0700 (Mon, 24 Sep 2007) | 1 line

  Typo fix
........
  r58251 | andrew.kuchling | 2007-09-24 17:09:42 -0700 (Mon, 24 Sep 2007) | 1 line

  Add various items
........
  r58268 | vinay.sajip | 2007-09-26 22:34:45 -0700 (Wed, 26 Sep 2007) | 1 line

  Change to flush and close logic to fix #1760556.
........
  r58269 | vinay.sajip | 2007-09-26 22:38:51 -0700 (Wed, 26 Sep 2007) | 1 line

  Change to basicConfig() to fix #1021.
........
  r58270 | georg.brandl | 2007-09-26 23:26:58 -0700 (Wed, 26 Sep 2007) | 2 lines

  #1208: document match object's boolean value.
........
  r58271 | vinay.sajip | 2007-09-26 23:56:13 -0700 (Wed, 26 Sep 2007) | 1 line

  Minor date change.
........
  r58272 | vinay.sajip | 2007-09-27 00:35:10 -0700 (Thu, 27 Sep 2007) | 1 line

  Change to LogRecord.__init__() to fix #1206. Note that archaic use of type(x) == types.DictType is because of keeping 1.5.2 compatibility. While this is much less relevant these days, there probably needs to be a separate commit for removing all archaic constructs at the same time.
........
  r58288 | brett.cannon | 2007-09-30 12:45:10 -0700 (Sun, 30 Sep 2007) | 9 lines

  tuple.__repr__ did not consider a reference loop as it is not possible from
  Python code; but it is possible from C.  object.__str__ had the issue of not
  expecting a type to doing something within it's tp_str implementation that
  could trigger an infinite recursion, but it could in C code..  Both found
  thanks to BaseException and how it handles its repr.

  Closes issue #1686386.  Thanks to Thomas Herve for taking an initial stab at
  coming up with a solution.
........
  r58289 | brett.cannon | 2007-09-30 13:37:19 -0700 (Sun, 30 Sep 2007) | 3 lines

  Fix error introduced by r58288; if a tuple is length 0 return its repr and
  don't worry about any self-referring tuples.
........
  r58294 | facundo.batista | 2007-10-02 10:01:24 -0700 (Tue, 02 Oct 2007) | 11 lines


  Made the various is_* operations return booleans.  This was discussed
  with Cawlishaw by mail, and he basically confirmed that to these is_*
  operations, there's no need to return Decimal(0) and Decimal(1) if
  the language supports the False and True booleans.

  Also added a few tests for the these functions in extra.decTest, since
  they are mostly untested (apart from the doctests).

  Thanks Mark Dickinson
........
  r58295 | facundo.batista | 2007-10-02 11:21:18 -0700 (Tue, 02 Oct 2007) | 4 lines


  Added a class to store the digits of log(10), so that they can be made
  available when necessary without recomputing.  Thanks Mark Dickinson
........
  r58299 | mark.summerfield | 2007-10-03 01:53:21 -0700 (Wed, 03 Oct 2007) | 4 lines

  Added note in footnote about string comparisons about
  unicodedata.normalize().
........
  r58304 | raymond.hettinger | 2007-10-03 14:18:11 -0700 (Wed, 03 Oct 2007) | 1 line

  enumerate() is no longer bounded to using sequences shorter than LONG_MAX.  The possibility of overflow was sending some newsgroup posters into a tizzy.
........
  r58305 | raymond.hettinger | 2007-10-03 17:20:27 -0700 (Wed, 03 Oct 2007) | 1 line

  itertools.count() no longer limited to sys.maxint.
........
  r58306 | kurt.kaiser | 2007-10-03 18:49:54 -0700 (Wed, 03 Oct 2007) | 3 lines

  Assume that the user knows when he wants to end the line; don't insert
  something he didn't select or complete.
........
  r58307 | kurt.kaiser | 2007-10-03 19:07:50 -0700 (Wed, 03 Oct 2007) | 2 lines

  Remove unused theme that was causing a fault in p3k.
........
  r58308 | kurt.kaiser | 2007-10-03 19:09:17 -0700 (Wed, 03 Oct 2007) | 2 lines

  Clean up EditorWindow close.
........
  r58309 | kurt.kaiser | 2007-10-03 19:53:07 -0700 (Wed, 03 Oct 2007) | 7 lines

  textView cleanup. Patch 1718043 Tal Einat.

  M    idlelib/EditorWindow.py
  M    idlelib/aboutDialog.py
  M    idlelib/textView.py
  M    idlelib/NEWS.txt
........
  r58310 | kurt.kaiser | 2007-10-03 20:11:12 -0700 (Wed, 03 Oct 2007) | 3 lines

  configDialog cleanup. Patch 1730217 Tal Einat.
........
  r58311 | neal.norwitz | 2007-10-03 23:00:48 -0700 (Wed, 03 Oct 2007) | 4 lines

  Coverity #151: Remove deadcode.

  All this code already exists above starting at line 653.
........
  r58325 | fred.drake | 2007-10-04 19:46:12 -0700 (Thu, 04 Oct 2007) | 1 line

  wrap lines to <80 characters before fixing errors
........
  r58326 | raymond.hettinger | 2007-10-04 19:47:07 -0700 (Thu, 04 Oct 2007) | 6 lines

  Add __asdict__() to NamedTuple and refine the docs.
  Add maxlen support to deque() and fixup docs.
  Partially fix __reduce__().  The None as a third arg was no longer supported.
  Still needs work on __reduce__() to handle recursive inputs.
........
  r58327 | fred.drake | 2007-10-04 19:48:32 -0700 (Thu, 04 Oct 2007) | 3 lines

  move descriptions of ac_(in|out)_buffer_size to the right place
  http://bugs.python.org/issue1053
........
  r58329 | neal.norwitz | 2007-10-04 20:39:17 -0700 (Thu, 04 Oct 2007) | 3 lines

  dict could be NULL, so we need to XDECREF.
  Fix a compiler warning about passing a PyTypeObject* instead of PyObject*.
........
  r58330 | neal.norwitz | 2007-10-04 20:41:19 -0700 (Thu, 04 Oct 2007) | 2 lines

  Fix Coverity #158: Check the correct variable.
........
  r58332 | neal.norwitz | 2007-10-04 22:01:38 -0700 (Thu, 04 Oct 2007) | 7 lines

  Fix Coverity #159.

  This code was broken if save() returned a negative number since i contained
  a boolean value and then we compared i < 0 which should never be true.

  Will backport (assuming it's necessary)
........
  r58334 | neal.norwitz | 2007-10-04 22:29:17 -0700 (Thu, 04 Oct 2007) | 1 line

  Add a note about fixing some more warnings found by Coverity.
........
  r58338 | raymond.hettinger | 2007-10-05 12:07:31 -0700 (Fri, 05 Oct 2007) | 1 line

  Restore BEGIN/END THREADS macros which were squashed in the previous checkin
........
  r58343 | gregory.p.smith | 2007-10-06 00:48:10 -0700 (Sat, 06 Oct 2007) | 3 lines

  Stab in the dark attempt to fix the test_bsddb3 failure on sparc and S-390
  ubuntu buildbots.
........
  r58344 | gregory.p.smith | 2007-10-06 00:51:59 -0700 (Sat, 06 Oct 2007) | 2 lines

  Allows BerkeleyDB 4.6.x >= 4.6.21 for the bsddb module.
........
  r58348 | gregory.p.smith | 2007-10-06 08:47:37 -0700 (Sat, 06 Oct 2007) | 3 lines

  Use the host the author likely meant in the first place.  pop.gmail.com is
  reliable.  gmail.org is someones personal domain.
........
  r58351 | neal.norwitz | 2007-10-06 12:16:28 -0700 (Sat, 06 Oct 2007) | 3 lines

  Ensure that this test will pass even if another test left an unwritable TESTFN.
  Also use the safe unlink in test_support instead of rolling our own here.
........
  r58368 | georg.brandl | 2007-10-08 00:50:24 -0700 (Mon, 08 Oct 2007) | 3 lines

  #1123: fix the docs for the str.split(None, sep) case.
  Also expand a few other methods' docs, which had more info in the deprecated string module docs.
........
  r58369 | georg.brandl | 2007-10-08 01:06:05 -0700 (Mon, 08 Oct 2007) | 2 lines

  Update docstring of sched, also remove an unused assignment.
........
  r58370 | raymond.hettinger | 2007-10-08 02:14:28 -0700 (Mon, 08 Oct 2007) | 5 lines

  Add comments to NamedTuple code.
  Let the field spec be either a string or a non-string sequence (suggested by Martin Blais with use cases).
  Improve the error message in the case of a SyntaxError (caused by a duplicate field name).
........
  r58371 | raymond.hettinger | 2007-10-08 02:56:29 -0700 (Mon, 08 Oct 2007) | 1 line

  Missed a line in the docs
........
  r58372 | raymond.hettinger | 2007-10-08 03:11:51 -0700 (Mon, 08 Oct 2007) | 1 line

  Better variable names
........
  r58376 | georg.brandl | 2007-10-08 07:12:47 -0700 (Mon, 08 Oct 2007) | 3 lines

  #1199: docs for tp_as_{number,sequence,mapping}, by Amaury Forgeot d'Arc.
  No need to merge this to py3k!
........
  r58380 | raymond.hettinger | 2007-10-08 14:26:58 -0700 (Mon, 08 Oct 2007) | 1 line

  Eliminate camelcase function name
........
  r58381 | andrew.kuchling | 2007-10-08 16:23:03 -0700 (Mon, 08 Oct 2007) | 1 line

  Eliminate camelcase function name
........
  r58382 | raymond.hettinger | 2007-10-08 18:36:23 -0700 (Mon, 08 Oct 2007) | 1 line

  Make the error messages more specific
........
  r58384 | gregory.p.smith | 2007-10-08 23:02:21 -0700 (Mon, 08 Oct 2007) | 10 lines

  Splits Modules/_bsddb.c up into bsddb.h and _bsddb.c and adds a C API
  object available as bsddb.db.api.  This is based on the patch submitted
  by Duncan Grisby here:
    http://sourceforge.net/tracker/index.php?func=detail&aid=1551895&group_id=13900&atid=313900
  See this thread for additional info:
    http://sourceforge.net/mailarchive/forum.php?thread_name=E1GAVDK-0002rk-Iw%40apasphere.com&forum_name=pybsddb-users

  It also cleans up the code a little by removing some ifdef/endifs for
  python prior to 2.1 and for unsupported Berkeley DB <= 3.2.
........
  r58385 | gregory.p.smith | 2007-10-08 23:50:43 -0700 (Mon, 08 Oct 2007) | 5 lines

  Fix a double free when positioning a database cursor to a non-existant
  string key (and probably a few other situations with string keys).
  This was reported with a patch as pybsddb sourceforge bug 1708868 by
  jjjhhhlll at gmail.
........
  r58386 | gregory.p.smith | 2007-10-09 00:19:11 -0700 (Tue, 09 Oct 2007) | 3 lines

  Use the highest cPickle protocol in bsddb.dbshelve.  This comes from
  sourceforge pybsddb patch 1551443 by w_barnes.
........
  r58394 | gregory.p.smith | 2007-10-09 11:26:02 -0700 (Tue, 09 Oct 2007) | 2 lines

  remove another sleepycat reference
........
  r58396 | kurt.kaiser | 2007-10-09 12:31:30 -0700 (Tue, 09 Oct 2007) | 3 lines

  Allow interrupt only when executing user code in subprocess
  Patch 1225 Tal Einat modified from IDLE-Spoon.
........
  r58399 | brett.cannon | 2007-10-09 17:07:50 -0700 (Tue, 09 Oct 2007) | 5 lines

  Remove file-level typedefs that were inconsistently used throughout the file.
  Just move over to the public API names.

  Closes issue1238.
........
  r58401 | raymond.hettinger | 2007-10-09 17:26:46 -0700 (Tue, 09 Oct 2007) | 1 line

  Accept Jim Jewett's api suggestion to use None instead of -1 to indicate unbounded deques.
........
  r58403 | kurt.kaiser | 2007-10-09 17:55:40 -0700 (Tue, 09 Oct 2007) | 2 lines

  Allow cursor color change w/o restart. Patch 1725576 Tal Einat.
........
  r58404 | kurt.kaiser | 2007-10-09 18:06:47 -0700 (Tue, 09 Oct 2007) | 2 lines

  show paste if > 80 columns.  Patch 1659326 Tal Einat.
........
  r58415 | thomas.heller | 2007-10-11 12:51:32 -0700 (Thu, 11 Oct 2007) | 5 lines

  On OS X, use os.uname() instead of gestalt.sysv(...) to get the
  operating system version.  This allows to use ctypes when Python
  was configured with --disable-toolbox-glue.
........
  r58419 | neal.norwitz | 2007-10-11 20:01:01 -0700 (Thu, 11 Oct 2007) | 1 line

  Get rid of warning about not being able to create an existing directory.
........
  r58420 | neal.norwitz | 2007-10-11 20:01:30 -0700 (Thu, 11 Oct 2007) | 1 line

  Get rid of warnings on a bunch of platforms by using a proper prototype.
........
  r58421 | neal.norwitz | 2007-10-11 20:01:54 -0700 (Thu, 11 Oct 2007) | 4 lines

  Get rid of compiler warning about retval being used (returned) without
  being initialized.  (gcc warning and Coverity 202)
........
  r58422 | neal.norwitz | 2007-10-11 20:03:23 -0700 (Thu, 11 Oct 2007) | 1 line

  Fix Coverity 168:  Close the file before returning (exiting).
........
  r58423 | neal.norwitz | 2007-10-11 20:04:18 -0700 (Thu, 11 Oct 2007) | 4 lines

  Fix Coverity 180:  Don't overallocate.  We don't need structs, but pointers.
  Also fix a memory leak.
........
  r58424 | neal.norwitz | 2007-10-11 20:05:19 -0700 (Thu, 11 Oct 2007) | 5 lines

  Fix Coverity 185-186:  If the passed in FILE is NULL, uninitialized memory
  would be accessed.

  Will backport.
........
  r58425 | neal.norwitz | 2007-10-11 20:52:34 -0700 (Thu, 11 Oct 2007) | 1 line

  Get this module to compile with bsddb versions prior to 4.3
........
  r58430 | martin.v.loewis | 2007-10-12 01:56:52 -0700 (Fri, 12 Oct 2007) | 3 lines

  Bug #1216: Restore support for Visual Studio 2002.
  Will backport to 2.5.
........
  r58433 | raymond.hettinger | 2007-10-12 10:53:11 -0700 (Fri, 12 Oct 2007) | 1 line

  Fix test of count.__repr__() to ignore the 'L' if the count is a long
........
  r58434 | gregory.p.smith | 2007-10-12 11:44:06 -0700 (Fri, 12 Oct 2007) | 4 lines

  Fixes http://bugs.python.org/issue1233 - bsddb.dbshelve.DBShelf.append
  was useless due to inverted logic.  Also adds a test case for RECNO dbs
  to test_dbshelve.
........
  r58445 | georg.brandl | 2007-10-13 06:20:03 -0700 (Sat, 13 Oct 2007) | 2 lines

  Fix email example.
........
  r58450 | gregory.p.smith | 2007-10-13 16:02:05 -0700 (Sat, 13 Oct 2007) | 2 lines

  Fix an uncollectable reference leak in bsddb.db.DBShelf.append
........
  r58453 | neal.norwitz | 2007-10-13 17:18:40 -0700 (Sat, 13 Oct 2007) | 8 lines

  Let the O/S supply a port if none of the default ports can be used.
  This should make the tests more robust at the expense of allowing
  tests to be sloppier by not requiring them to cleanup after themselves.
  (It will legitamitely help when running two test suites simultaneously
  or if another process is already using one of the predefined ports.)

  Also simplifies (slightLy) the exception handling elsewhere.
........
  r58459 | neal.norwitz | 2007-10-14 11:30:21 -0700 (Sun, 14 Oct 2007) | 2 lines

  Don't raise a string exception, they don't work anymore.
........
  r58460 | neal.norwitz | 2007-10-14 11:40:37 -0700 (Sun, 14 Oct 2007) | 1 line

  Use unittest for assertions
........
  r58468 | armin.rigo | 2007-10-15 00:48:35 -0700 (Mon, 15 Oct 2007) | 2 lines

  test_bigbits was not testing what it seemed to.
........
  r58471 | guido.van.rossum | 2007-10-15 08:54:11 -0700 (Mon, 15 Oct 2007) | 3 lines

  Change a PyErr_Print() into a PyErr_Clear(),
  per discussion in issue 1031213.
........
  r58500 | raymond.hettinger | 2007-10-16 12:18:30 -0700 (Tue, 16 Oct 2007) | 1 line

  Improve error messages
........
  r58506 | raymond.hettinger | 2007-10-16 14:28:32 -0700 (Tue, 16 Oct 2007) | 1 line

  More docs, error messages, and tests
........
  r58507 | andrew.kuchling | 2007-10-16 15:58:03 -0700 (Tue, 16 Oct 2007) | 1 line

  Add items
........
  r58508 | brett.cannon | 2007-10-16 16:24:06 -0700 (Tue, 16 Oct 2007) | 3 lines

  Remove ``:const:`` notation on None in parameter list.  Since the markup is not
  rendered for parameters it just showed up as ``:const:`None` `` in the output.
........
  r58509 | brett.cannon | 2007-10-16 16:26:45 -0700 (Tue, 16 Oct 2007) | 3 lines

  Re-order some functions whose parameters differ between PyObject and const char
  * so that they are next to each other.
........
  r58522 | armin.rigo | 2007-10-17 11:46:37 -0700 (Wed, 17 Oct 2007) | 5 lines

  Fix the overflow checking of list_repeat.
  Introduce overflow checking into list_inplace_repeat.

  Backport candidate, possibly.
........
  r58530 | facundo.batista | 2007-10-17 20:16:03 -0700 (Wed, 17 Oct 2007) | 7 lines


  Issue #1580738.  When HTTPConnection reads the whole stream with read(),
  it closes itself.  When the stream is read in several calls to read(n),
  it should behave in the same way if HTTPConnection knows where the end
  of the stream is (through self.length).  Added a test case for this
  behaviour.
........
  r58531 | facundo.batista | 2007-10-17 20:44:48 -0700 (Wed, 17 Oct 2007) | 3 lines


  Issue 1289, just a typo.
........
  r58532 | gregory.p.smith | 2007-10-18 00:56:54 -0700 (Thu, 18 Oct 2007) | 4 lines

  cleanup test_dbtables to use mkdtemp.  cleanup dbtables to pass txn as a
  keyword argument whenever possible to avoid bugs and confusion.  (dbtables.py
  line 447 self.db.get using txn as a non-keyword was an actual bug due to this)
........
  r58533 | gregory.p.smith | 2007-10-18 01:34:20 -0700 (Thu, 18 Oct 2007) | 4 lines

  Fix a weird bug in dbtables: if it chose a random rowid string that contained
  NULL bytes it would cause the database all sorts of problems in the future
  leading to very strange random failures and corrupt dbtables.bsdTableDb dbs.
........
  r58534 | gregory.p.smith | 2007-10-18 09:32:02 -0700 (Thu, 18 Oct 2007) | 3 lines

  A cleaner fix than the one committed last night.  Generate random rowids that
  do not contain null bytes.
........
  r58537 | gregory.p.smith | 2007-10-18 10:17:57 -0700 (Thu, 18 Oct 2007) | 2 lines

  mention bsddb fixes.
........
  r58538 | raymond.hettinger | 2007-10-18 14:13:06 -0700 (Thu, 18 Oct 2007) | 1 line

  Remove useless warning
........
  r58539 | gregory.p.smith | 2007-10-19 00:31:20 -0700 (Fri, 19 Oct 2007) | 2 lines

  squelch the warning that this test is supposed to trigger.
........
  r58542 | georg.brandl | 2007-10-19 05:32:39 -0700 (Fri, 19 Oct 2007) | 2 lines

  Clarify wording for apply().
........
  r58544 | mark.summerfield | 2007-10-19 05:48:17 -0700 (Fri, 19 Oct 2007) | 3 lines

  Added a cross-ref to each other.
........
  r58545 | georg.brandl | 2007-10-19 10:38:49 -0700 (Fri, 19 Oct 2007) | 2 lines

  #1284: "S" means "seen", not unread.
........
  r58548 | thomas.heller | 2007-10-19 11:11:41 -0700 (Fri, 19 Oct 2007) | 4 lines

  Fix ctypes on 32-bit systems when Python is configured --with-system-ffi.
  See also https://bugs.launchpad.net/bugs/72505.

  Ported from release25-maint branch.
........
  r58550 | facundo.batista | 2007-10-19 12:25:57 -0700 (Fri, 19 Oct 2007) | 8 lines


  The constructor from tuple was way too permissive: it allowed bad
  coefficient numbers, floats in the sign, and other details that
  generated directly the wrong number in the best case, or triggered
  misfunctionality in the alorithms.

  Test cases added for these issues. Thanks Mark Dickinson.
........
  r58559 | georg.brandl | 2007-10-20 06:22:53 -0700 (Sat, 20 Oct 2007) | 2 lines

  Fix code being interpreted as a target.
........
  r58561 | georg.brandl | 2007-10-20 06:36:24 -0700 (Sat, 20 Oct 2007) | 2 lines

  Document new "cmdoption" directive.
........
  r58562 | georg.brandl | 2007-10-20 08:21:22 -0700 (Sat, 20 Oct 2007) | 2 lines

  Make a path more Unix-standardy.
........
  r58564 | georg.brandl | 2007-10-20 10:51:39 -0700 (Sat, 20 Oct 2007) | 2 lines

  Document new directive "envvar".
........
  r58567 | georg.brandl | 2007-10-20 11:08:14 -0700 (Sat, 20 Oct 2007) | 6 lines

  * Add new toplevel chapter, "Using Python." (how to install,
    configure and setup python on different platforms -- at least
    in theory.)
  * Move the Python on Mac docs in that chapter.
  * Add a new chapter about the command line invocation, by stargaming.
........
  r58568 | georg.brandl | 2007-10-20 11:33:20 -0700 (Sat, 20 Oct 2007) | 2 lines

  Change title, for now.
........
  r58569 | georg.brandl | 2007-10-20 11:39:25 -0700 (Sat, 20 Oct 2007) | 2 lines

  Add entry to ACKS.
........
  r58570 | georg.brandl | 2007-10-20 12:05:45 -0700 (Sat, 20 Oct 2007) | 2 lines

  Clarify -E docs.
........
  r58571 | georg.brandl | 2007-10-20 12:08:36 -0700 (Sat, 20 Oct 2007) | 2 lines

  Even more clarification.
........
  r58572 | andrew.kuchling | 2007-10-20 12:25:37 -0700 (Sat, 20 Oct 2007) | 1 line

  Fix protocol name
........
  r58573 | andrew.kuchling | 2007-10-20 12:35:18 -0700 (Sat, 20 Oct 2007) | 1 line

  Various items
........
  r58574 | andrew.kuchling | 2007-10-20 12:39:35 -0700 (Sat, 20 Oct 2007) | 1 line

  Use correct header line
........
  r58576 | armin.rigo | 2007-10-21 02:14:15 -0700 (Sun, 21 Oct 2007) | 3 lines

  Add a crasher for the long-standing issue with closing a file
  while another thread uses it.
........
  r58577 | georg.brandl | 2007-10-21 03:01:56 -0700 (Sun, 21 Oct 2007) | 2 lines

  Remove duplicate crasher.
........
  r58578 | georg.brandl | 2007-10-21 03:24:20 -0700 (Sun, 21 Oct 2007) | 2 lines

  Unify "byte code" to "bytecode". Also sprinkle :term: markup for it.
........
  r58579 | georg.brandl | 2007-10-21 03:32:54 -0700 (Sun, 21 Oct 2007) | 2 lines

  Add markup to new function descriptions.
........
  r58580 | georg.brandl | 2007-10-21 03:45:46 -0700 (Sun, 21 Oct 2007) | 2 lines

  Add :term:s for descriptors.
........
  r58581 | georg.brandl | 2007-10-21 03:46:24 -0700 (Sun, 21 Oct 2007) | 2 lines

  Unify "file-descriptor" to "file descriptor".
........
  r58582 | georg.brandl | 2007-10-21 03:52:38 -0700 (Sun, 21 Oct 2007) | 2 lines

  Add :term: for generators.
........
  r58583 | georg.brandl | 2007-10-21 05:10:28 -0700 (Sun, 21 Oct 2007) | 2 lines

  Add :term:s for iterator.
........
  r58584 | georg.brandl | 2007-10-21 05:15:05 -0700 (Sun, 21 Oct 2007) | 2 lines

  Add :term:s for "new-style class".
........
  r58588 | neal.norwitz | 2007-10-21 21:47:54 -0700 (Sun, 21 Oct 2007) | 1 line

  Add Chris Monson so he can edit PEPs.
........
  r58594 | guido.van.rossum | 2007-10-22 09:27:19 -0700 (Mon, 22 Oct 2007) | 4 lines

  Issue #1307, patch by Derek Shockey.
  When "MAIL" is received without args, an exception happens instead of
  sending a 501 syntax error response.
........
  r58598 | travis.oliphant | 2007-10-22 19:40:56 -0700 (Mon, 22 Oct 2007) | 1 line

  Add phuang patch from Issue 708374 which adds offset parameter to mmap module.
........
  r58601 | neal.norwitz | 2007-10-22 22:44:27 -0700 (Mon, 22 Oct 2007) | 2 lines

  Bug #1313, fix typo (wrong variable name) in example.
........
  r58609 | georg.brandl | 2007-10-23 11:21:35 -0700 (Tue, 23 Oct 2007) | 2 lines

  Update Pygments version from externals.
........
  r58618 | guido.van.rossum | 2007-10-23 12:25:41 -0700 (Tue, 23 Oct 2007) | 3 lines

  Issue 1307 by Derek Shockey, fox the same bug for RCPT.
  Neal: please backport!
........
  r58620 | raymond.hettinger | 2007-10-23 13:37:41 -0700 (Tue, 23 Oct 2007) | 1 line

  Shorter name for namedtuple()
........
  r58621 | andrew.kuchling | 2007-10-23 13:55:47 -0700 (Tue, 23 Oct 2007) | 1 line

  Update name
........
  r58622 | raymond.hettinger | 2007-10-23 14:23:07 -0700 (Tue, 23 Oct 2007) | 1 line

  Fixup news entry
........
  r58623 | raymond.hettinger | 2007-10-23 18:28:33 -0700 (Tue, 23 Oct 2007) | 1 line

  Optimize sum() for integer and float inputs.
........
  r58624 | raymond.hettinger | 2007-10-23 19:05:51 -0700 (Tue, 23 Oct 2007) | 1 line

  Fixup error return and add support for intermixed ints and floats/
........
  r58628 | vinay.sajip | 2007-10-24 03:47:06 -0700 (Wed, 24 Oct 2007) | 1 line

  Bug #1321: Fixed logic error in TimedRotatingFileHandler.__init__()
........
  r58641 | facundo.batista | 2007-10-24 12:11:08 -0700 (Wed, 24 Oct 2007) | 4 lines


  Issue 1290.  CharacterData.__repr__ was constructing a string
  in response that keeped having a non-ascii character.
........
  r58643 | thomas.heller | 2007-10-24 12:50:45 -0700 (Wed, 24 Oct 2007) | 1 line

  Added unittest for calling a function with paramflags (backport from py3k branch).
........
  r58645 | matthias.klose | 2007-10-24 13:00:44 -0700 (Wed, 24 Oct 2007) | 2 lines

  - Build using system ffi library on arm*-linux*.
........
  r58651 | georg.brandl | 2007-10-24 14:40:38 -0700 (Wed, 24 Oct 2007) | 2 lines

  Bug #1287: make os.environ.pop() work as expected.
........
  r58652 | raymond.hettinger | 2007-10-24 19:26:58 -0700 (Wed, 24 Oct 2007) | 1 line

  Missing DECREFs
........
  r58653 | matthias.klose | 2007-10-24 23:37:24 -0700 (Wed, 24 Oct 2007) | 2 lines

  - Build using system ffi library on arm*-linux*, pass --with-system-ffi to CONFIG_ARGS
........
  r58655 | thomas.heller | 2007-10-25 12:47:32 -0700 (Thu, 25 Oct 2007) | 2 lines

  ffi_type_longdouble may be already #defined.
  See issue 1324.
........
  r58656 | kurt.kaiser | 2007-10-25 15:43:45 -0700 (Thu, 25 Oct 2007) | 3 lines

  Correct an ancient bug in an unused path by removing that path: register() is
  now idempotent.
........
  r58660 | kurt.kaiser | 2007-10-25 17:10:09 -0700 (Thu, 25 Oct 2007) | 4 lines

  1. Add comments to provide top-level documentation.
  2. Refactor to use more descriptive names.
  3. Enhance tests in main().
........
  r58675 | georg.brandl | 2007-10-26 11:30:41 -0700 (Fri, 26 Oct 2007) | 2 lines

  Fix new pop() method on os.environ on ignorecase-platforms.
........
  r58696 | neal.norwitz | 2007-10-27 15:32:21 -0700 (Sat, 27 Oct 2007) | 1 line

  Update URL for Pygments.  0.8.1 is no longer available
........
  r58697 | hyeshik.chang | 2007-10-28 04:19:02 -0700 (Sun, 28 Oct 2007) | 3 lines

  - Add support for FreeBSD 8 which is recently forked from FreeBSD 7.
  - Regenerate IN module for most recent maintenance tree of FreeBSD 6 and 7.
........
  r58698 | hyeshik.chang | 2007-10-28 05:38:09 -0700 (Sun, 28 Oct 2007) | 2 lines

  Enable platform-specific tweaks for FreeBSD 8 (exactly same to FreeBSD 7's yet)
........
  r58700 | kurt.kaiser | 2007-10-28 12:03:59 -0700 (Sun, 28 Oct 2007) | 2 lines

  Add confirmation dialog before printing.  Patch 1717170 Tal Einat.
........
  r58706 | guido.van.rossum | 2007-10-29 13:52:45 -0700 (Mon, 29 Oct 2007) | 3 lines

  Patch 1353 by Jacob Winther.
  Add mp4 mapping to mimetypes.py.
........
  r58709 | guido.van.rossum | 2007-10-29 15:15:05 -0700 (Mon, 29 Oct 2007) | 6 lines

  Backport fixes for the code that decodes octal escapes (and for PyString
  also hex escapes) -- this was reaching beyond the end of the input string
  buffer, even though it is not supposed to be \0-terminated.
  This has no visible effect but is clearly the correct thing to do.
  (In 3.0 it had a visible effect after removing ob_sstate from PyString.)
........
  r58710 | kurt.kaiser | 2007-10-29 19:38:54 -0700 (Mon, 29 Oct 2007) | 7 lines

  check in Tal Einat's update to tabpage.py
  Patch 1612746

  M    configDialog.py
  M    NEWS.txt
  AM   tabbedpages.py
........
  r58715 | georg.brandl | 2007-10-30 10:51:18 -0700 (Tue, 30 Oct 2007) | 2 lines

  Use correct markup.
........
  r58716 | georg.brandl | 2007-10-30 10:57:12 -0700 (Tue, 30 Oct 2007) | 2 lines

  Make example about hiding None return values at the prompt clearer.
........
  r58728 | neal.norwitz | 2007-10-30 23:33:20 -0700 (Tue, 30 Oct 2007) | 1 line

  Fix some compiler warnings for signed comparisons on Unix and Windows.
........
  r58731 | martin.v.loewis | 2007-10-31 10:19:33 -0700 (Wed, 31 Oct 2007) | 2 lines

  Adding Christian Heimes.
........
  r58737 | raymond.hettinger | 2007-10-31 14:57:58 -0700 (Wed, 31 Oct 2007) | 1 line

  Clarify the reasons why pickle is almost always better than marshal
........
  r58739 | raymond.hettinger | 2007-10-31 15:15:49 -0700 (Wed, 31 Oct 2007) | 1 line

  Sets are marshalable.
........Fix most trivially-findable print statements.

There's one major and one minor category still unfixed:
doctests are the major category (and I hope to be able to augment the
refactoring tool to refactor bona fide doctests soon);
other code generating print statements in strings is the minor category.

(Oh, and I don't know if the compiler package works.)Long ago, Guido suggested that I add this to the standard library.
I'm now checking it in.  I need to write some documentation for it,
but I don't have time right now.  Still, I wanted to get this into
2.1a2.

# Overview:
#
# This file implements the minimal SMTP protocol as defined in RFC 821.  It
# has a hierarchy of classes which implement the backend functionality for the
# smtpd.  A number of classes are provided:
#
#   SMTPServer - the base class for the backend.  Raises an UnimplementedError
#   if you try to use it.
#
#   DebuggingServer - simply prints each message it receives on stdout.
#
#   PureProxy - Proxies all messages to a real smtpd which does final
#   delivery.  One known problem with this class is that it doesn't handle
#   SMTP errors from the backend server at all.  This should be fixed
#   (contributions are welcome!).
#
#   MailmanProxy - An experimental hack to work with GNU Mailman
#   <www.list.org>.  Using this server as your real incoming smtpd, your
#   mailhost will automatically recognize and accept mail destined to Mailman
#   lists when those lists are created.  Every message not destined for a list
#   gets forwarded to a real backend smtpd, as with PureProxy.  Again, errors
#   are not handled correctly yet.[wistia] improve format extraction and extract subtitles(closes #22590)[extractor/generic] Add test for wistia standard embed[wistia] Improve hls support[wistia] Skip storyboard and improve extraction[wistia] Add alias and modernize[wistia] extract more metadata[wistia] Fix extraction (Closes #8707)Fix imports and general cleanup

· Import from compat what comes from compat. Yes, some names are available in utils too, but that's an implementation detail.
· Use _match_id consistently whenever possible
· Fix some outdated tests
· Use consistent valid URL (always match the whole protocol, no ^ at start required)
· Use modern test definitionsMerge remote-tracking branch 'naglis/wistia'[wistia] Add duration and modernize[wistia] Prefer original video format above all others

We could also set up a formula which would weigh filesize/bitrate and vcodec/acodec (say, 1GB h264 < 3 GB MPEG2 < 2 GB h264), but that would get really messy real soon.[wistia] Use centralized sortingbpo-39656: Ensure `bin/python3.#` is always present in virtual environments on POSIX (GH-19030)
bpo-37369: Fix initialization of sys members when launched via an app container (GH-14428)

sys._base_executable is now always defined on all platforms, and can be overridden through configuration.
Also adds test.support.PythonSymlink to encapsulate platform-specific logic for symlinking sys.executablebpo-35854: Fix EnvBuilder and --symlinks in venv on Windows (GH-11700)
bpo-34977: Use venv redirector instead of original python.exe on Windows (GH-11029)
Revert "bpo-34977: Add Windows App Store package (GH-10245)" (GH-11019)

This reverts commit 468a15aaf9206448a744fc5eab3fc21f51966aad.bpo-34977: Add Windows App Store package (GH-10245)
bpo-34011: Fixes missing venv files and other tests (GH-9458)
bpo-34011: Update code copying DLLs and init.tcl into venvs. (GH-8253)
Issue #23399: pyvenv creates relative symlinks where possible.Closes #21663: Merged fix from 3.4.Don't chmod() if path is a symlink.Issue #18807: Merged fix from 3.4.Added python3 symlink; removed Distribute-related code, docs and comments; changed Mac OS X computation to determine framework builds.Implemented PEP 405 (Python virtual environments).Patch# 1258 by Christian Heimes: kill basestring.
I like this because it makes the code shorter! :-)Fix pdb help command.Updated version of [ 558544 ] cmd.py: add instance-specific stdin/out

This patch adds stdin, stdout as optional arguments to the cmd.Cmd
constructor (defaulting to sys.stdin, sys.stdout), and changes the Cmd
methods throughout to use self.stdout.write() and self.stdin.foo for
output and input. This allows much greater flexibility for using cmd -
for instance, hooking it into a telnet server.

Patch for library module and for documentation.Add a better columnizer to print_topics().Fix #12811 by closing files promptly in tabnanny.check. Patch by Anthony Briggs.Issue #10335: Add tokenize.open(), detect the file encoding using
tokenize.detect_encoding() and open it in read only mode.Issue #8774: tabnanny uses the encoding cookie (#coding:...) to use the correct
encodingMerge current trunk into p3yk. This includes the PyNumber_Index API change,
which unfortunately means the errors from the bytes type change somewhat:

bytes([300]) still raises a ValueError, but bytes([10**100]) now raises a
TypeError (either that, or bytes(1.0) also raises a ValueError --
PyNumber_AsSsize_t() can only raise one type of exception.)

Merged revisions 51188-51433 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r51189 | kurt.kaiser | 2006-08-10 19:11:09 +0200 (Thu, 10 Aug 2006) | 4 lines

  Retrieval of previous shell command was not always preserving indentation
  since 1.2a1) Patch 1528468 Tal Einat.
........
  r51190 | guido.van.rossum | 2006-08-10 19:41:07 +0200 (Thu, 10 Aug 2006) | 3 lines

  Chris McDonough's patch to defend against certain DoS attacks on FieldStorage.
  SF bug #1112549.
........
  r51191 | guido.van.rossum | 2006-08-10 19:42:50 +0200 (Thu, 10 Aug 2006) | 2 lines

  News item for SF bug 1112549.
........
  r51192 | guido.van.rossum | 2006-08-10 20:09:25 +0200 (Thu, 10 Aug 2006) | 2 lines

  Fix title -- it's rc1, not beta3.
........
  r51194 | martin.v.loewis | 2006-08-10 21:04:00 +0200 (Thu, 10 Aug 2006) | 3 lines

  Update dangling references to the 3.2 database to
  mention that this is UCD 4.1 now.
........
  r51195 | tim.peters | 2006-08-11 00:45:34 +0200 (Fri, 11 Aug 2006) | 6 lines

  Followup to bug #1069160.

  PyThreadState_SetAsyncExc():  internal correctness changes wrt
  refcount safety and deadlock avoidance.  Also added a basic test
  case (relying on ctypes) and repaired the docs.
........
  r51196 | tim.peters | 2006-08-11 00:48:45 +0200 (Fri, 11 Aug 2006) | 2 lines

  Whitespace normalization.
........
  r51197 | tim.peters | 2006-08-11 01:22:13 +0200 (Fri, 11 Aug 2006) | 5 lines

  Whitespace normalization broke test_cgi, because a line
  of quoted test data relied on preserving a single trailing
  blank.  Changed the string from raw to regular, and forced
  in the trailing blank via an explicit \x20 escape.
........
  r51198 | tim.peters | 2006-08-11 02:49:01 +0200 (Fri, 11 Aug 2006) | 10 lines

  test_PyThreadState_SetAsyncExc():  This is failing on some
  64-bit boxes.  I have no idea what the ctypes docs mean
  by "integers", and blind-guessing here that it intended to
  mean the signed C "int" type, in which case perhaps I can
  repair this by feeding the thread id argument to type
  ctypes.c_long().

  Also made the worker thread daemonic, so it doesn't hang
  Python shutdown if the test continues to fail.
........
  r51199 | tim.peters | 2006-08-11 05:49:10 +0200 (Fri, 11 Aug 2006) | 6 lines

  force_test_exit():  This has been completely ineffective
  at stopping test_signal from hanging forever on the Tru64
  buildbot.  That could be because there's no such thing as
  signal.SIGALARM.  Changed to the idiotic (but standard)
  signal.SIGALRM instead, and added some more debug output.
........
  r51202 | neal.norwitz | 2006-08-11 08:09:41 +0200 (Fri, 11 Aug 2006) | 6 lines

  Fix the failures on cygwin (2006-08-10 fixed the actual locking issue).

  The first hunk changes the colon to an ! like other Windows variants.
  We need to always wait on the child so the lock gets released and
  no other tests fail.  This is the try/finally in the second hunk.
........
  r51205 | georg.brandl | 2006-08-11 09:15:38 +0200 (Fri, 11 Aug 2006) | 3 lines

  Add Chris McDonough (latest cgi.py patch)
........
  r51206 | georg.brandl | 2006-08-11 09:26:10 +0200 (Fri, 11 Aug 2006) | 3 lines

  logging's atexit hook now runs even if the rest of the module has
  already been cleaned up.
........
  r51212 | thomas.wouters | 2006-08-11 17:02:39 +0200 (Fri, 11 Aug 2006) | 4 lines


  Add ignore of *.pyc and *.pyo to Lib/xml/etree/.
........
  r51215 | thomas.heller | 2006-08-11 21:55:35 +0200 (Fri, 11 Aug 2006) | 7 lines

  When a ctypes C callback function is called, zero out the result
  storage before converting the result to C data.  See the comment in
  the code for details.

  Provide a better context for errors when the conversion of a callback
  function's result cannot be converted.
........
  r51218 | neal.norwitz | 2006-08-12 03:43:40 +0200 (Sat, 12 Aug 2006) | 6 lines

  Klocwork made another run and found a bunch more problems.
  This is the first batch of fixes that should be easy to verify based on context.

  This fixes problem numbers: 220 (ast), 323-324 (symtable),
  321-322 (structseq), 215 (array), 210 (hotshot), 182 (codecs), 209 (etree).
........
  r51219 | neal.norwitz | 2006-08-12 03:45:47 +0200 (Sat, 12 Aug 2006) | 9 lines

  Even though _Py_Mangle() isn't truly public anyone can call it and
  there was no verification that privateobj was a PyString.  If it wasn't
  a string, this could have allowed a NULL pointer to creep in below and crash.

  I wonder if this should be PyString_CheckExact?  Must identifiers be strings
  or can they be subclasses?

  Klocwork #275
........
  r51220 | neal.norwitz | 2006-08-12 03:46:42 +0200 (Sat, 12 Aug 2006) | 5 lines

  It's highly unlikely, though possible for PyEval_Get*() to return NULLs.
  So be safe and do an XINCREF.

  Klocwork # 221-222.
........
  r51221 | neal.norwitz | 2006-08-12 03:47:59 +0200 (Sat, 12 Aug 2006) | 7 lines

  This code is actually not used unless WITHOUT_COMPLEX is defined.
  However, there was no error checking that PyFloat_FromDouble returned
  a valid pointer.  I believe this change is correct as it seemed
  to follow other code in the area.

  Klocwork # 292.
........
  r51222 | neal.norwitz | 2006-08-12 03:49:12 +0200 (Sat, 12 Aug 2006) | 5 lines

  Handle NULL nodes while parsing.  I'm not entirely sure this is correct.
  There might be something else that needs to be done to setup the error.

  Klocwork #295.
........
  r51223 | neal.norwitz | 2006-08-12 03:50:38 +0200 (Sat, 12 Aug 2006) | 6 lines

  If _stat_float_times is false, we will try to INCREF ival which could be NULL.
  Return early in that case.  The caller checks for PyErr_Occurred so this
  should be ok.

  Klocwork #297
........
  r51224 | neal.norwitz | 2006-08-12 03:51:12 +0200 (Sat, 12 Aug 2006) | 3 lines

  Move the assert which checks for a NULL pointer first.
  Klocwork #274.
........
  r51225 | neal.norwitz | 2006-08-12 03:53:28 +0200 (Sat, 12 Aug 2006) | 5 lines

  Try to handle a malloc failure.  I'm not entirely sure this is correct.
  There might be something else we need to do to handle the exception.

  Klocwork # 212-213
........
  r51226 | neal.norwitz | 2006-08-12 03:57:47 +0200 (Sat, 12 Aug 2006) | 6 lines

  I'm not sure why this code allocates this string for the error message.
  I think it would be better to always use snprintf and have the format
  limit the size of the name appropriately (like %.200s).

  Klocwork #340
........
  r51227 | neal.norwitz | 2006-08-12 04:06:34 +0200 (Sat, 12 Aug 2006) | 3 lines

  Check returned pointer is valid.
  Klocwork #233
........
  r51228 | neal.norwitz | 2006-08-12 04:12:30 +0200 (Sat, 12 Aug 2006) | 1 line

  Whoops, how did that get in there. :-)  Revert all the parts of 51227 that were not supposed to go it.  Only Modules/_ctypes/cfields.c was supposed to be changed
........
  r51229 | neal.norwitz | 2006-08-12 04:33:36 +0200 (Sat, 12 Aug 2006) | 4 lines

  Don't deref v if it's NULL.

  Klocwork #214
........
  r51230 | neal.norwitz | 2006-08-12 05:16:54 +0200 (Sat, 12 Aug 2006) | 5 lines

  Check return of PyMem_MALLOC (garbage) is non-NULL.
  Check seq in both portions of if/else.

  Klocwork #289-290.
........
  r51231 | neal.norwitz | 2006-08-12 05:17:41 +0200 (Sat, 12 Aug 2006) | 4 lines

  PyModule_GetDict() can fail, produce fatal errors if this happens on startup.

  Klocwork #298-299.
........
  r51232 | neal.norwitz | 2006-08-12 05:18:50 +0200 (Sat, 12 Aug 2006) | 5 lines

  Verify verdat which is returned from malloc is not NULL.
  Ensure we don't pass NULL to free.

  Klocwork #306 (at least the first part, checking malloc)
........
  r51233 | tim.peters | 2006-08-12 06:42:47 +0200 (Sat, 12 Aug 2006) | 35 lines

  test_signal:  Signal handling on the Tru64 buildbot
  appears to be utterly insane.  Plug some theoretical
  insecurities in the test script:

  - Verify that the SIGALRM handler was actually installed.

  - Don't call alarm() before the handler is installed.

  - Move everything that can fail inside the try/finally,
    so the test cleans up after itself more often.

  - Try sending all the expected signals in
    force_test_exit(), not just SIGALRM.  Since that was
    fixed to actually send SIGALRM (instead of invisibly
    dying with an AttributeError), we've seen that sending
    SIGALRM alone does not stop this from hanging.

  - Move the "kill the child" business into the finally
    clause, so the child doesn't survive test failure
    to send SIGALRM to other tests later (there are also
    baffling SIGALRM-related failures in test_socket).

  - Cancel the alarm in the finally clause -- if the
    test dies early, we again don't want SIGALRM showing
    up to confuse a later test.

  Alas, this still relies on timing luck wrt the spawned
  script that sends the test signals, but it's hard to see
  how waiting for seconds can so often be so unlucky.

  test_threadedsignals:  curiously, this test never fails
  on Tru64, but doesn't normally signal SIGALRM.  Anyway,
  fixed an obvious (but probably inconsequential) logic
  error.
........
  r51234 | tim.peters | 2006-08-12 07:17:41 +0200 (Sat, 12 Aug 2006) | 8 lines

  Ah, fudge.  One of the prints here actually "shouldn't be"
  protected by "if verbose:", which caused the test to fail on
  all non-Windows boxes.

  Note that I deliberately didn't convert this to unittest yet,
  because I expect it would be even harder to debug this on Tru64
  after conversion.
........
  r51235 | georg.brandl | 2006-08-12 10:32:02 +0200 (Sat, 12 Aug 2006) | 3 lines

  Repair logging test spew caused by rev. 51206.
........
  r51236 | neal.norwitz | 2006-08-12 19:03:09 +0200 (Sat, 12 Aug 2006) | 8 lines

  Patch #1538606, Patch to fix __index__() clipping.

  I modified this patch some by fixing style, some error checking, and adding
  XXX comments.  This patch requires review and some changes are to be expected.
  I'm checking in now to get the greatest possible review and establish a
  baseline for moving forward.  I don't want this to hold up release if possible.
........
  r51238 | neal.norwitz | 2006-08-12 20:44:06 +0200 (Sat, 12 Aug 2006) | 10 lines

  Fix a couple of bugs exposed by the new __index__ code.  The 64-bit buildbots
  were failing due to inappropriate clipping of numbers larger than 2**31
  with new-style classes. (typeobject.c)  In reviewing the code for classic
  classes, there were 2 problems.  Any negative value return could be returned.
  Always return -1 if there was an error.  Also make the checks similar
  with the new-style classes.  I believe this is correct for 32 and 64 bit
  boxes, including Windows64.

  Add a test of classic classes too.
........
  r51240 | neal.norwitz | 2006-08-13 02:20:49 +0200 (Sun, 13 Aug 2006) | 1 line

  SF bug #1539336, distutils example code missing
........
  r51245 | neal.norwitz | 2006-08-13 20:10:10 +0200 (Sun, 13 Aug 2006) | 6 lines

  Move/copy assert for tstate != NULL before first use.
  Verify that PyEval_Get{Globals,Locals} returned valid pointers.

  Klocwork 231-232
........
  r51246 | neal.norwitz | 2006-08-13 20:10:28 +0200 (Sun, 13 Aug 2006) | 5 lines

  Handle a whole lot of failures from PyString_FromInternedString().

  Should fix most of Klocwork 234-272.
........
  r51247 | neal.norwitz | 2006-08-13 20:10:47 +0200 (Sun, 13 Aug 2006) | 8 lines

  cpathname could be NULL if it was longer than MAXPATHLEN.  Don't try
  to write the .pyc to NULL.

  Check results of PyList_GetItem() and PyModule_GetDict() are not NULL.

  Klocwork 282, 283, 285
........
  r51248 | neal.norwitz | 2006-08-13 20:11:08 +0200 (Sun, 13 Aug 2006) | 6 lines

  Fix segfault when doing string formatting on subclasses of long if
  __oct__, __hex__ don't return a string.

  Klocwork 308
........
  r51250 | neal.norwitz | 2006-08-13 20:11:27 +0200 (Sun, 13 Aug 2006) | 5 lines

  Check return result of PyModule_GetDict().
  Fix a bunch of refleaks in the init of the module.  This would only be found
  when running python -v.
........
  r51251 | neal.norwitz | 2006-08-13 20:11:43 +0200 (Sun, 13 Aug 2006) | 5 lines

  Handle malloc and fopen failures more gracefully.

  Klocwork 180-181
........
  r51252 | neal.norwitz | 2006-08-13 20:12:03 +0200 (Sun, 13 Aug 2006) | 7 lines

  It's very unlikely, though possible that source is not a string.  Verify
  that PyString_AsString() returns a valid pointer.  (The problem can
  arise when zlib.decompress doesn't return a string.)

  Klocwork 346
........
  r51253 | neal.norwitz | 2006-08-13 20:12:26 +0200 (Sun, 13 Aug 2006) | 5 lines

  Handle failures from lookup.

  Klocwork 341-342
........
  r51254 | neal.norwitz | 2006-08-13 20:12:45 +0200 (Sun, 13 Aug 2006) | 6 lines

  Handle failure from PyModule_GetDict() (Klocwork 208).

  Fix a bunch of refleaks in the init of the module.  This would only be found
  when running python -v.
........
  r51255 | neal.norwitz | 2006-08-13 20:13:02 +0200 (Sun, 13 Aug 2006) | 4 lines

  Really address the issue of where to place the assert for leftblock.
  (Followup of Klocwork 274)
........
  r51256 | neal.norwitz | 2006-08-13 20:13:36 +0200 (Sun, 13 Aug 2006) | 4 lines

  Handle malloc failure.

  Klocwork 281
........
  r51258 | neal.norwitz | 2006-08-13 20:40:39 +0200 (Sun, 13 Aug 2006) | 4 lines

  Handle alloca failures.

  Klocwork 225-228
........
  r51259 | neal.norwitz | 2006-08-13 20:41:15 +0200 (Sun, 13 Aug 2006) | 1 line

  Get rid of compiler warning
........
  r51261 | neal.norwitz | 2006-08-14 02:51:15 +0200 (Mon, 14 Aug 2006) | 1 line

  Ignore pgen.exe and kill_python.exe for cygwin
........
  r51262 | neal.norwitz | 2006-08-14 02:59:03 +0200 (Mon, 14 Aug 2006) | 4 lines

  Can't return NULL from a void function.  If there is a memory error,
  about the best we can do is call PyErr_WriteUnraisable and go on.
  We won't be able to do the call below either, so verify delstr is valid.
........
  r51263 | neal.norwitz | 2006-08-14 03:49:54 +0200 (Mon, 14 Aug 2006) | 1 line

  Update purify doc some.
........
  r51264 | thomas.heller | 2006-08-14 09:13:05 +0200 (Mon, 14 Aug 2006) | 2 lines

  Remove unused, buggy test function.
  Fixes klockwork issue #207.
........
  r51265 | thomas.heller | 2006-08-14 09:14:09 +0200 (Mon, 14 Aug 2006) | 2 lines

  Check for NULL return value from new_CArgObject().
  Fixes klockwork issues #183, #184, #185.
........
  r51266 | thomas.heller | 2006-08-14 09:50:14 +0200 (Mon, 14 Aug 2006) | 2 lines

  Check for NULL return value of GenericCData_new().
  Fixes klockwork issues #188, #189.
........
  r51274 | thomas.heller | 2006-08-14 12:02:24 +0200 (Mon, 14 Aug 2006) | 2 lines

  Revert the change that tries to zero out a closure's result storage
  area because the size if unknown in source/callproc.c.
........
  r51276 | marc-andre.lemburg | 2006-08-14 12:55:19 +0200 (Mon, 14 Aug 2006) | 11 lines

  Slightly revised version of patch #1538956:

  Replace UnicodeDecodeErrors raised during == and !=
  compares of Unicode and other objects with a new
  UnicodeWarning.

  All other comparisons continue to raise exceptions.
  Exceptions other than UnicodeDecodeErrors are also left
  untouched.
........
  r51277 | thomas.heller | 2006-08-14 13:17:48 +0200 (Mon, 14 Aug 2006) | 13 lines

  Apply the patch #1532975 plus ideas from the patch #1533481.

  ctypes instances no longer have the internal and undocumented
  '_as_parameter_' attribute which was used to adapt them to foreign
  function calls; this mechanism is replaced by a function pointer in
  the type's stgdict.

  In the 'from_param' class methods, try the _as_parameter_ attribute if
  other conversions are not possible.

  This makes the documented _as_parameter_ mechanism work as intended.

  Change the ctypes version number to 1.0.1.
........
  r51278 | marc-andre.lemburg | 2006-08-14 13:44:34 +0200 (Mon, 14 Aug 2006) | 3 lines

  Readd NEWS items that were accidentally removed by r51276.
........
  r51279 | georg.brandl | 2006-08-14 14:36:06 +0200 (Mon, 14 Aug 2006) | 3 lines

  Improve markup in PyUnicode_RichCompare.
........
  r51280 | marc-andre.lemburg | 2006-08-14 14:57:27 +0200 (Mon, 14 Aug 2006) | 3 lines

  Correct an accidentally removed previous patch.
........
  r51281 | thomas.heller | 2006-08-14 18:17:41 +0200 (Mon, 14 Aug 2006) | 3 lines

  Patch #1536908: Add support for AMD64 / OpenBSD.
  Remove the -no-stack-protector compiler flag for OpenBSD
  as it has been reported to be unneeded.
........
  r51282 | thomas.heller | 2006-08-14 18:20:04 +0200 (Mon, 14 Aug 2006) | 1 line

  News item for rev 51281.
........
  r51283 | georg.brandl | 2006-08-14 22:25:39 +0200 (Mon, 14 Aug 2006) | 3 lines

  Fix refleak introduced in rev. 51248.
........
  r51284 | georg.brandl | 2006-08-14 23:34:08 +0200 (Mon, 14 Aug 2006) | 5 lines

  Make tabnanny recognize IndentationErrors raised by tokenize.
  Add a test to test_inspect to make sure indented source
  is recognized correctly. (fixes #1224621)
........
  r51285 | georg.brandl | 2006-08-14 23:42:55 +0200 (Mon, 14 Aug 2006) | 3 lines

  Patch #1535500: fix segfault in BZ2File.writelines and make sure it
  raises the correct exceptions.
........
  r51287 | georg.brandl | 2006-08-14 23:45:32 +0200 (Mon, 14 Aug 2006) | 3 lines

  Add an additional test: BZ2File write methods should raise IOError
  when file is read-only.
........
  r51289 | georg.brandl | 2006-08-14 23:55:28 +0200 (Mon, 14 Aug 2006) | 3 lines

  Patch #1536071: trace.py should now find the full module name of a
  file correctly even on Windows.
........
  r51290 | georg.brandl | 2006-08-15 00:01:24 +0200 (Tue, 15 Aug 2006) | 3 lines

  Cookie.py shouldn't "bogusly" use string._idmap.
........
  r51291 | georg.brandl | 2006-08-15 00:10:24 +0200 (Tue, 15 Aug 2006) | 3 lines

  Patch #1511317: don't crash on invalid hostname info
........
  r51292 | tim.peters | 2006-08-15 02:25:04 +0200 (Tue, 15 Aug 2006) | 2 lines

  Whitespace normalization.
........
  r51293 | neal.norwitz | 2006-08-15 06:14:57 +0200 (Tue, 15 Aug 2006) | 3 lines

  Georg fixed one of my bugs, so I'll repay him with 2 NEWS entries.
  Now we're even. :-)
........
  r51295 | neal.norwitz | 2006-08-15 06:58:28 +0200 (Tue, 15 Aug 2006) | 8 lines

  Fix the test for SocketServer so it should pass on cygwin and not fail
  sporadically on other platforms.  This is really a band-aid that doesn't
  fix the underlying issue in SocketServer.  It's not clear if it's worth
  it to fix SocketServer, however, I opened a bug to track it:

  	http://python.org/sf/1540386
........
  r51296 | neal.norwitz | 2006-08-15 06:59:30 +0200 (Tue, 15 Aug 2006) | 3 lines

  Update the docstring to use a version a little newer than 1999.  This was
  taken from a Debian patch.  Should we update the version for each release?
........
  r51298 | neal.norwitz | 2006-08-15 08:29:03 +0200 (Tue, 15 Aug 2006) | 2 lines

  Subclasses of int/long are allowed to define an __index__.
........
  r51300 | thomas.heller | 2006-08-15 15:07:21 +0200 (Tue, 15 Aug 2006) | 1 line

  Check for NULL return value from new_CArgObject calls.
........
  r51303 | kurt.kaiser | 2006-08-16 05:15:26 +0200 (Wed, 16 Aug 2006) | 2 lines

  The 'with' statement is now a Code Context block opener
........
  r51304 | anthony.baxter | 2006-08-16 05:42:26 +0200 (Wed, 16 Aug 2006) | 1 line

  preparing for 2.5c1
........
  r51305 | anthony.baxter | 2006-08-16 05:58:37 +0200 (Wed, 16 Aug 2006) | 1 line

  preparing for 2.5c1 - no, really this time
........
  r51306 | kurt.kaiser | 2006-08-16 07:01:42 +0200 (Wed, 16 Aug 2006) | 9 lines

  Patch #1540892: site.py Quitter() class attempts to close sys.stdin
  before raising SystemExit, allowing IDLE to honor quit() and exit().

  M    Lib/site.py
  M    Lib/idlelib/PyShell.py
  M    Lib/idlelib/CREDITS.txt
  M    Lib/idlelib/NEWS.txt
  M    Misc/NEWS
........
  r51307 | ka-ping.yee | 2006-08-16 09:02:50 +0200 (Wed, 16 Aug 2006) | 6 lines

  Update code and tests to support the 'bytes_le' attribute (for
  little-endian byte order on Windows), and to work around clocks
  with low resolution yielding duplicate UUIDs.

  Anthony Baxter has approved this change.
........
  r51308 | kurt.kaiser | 2006-08-16 09:04:17 +0200 (Wed, 16 Aug 2006) | 2 lines

  Get quit() and exit() to work cleanly when not using subprocess.
........
  r51309 | marc-andre.lemburg | 2006-08-16 10:13:26 +0200 (Wed, 16 Aug 2006) | 2 lines

  Revert to having static version numbers again.
........
  r51310 | martin.v.loewis | 2006-08-16 14:55:10 +0200 (Wed, 16 Aug 2006) | 2 lines

  Build _hashlib on Windows. Build OpenSSL with masm assembler code.
  Fixes #1535502.
........
  r51311 | thomas.heller | 2006-08-16 15:03:11 +0200 (Wed, 16 Aug 2006) | 6 lines

  Add commented assert statements to check that the result of
  PyObject_stgdict() and PyType_stgdict() calls are non-NULL before
  dereferencing the result.  Hopefully this fixes what klocwork is
  complaining about.

  Fix a few other nits as well.
........
  r51312 | anthony.baxter | 2006-08-16 15:08:25 +0200 (Wed, 16 Aug 2006) | 1 line

  news entry for 51307
........
  r51313 | andrew.kuchling | 2006-08-16 15:22:20 +0200 (Wed, 16 Aug 2006) | 1 line

  Add UnicodeWarning
........
  r51314 | andrew.kuchling | 2006-08-16 15:41:52 +0200 (Wed, 16 Aug 2006) | 1 line

  Bump document version to 1.0; remove pystone paragraph
........
  r51315 | andrew.kuchling | 2006-08-16 15:51:32 +0200 (Wed, 16 Aug 2006) | 1 line

  Link to docs; remove an XXX comment
........
  r51316 | martin.v.loewis | 2006-08-16 15:58:51 +0200 (Wed, 16 Aug 2006) | 1 line

  Make cl build step compile-only (/c). Remove libs from source list.
........
  r51317 | thomas.heller | 2006-08-16 16:07:44 +0200 (Wed, 16 Aug 2006) | 5 lines

  The __repr__ method of a NULL py_object does no longer raise an
  exception.  Remove a stray '?' character from the exception text
  when the value is retrieved of such an object.

  Includes tests.
........
  r51318 | andrew.kuchling | 2006-08-16 16:18:23 +0200 (Wed, 16 Aug 2006) | 1 line

  Update bug/patch counts
........
  r51319 | andrew.kuchling | 2006-08-16 16:21:14 +0200 (Wed, 16 Aug 2006) | 1 line

  Wording/typo fixes
........
  r51320 | thomas.heller | 2006-08-16 17:10:12 +0200 (Wed, 16 Aug 2006) | 9 lines

  Remove the special casing of Py_None when converting the return value
  of the Python part of a callback function to C.  If it cannot be
  converted, call PyErr_WriteUnraisable with the exception we got.
  Before, arbitrary data has been passed to the calling C code in this
  case.

  (I'm not really sure the NEWS entry is understandable, but I cannot
  find better words)
........
  r51321 | marc-andre.lemburg | 2006-08-16 18:11:01 +0200 (Wed, 16 Aug 2006) | 2 lines

  Add NEWS item mentioning the reverted distutils version number patch.
........
  r51322 | fredrik.lundh | 2006-08-16 18:47:07 +0200 (Wed, 16 Aug 2006) | 5 lines

  SF#1534630

  ignore data that arrives before the opening start tag
........
  r51324 | andrew.kuchling | 2006-08-16 19:11:18 +0200 (Wed, 16 Aug 2006) | 1 line

  Grammar fix
........
  r51328 | thomas.heller | 2006-08-16 20:02:11 +0200 (Wed, 16 Aug 2006) | 12 lines

  Tutorial:

      Clarify somewhat how parameters are passed to functions
      (especially explain what integer means).

      Correct the table - Python integers and longs can both be used.
      Further clarification to the table comparing ctypes types, Python
      types, and C types.

  Reference:

      Replace integer by C ``int`` where it makes sense.
........
  r51329 | kurt.kaiser | 2006-08-16 23:45:59 +0200 (Wed, 16 Aug 2006) | 8 lines

  File menu hotkeys: there were three 'p' assignments.  Reassign the
  'Save Copy As' and 'Print' hotkeys to 'y' and 't'.  Change the
  Shell menu hotkey from 's' to 'l'.

  M    Bindings.py
  M    PyShell.py
  M    NEWS.txt
........
  r51330 | neil.schemenauer | 2006-08-17 01:38:05 +0200 (Thu, 17 Aug 2006) | 3 lines

  Fix a bug in the ``compiler`` package that caused invalid code to be
  generated for generator expressions.
........
  r51342 | martin.v.loewis | 2006-08-17 21:19:32 +0200 (Thu, 17 Aug 2006) | 3 lines

  Merge 51340 and 51341 from 2.5 branch:
  Leave tk build directory to restore original path.
  Invoke debug mk1mf.pl after running Configure.
........
  r51354 | martin.v.loewis | 2006-08-18 05:47:18 +0200 (Fri, 18 Aug 2006) | 3 lines

  Bug #1541863: uuid.uuid1 failed to generate unique identifiers
  on systems with low clock resolution.
........
  r51355 | neal.norwitz | 2006-08-18 05:57:54 +0200 (Fri, 18 Aug 2006) | 1 line

  Add template for 2.6 on HEAD
........
  r51356 | neal.norwitz | 2006-08-18 06:01:38 +0200 (Fri, 18 Aug 2006) | 1 line

  More post-release wibble
........
  r51357 | neal.norwitz | 2006-08-18 06:58:33 +0200 (Fri, 18 Aug 2006) | 1 line

  Try to get Windows bots working again
........
  r51358 | neal.norwitz | 2006-08-18 07:10:00 +0200 (Fri, 18 Aug 2006) | 1 line

  Try to get Windows bots working again. Take 2
........
  r51359 | neal.norwitz | 2006-08-18 07:39:20 +0200 (Fri, 18 Aug 2006) | 1 line

  Try to get Unix bots install working again.
........
  r51360 | neal.norwitz | 2006-08-18 07:41:46 +0200 (Fri, 18 Aug 2006) | 1 line

  Set version to 2.6a0, seems more consistent.
........
  r51362 | neal.norwitz | 2006-08-18 08:14:52 +0200 (Fri, 18 Aug 2006) | 1 line

  More version wibble
........
  r51364 | georg.brandl | 2006-08-18 09:27:59 +0200 (Fri, 18 Aug 2006) | 4 lines

  Bug #1541682: Fix example in the "Refcount details" API docs.
  Additionally, remove a faulty example showing PySequence_SetItem applied
  to a newly created list object and add notes that this isn't a good idea.
........
  r51366 | anthony.baxter | 2006-08-18 09:29:02 +0200 (Fri, 18 Aug 2006) | 3 lines

  Updating IDLE's version number to match Python's (as per python-dev
  discussion).
........
  r51367 | anthony.baxter | 2006-08-18 09:30:07 +0200 (Fri, 18 Aug 2006) | 1 line

  RPM specfile updates
........
  r51368 | georg.brandl | 2006-08-18 09:35:47 +0200 (Fri, 18 Aug 2006) | 2 lines

  Typo in tp_clear docs.
........
  r51378 | andrew.kuchling | 2006-08-18 15:57:13 +0200 (Fri, 18 Aug 2006) | 1 line

  Minor edits
........
  r51379 | thomas.heller | 2006-08-18 16:38:46 +0200 (Fri, 18 Aug 2006) | 6 lines

  Add asserts to check for 'impossible' NULL values, with comments.
  In one place where I'n not 1000% sure about the non-NULL, raise
  a RuntimeError for safety.

  This should fix the klocwork issues that Neal sent me.  If so,
  it should be applied to the release25-maint branch also.
........
  r51400 | neal.norwitz | 2006-08-19 06:22:33 +0200 (Sat, 19 Aug 2006) | 5 lines

  Move initialization of interned strings to before allocating the
  object so we don't leak op.  (Fixes an earlier patch to this code)

  Klockwork #350
........
  r51401 | neal.norwitz | 2006-08-19 06:23:04 +0200 (Sat, 19 Aug 2006) | 4 lines

  Move assert to after NULL check, otherwise we deref NULL in the assert.

  Klocwork #307
........
  r51402 | neal.norwitz | 2006-08-19 06:25:29 +0200 (Sat, 19 Aug 2006) | 2 lines

  SF #1542693: Remove semi-colon at end of PyImport_ImportModuleEx macro
........
  r51403 | neal.norwitz | 2006-08-19 06:28:55 +0200 (Sat, 19 Aug 2006) | 6 lines

  Move initialization to after the asserts for non-NULL values.

  Klocwork 286-287.

  (I'm not backporting this, but if someone wants to, feel free.)
........
  r51404 | neal.norwitz | 2006-08-19 06:52:03 +0200 (Sat, 19 Aug 2006) | 6 lines

  Handle PyString_FromInternedString() failing (unlikely, but possible).

  Klocwork #325

  (I'm not backporting this, but if someone wants to, feel free.)
........
  r51416 | georg.brandl | 2006-08-20 15:15:39 +0200 (Sun, 20 Aug 2006) | 2 lines

  Patch #1542948: fix urllib2 header casing issue. With new test.
........
  r51428 | jeremy.hylton | 2006-08-21 18:19:37 +0200 (Mon, 21 Aug 2006) | 3 lines

  Move peephole optimizer to separate file.
........
  r51429 | jeremy.hylton | 2006-08-21 18:20:29 +0200 (Mon, 21 Aug 2006) | 2 lines

  Move peephole optimizer to separate file.  (Forgot .h in previous checkin.)
........
  r51432 | neal.norwitz | 2006-08-21 19:59:46 +0200 (Mon, 21 Aug 2006) | 5 lines

  Fix bug #1543303, tarfile adds padding that breaks gunzip.
  Patch # 1543897.

  Will backport to 2.5
........
  r51433 | neal.norwitz | 2006-08-21 20:01:30 +0200 (Mon, 21 Aug 2006) | 2 lines

  Add assert to make Klocwork happy (#276)
........Whitespace normalization.Added docstrings excerpted from Python Library Reference.
Closes patch 556161.Merging the gen-branch into the main line, at Guido's direction.  Yay!
Bugfix candidate in inspect.py:  it was referencing "self" outside of
a method.Mark Hammond writes:

"""
If the filename being complained about contains a space, enclose the
file-name in quotes.

The reason is simply that when I try and parse tabnanny's output, filenames
with spaces make it very difficult to determine where the filename stops
and the linenumber begins!
"""

Tim approves.

I slightly changed the patch (use 'in' instead of string.find()) and
arbitrarily bumped the __version__ variable up to 6.Added a -q ('quiet') option to tabnanny, which causes only the names of
    offending files to be printed.  Good for emacs `tabnanny.py *.py`Print serious errors to stderr instead of stdout.typo in error message (fname vs. file).
(Jack)Tim Peters' program for checking whether a program's indentation is
sensitive to tab size.  Uses a different strategy than tabpolice.py,
but has compatible usage.Merged revisions 82779,82855,83740,83789-83791,83797-83801,83803,83811,83827,83844 via svnmerge from
svn+ssh://pythondev@svn.python.org/sandbox/trunk/2to3/lib2to3

........
  r82779 | benjamin.peterson | 2010-07-10 14:45:08 -0500 (Sat, 10 Jul 2010) | 1 line

  typo in attribute name #9217
........
  r82855 | benjamin.peterson | 2010-07-13 16:27:38 -0500 (Tue, 13 Jul 2010) | 1 line

  remove more extraneous commas #9245
........
  r83740 | alexandre.vassalotti | 2010-08-05 01:58:36 -0500 (Thu, 05 Aug 2010) | 4 lines

  Issue 5077: Update fixer for the other functions gone from the operator module.

  Patch by Meador Inge.
........
  r83789 | benjamin.peterson | 2010-08-07 17:45:14 -0500 (Sat, 07 Aug 2010) | 1 line

  cleanup and use unicode consistently
........
  r83790 | benjamin.peterson | 2010-08-07 17:52:06 -0500 (Sat, 07 Aug 2010) | 1 line

  unicode literal
........
  r83791 | benjamin.peterson | 2010-08-07 17:52:55 -0500 (Sat, 07 Aug 2010) | 1 line

  .get() is pointless here
........
  r83797 | benjamin.peterson | 2010-08-07 18:54:51 -0500 (Sat, 07 Aug 2010) | 1 line

  add a function to find how a node is indented
........
  r83798 | benjamin.peterson | 2010-08-07 18:55:28 -0500 (Sat, 07 Aug 2010) | 1 line

  when splitting import statements, use correct indentation #9386
........
  r83799 | benjamin.peterson | 2010-08-07 18:57:43 -0500 (Sat, 07 Aug 2010) | 1 line

  double quotes
........
  r83800 | benjamin.peterson | 2010-08-07 18:58:52 -0500 (Sat, 07 Aug 2010) | 1 line

  add another test
........
  r83801 | benjamin.peterson | 2010-08-07 19:02:10 -0500 (Sat, 07 Aug 2010) | 1 line

  cleanup; style-nits
........
  r83803 | benjamin.peterson | 2010-08-07 19:05:08 -0500 (Sat, 07 Aug 2010) | 1 line

  slightly more explicit
........
  r83811 | benjamin.peterson | 2010-08-07 22:56:44 -0500 (Sat, 07 Aug 2010) | 4 lines

  Fix node.pre_order() to call the right method on its children.

  This was a rather tragic copy-paste error.
........
  r83827 | benjamin.peterson | 2010-08-08 08:12:48 -0500 (Sun, 08 Aug 2010) | 1 line

  cause test to actually run and fix it
........
  r83844 | benjamin.peterson | 2010-08-08 13:46:37 -0500 (Sun, 08 Aug 2010) | 1 line

  fix whitespace
........Merged revisions 73370 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

................
  r73370 | benjamin.peterson | 2009-06-11 17:06:46 -0500 (Thu, 11 Jun 2009) | 105 lines

  Merged revisions 72523,72950-72951,72994,73003,73033,73036-73040,73091-73093,73096,73179-73181,73192,73231,73244,73255-73256,73365 via svnmerge from
  svn+ssh://pythondev@svn.python.org/sandbox/trunk/2to3/lib2to3

  ........
    r72523 | benjamin.peterson | 2009-05-09 14:42:26 -0500 (Sat, 09 May 2009) | 1 line

    remove parenthesis
  ........
    r72950 | benjamin.peterson | 2009-05-26 18:19:45 -0500 (Tue, 26 May 2009) | 1 line

    remove unused imports
  ........
    r72951 | benjamin.peterson | 2009-05-26 18:27:00 -0500 (Tue, 26 May 2009) | 1 line

    this is no longer executable
  ........
    r72994 | benjamin.peterson | 2009-05-28 15:32:54 -0500 (Thu, 28 May 2009) | 1 line

    fix test_all_fixers on Windows #6134
  ........
    r73003 | benjamin.peterson | 2009-05-28 21:57:28 -0500 (Thu, 28 May 2009) | 4 lines

    make 2to3 test utilities easier to use with other applications (3to2)

    Patch by Joe Amenta
  ........
    r73033 | benjamin.peterson | 2009-05-29 16:58:32 -0500 (Fri, 29 May 2009) | 1 line

    update grammar for multi with statement
  ........
    r73036 | benjamin.peterson | 2009-05-29 17:33:20 -0500 (Fri, 29 May 2009) | 1 line

    simplify fix_unicode
  ........
    r73037 | benjamin.peterson | 2009-05-29 17:53:03 -0500 (Fri, 29 May 2009) | 1 line

    add custom error for pattern syntax errors
  ........
    r73038 | benjamin.peterson | 2009-05-29 17:55:00 -0500 (Fri, 29 May 2009) | 1 line

    complain if details are attached to a token
  ........
    r73039 | benjamin.peterson | 2009-05-29 18:00:28 -0500 (Fri, 29 May 2009) | 1 line

    add a test for whitespace
  ........
    r73040 | benjamin.peterson | 2009-05-29 18:01:17 -0500 (Fri, 29 May 2009) | 1 line

    a fix for emacs highlighting
  ........
    r73091 | benjamin.peterson | 2009-05-31 20:55:25 -0500 (Sun, 31 May 2009) | 1 line

    deprecate set_prefix() and get_prefix() in favor of a prefix property
  ........
    r73092 | benjamin.peterson | 2009-05-31 21:00:51 -0500 (Sun, 31 May 2009) | 1 line

    change hideous java naming scheme
  ........
    r73093 | benjamin.peterson | 2009-05-31 21:01:39 -0500 (Sun, 31 May 2009) | 1 line

    remove dated comment
  ........
    r73096 | benjamin.peterson | 2009-05-31 21:40:53 -0500 (Sun, 31 May 2009) | 1 line

    group tests
  ........
    r73179 | benjamin.peterson | 2009-06-03 13:09:53 -0500 (Wed, 03 Jun 2009) | 1 line

    handle the case where there's multiple trailers #6185
  ........
    r73180 | benjamin.peterson | 2009-06-03 13:18:05 -0500 (Wed, 03 Jun 2009) | 1 line

    scrap __main__ section
  ........
    r73181 | benjamin.peterson | 2009-06-03 13:24:48 -0500 (Wed, 03 Jun 2009) | 1 line

    remove shebang lines and __main__ sections
  ........
    r73192 | benjamin.peterson | 2009-06-03 19:16:30 -0500 (Wed, 03 Jun 2009) | 4 lines

    actually test something here

    Thanks to Joe Amenta for noticing.y
  ........
    r73231 | benjamin.peterson | 2009-06-04 13:38:50 -0500 (Thu, 04 Jun 2009) | 1 line

    remove unused variable
  ........
    r73244 | benjamin.peterson | 2009-06-05 08:39:25 -0500 (Fri, 05 Jun 2009) | 1 line

    allow fixers to give different options in setUp
  ........
    r73255 | benjamin.peterson | 2009-06-06 11:23:46 -0500 (Sat, 06 Jun 2009) | 1 line

    fix the except fixer on one line suites #6222
  ........
    r73256 | benjamin.peterson | 2009-06-06 11:27:40 -0500 (Sat, 06 Jun 2009) | 1 line

    test one-line else and finally clauses
  ........
    r73365 | benjamin.peterson | 2009-06-11 17:01:32 -0500 (Thu, 11 Jun 2009) | 1 line

    normalize whitespace
  ........
................Merged revisions 65026 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

................
  r65026 | benjamin.peterson | 2008-07-16 13:48:35 -0500 (Wed, 16 Jul 2008) | 9 lines

  Merged revisions 65025 via svnmerge from
  svn+ssh://pythondev@svn.python.org/sandbox/trunk/2to3/lib2to3

  ........
    r65025 | benjamin.peterson | 2008-07-16 13:46:30 -0500 (Wed, 16 Jul 2008) | 1 line

    remove use of has_key
  ........
................Merged revisions 65019 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

................
  r65019 | benjamin.peterson | 2008-07-16 12:01:46 -0500 (Wed, 16 Jul 2008) | 43 lines

  Merged revisions 64863,64868,64870,64942,65001-65002,65017-65018 via svnmerge from
  svn+ssh://pythondev@svn.python.org/sandbox/trunk/2to3/lib2to3

  ........
    r64863 | brett.cannon | 2008-07-10 19:42:32 -0500 (Thu, 10 Jul 2008) | 1 line

    Add urlparse -> urllib.parse to fix_imports.
  ........
    r64868 | brett.cannon | 2008-07-10 20:00:10 -0500 (Thu, 10 Jul 2008) | 1 line

    Add robotparser -> urllib.robotparser to fix_imports.
  ........
    r64870 | brett.cannon | 2008-07-11 00:56:27 -0500 (Fri, 11 Jul 2008) | 6 lines

    Fix the fixers for the new dbm package.

    Had to create a new fixer (fix_imports2) which did fixes in post-order. This
    because ``import anydbm`` was being translated into ``import dbm`` which was
    then subsequently changed into ``import dbm.ndbm``; one transform too many.
  ........
    r64942 | collin.winter | 2008-07-13 20:19:05 -0500 (Sun, 13 Jul 2008) | 1 line

    Add a comment explaining part of fix_imports.py
  ........
    r65001 | brett.cannon | 2008-07-16 00:11:12 -0500 (Wed, 16 Jul 2008) | 2 lines

    Remove some extraneous whitespace.
  ........
    r65002 | brett.cannon | 2008-07-16 00:12:04 -0500 (Wed, 16 Jul 2008) | 4 lines

    Implement a fixer for urllib(2).

    Thanks Nick Edds for the patch.
  ........
    r65017 | benjamin.peterson | 2008-07-16 11:04:19 -0500 (Wed, 16 Jul 2008) | 1 line

    fix 2to3 in Python 2.6
  ........
    r65018 | benjamin.peterson | 2008-07-16 11:55:21 -0500 (Wed, 16 Jul 2008) | 1 line

    normalize whitespace
  ........
................MAINT Remove outdated numpy and scipy backports (#16725)

* Remove unecessary numpy & scipy backports

* More fixes

* Remove unused importsENH Add check for non binary variables in OneHotEncoder. (#16585)

Co-authored-by: Thomas J Fan <thomasjpfan@gmail.com>
Co-authored-by: Guillaume Lemaitre <g.lemaitre58@gmail.com>ENH Add 'if_binary' option to drop argument of OneHotEncoder (#16245)
DOC numpydoc validation for OneHotEncoder and OrdinalEncoder (#15446)
MAINT simplify check_is_fitted to use any fitted attributes (#14545)
[MRG] DEP remove legacy mode from OneHotEncoder (#13855)
ENH: Add Drop Option to OneHotEncoder. (#12908)
FEA Refactor CategoricalEncoder into OneHotEncoder and OrdinalEncoder (#10523)

Deprecated some OneHotEncoder behaviourRemove more usage of APIs deprecated by PEP 451.modernize some modules' code by using with statement around open()Issue #15294: Fix a regression in pkgutil.extend_path()'s handling of nested namespace packages.issue 14660: Implement PEP 420, namespace packages.Remove RISCOS supportSF patch #806246:  use basestring where possible
(Contributed by George Yoshida.)Last week we discussed adding this module to the standard library.
Here's a draft.  I have no immediate use for it, but I'd like this to
be available for experimentation.  I may withdraw it or change it
radically up to and including the release of Python 2.3b1.Merge 3.3 (#4931)Issue #19544 and Issue #1180: Restore global option to ignore  ~/.pydistutils.cfg in Distutils, accidentally removed in backout of distutils2 changes.Issue #16706: get rid of os.errorMerged revisions 75893 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r75893 | tarek.ziade | 2009-10-28 00:06:10 +0100 (Wed, 28 Oct 2009) | 1 line

  Fixed #1180: Option to ignore ~/.pydistutils.cfg in Distutils
........Fix a bug in distutils.core's error handling.Get rid of dict.has_key(). Boy this has a lot of repercussions!
Not all code has been fixed yet; this is just a checkpoint...
The C API still has PyDict_HasKey() and _HasKeyString(); not sure
if I want to change those just yet.[Bug #233259] Ugly traceback for DistutilsPlatformError
  Fixed by catching all exceptions that are subclasses of DistutilsError,
  so only the error message will be printed.  You can still get the
  whole traceback by enabling the Distutils debugging mode.Fix a small bug when sys.argv[0] has an absolute path.
See http://mail.python.org/pipermail/distutils-sig/2002-November/003039.htmlFix unused local variables caught by pychecker.

Fixes a bug for Solaris pkgtool (bdist_pkgtool) that would have
prevented it from building subpackages.Make setup.py less chatty by default.

This is a conservative version of SF patch 504889.  It uses the log
module instead of calling print in various places, and it ignores the
verbose argument passed to many functions and set as an attribute on
some objects.  Instead, it uses the verbosity set on the logger via
the command line.

The log module is now preferred over announce() and warn() methods
that exist only for backwards compatibility.

XXX This checkin changes a lot of modules that have no test suite and
aren't exercised by the Python build process.  It will need
substantial testing.Standardize whitespace in function calls.Added 'run_setup()' to allow outsiders to run a setup script under
fairly tight control, and the '_setup_stop_after' and '_setup_distribution'
globals to provide the tight control.

This isn't entirely reliable yet: it dies horribly with a NameError on the
example PIL setup script in examples/pil_setup.py (at least with Python
1.5.2; untested with current Python).  There's some strangeness going
on with execfile(), but I don't understand it and don't have time
to track it down right now.Added 'script_name' and 'script_args' instance attributes to Distribution.
Changed 'core.setup()' so it sets them to reasonable defaults.
Tweaked how the "usage" string is generated: 'core' now provides
  'gen_usage()', which is used instead of 'USAGE'.
Modified "build_py" and "sdist" commands to refer to
  'self.distribution.script_name' rather than 'sys.argv[0]'.Changed to use the new 'grok_environment_error()' function instead of
muddling through IOError and OSError exception objects right here.Catch DistutilSetupError from the Distribution constructor.Use Distribution method 'dump_option_dicts()' for debugging output, and only
do so if DEBUG is true.Reformatted and updated many docstrings.Catch CCompiler exceptions in 'setup()'.Added the DEBUG global (set from the DISTUTILS_DEBUG environment variable).
Changed the exception-handling code in 'setup()' to re-raise exceptions
  if DEBUG is true.Added some debuging output (actually moved here from dist.py) --
dump the Distribution's 'command_options' dict after parsing config files,
and then after parsing the command line.Call 'parse_config_files()' at the appropriate point.
Tweaked error-generating code.Merged in code from the 0.1.5 release to handle IOError and OSError
exceptions better.Catch DistutilsOptionError in 'setup()' -- it's thrown either because of
errors in the setup script or on the command line, so shouldn't result
in a traceback.Catch DistutilsFileError in addition to DistutilsExecError in 'setup()'.Beefed up error-handling in 'setup()' a smidge:
handle OSError and DistutilsExecError now.Try to deal with pre-1.5.2 IOError exception objects.Changed references to the command class 'options' attribute to 'user_options'.
Related docstring changes.
Unrelated comment changes.When emitting a command-line error message, *say* it's an error.Made "verbose" mode the default; now you have to supply --quiet if you
  want no output.  Still no option for a happy medium though.
Added "--help" global option.
Changed 'parse_command_line()' to recognize help options (both for the
  whole distribution and per-command), and to distinguish "regular run"
  and "user asked for help" by returning false in the latter case.
Also in 'parse_command_line()', detect invalid command name on command
  line by catching DistutilsModuleError.
  a 'negative_opt' class attribute right after 'global_options'; changed
  how we call 'fancy_getopt()' accordingly.
Initialize 'maintainer' and 'maintainer_email' attributes to Distribution
  to avoid AttributeError when 'author' and 'author_email' not defined.
Initialize 'help' attribute in Command constructor (to avoid
  AttributeError when user *doesn't* ask for help).
In 'setup()':
  * show usage message before dying when we catch DistutilsArgError
  * only run commands if 'parse_command_line()' returned true (that
    way, we exit immediately when a help option is found)
  * catch KeyboardInterrupt and IOError from running commands
Bulked up usage message to show --help options.
Comment, docstring, and error message tweaks.Careful rethink of command options, distribution options, distribution
  attributes, etc.  Biggest change was to the Distribution constructor
  -- it now looks for an 'options' attribute, which contains values
  (options) that are explicitly farmed out to the commands.  Also,
  certain options supplied to Distribution (ie. in the 'setup()' call in
  setup.py) are now "command option aliases", meaning they are dropped
  right into a certain command rather than being distribution options.
  This is handled by a new Distribution class attribute,
  'alias_options'.
Various comment changes to reflect the new way-of-thinking.
Added 'get_command_name()' method to Command -- was assuming its
  existence all along as 'command_name()', so changed the code that
  needs it to call 'get_command_name()'.First checkin of real Distutils code.Normalize style per PEP-8Merged revisions 73121 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r73121 | tarek.ziade | 2009-06-02 00:22:13 +0200 (Tue, 02 Jun 2009) | 1 line

  improved distutils.dist test coverage, pep-8 compliancy
........Merged revisions 72671 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r72671 | antoine.pitrou | 2009-05-15 19:27:30 +0200 (ven., 15 mai 2009) | 3 lines

  Fix bootstrapping by removing uses of the copy module in distutils
........Wrap a comment to fit in 80 columns.
Use construction-syntax for an exception to make the argument easier
to read.Untabified.Standardize whitespace in function calls and docstrings.fix inconsistent use of tabs and spacesMore stylistic tweaks to the generic '--help-xxx' code.Stylistic/formatting changes to Rene Liebscher's '--help-xxx' patch.Patch from Rene Liebscher: this adds "--help-foo" options to list the
values that "--foo" can take for various commands: eg. what formats for
"sdist" and "bdist", what compilers for "build_ext" and "build_clib".

I have *not* reviewed this patch; I'm checking it in as-is because it also
fixes a paper-bag-over-head bug in bdist.py, and because I won't have
time to review it properly for several days: so someone else can
test it for me, instead!Only print debugging output if DEBUG true (and deleted some of the more
extraneous debug prints).Factored out code for extracting-or-creating one of the option
  dictionaries in 'self.command_options' to 'get_option_dict()'.
Simplified code in 'parse_config_files()' and 'parse_command_line()'
  accordingly.
Fixed code in constructor that processes the 'options' dictionary
  from the setup script so it actually works: uses the new
  'self.command_options' dictionary rather than creating command
  objects and calling 'set_option()' on them.Fixed so options from config files and command lines actually work:
  * 'get_command_obj()' now sets command attributes based on
    the 'command_options' dictionary
  * some typos fixed
  * kludged 'parse_config_files()' to re-initialize the ConfigParser
    instance after each file, so we know for sure which config
    file each option comes form
  * added lots of handy debugging outputMarching towards full support of config files: thoroughly overhauled the
command-line parsing code, splitting it up into several methods (new
methods: '_parse_command_opts()', '_show_help()') and making it put options
into the 'command_options' dictionary rather than instantiating command
objects and putting them there.

Lots of other little changes:
  * merged 'find_command_class()' and 'create_command_obj()' and
    called the result 'get_command_class()'
  * renamed 'find_command_obj()' to 'get_command_obj()', and added
    command object creation and maintenance of the command object cache to
    its responsibilities (taken over from 'create_command_obj()')
  * parse config files one-at-a-time, so we can keep track of the
    filename for later error reporting
  * tweaked some help messages
  * fixed up many obsolete comments and docstringsFixed #30583 -- Fixed handling JSONFields in XML serializer.

Co-authored-by: Chason Chaffin <chason@gmail.com>Fixed #26291 -- Allowed loaddata to handle forward references in natural_key fixtures.
Refs #27656 -- Updated django.core docstring verbs according to PEP 257.Fixed typos using https://github.com/vlajos/misspell_fixerFixed #21288 -- Fixed E126 pep8 warningsFixed #19998 -- Fixed --ignorenonexistent support for XML based fixtures.Reverting r14994 (at request of SmileyChris) because of some backwards compatibility issues that need to be resolved.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14995 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixes #13252 -- Use the natural key instead of the primary key when serializing

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14994 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #11486 -- Corrected the XML serializer to allow for the serialization of objects with a null PK value. Also includes migration of doctests to unittests (we have always been at war with doctests). Thanks to zdmytriv for the report, and Niall Kelly for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13862 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #4558 -- Modified XML serializer to handle whitespace better around None tags. Thanks to Bill Fenner <fenner@gmail.com> for the report and fix.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5727 bcc190cf-cafb-0310-a4f2-bffc1f526a37Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37Added various fixes to serializer implementations. Fixes mostly deal with handling nulls, non-integer primary key values (e.g., OneToOne fields or strings), and reconstruction of primary key references in related fields.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4718 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fixed #3390: the serializer can now contain forward references. Thanks, Russ.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4610 bcc190cf-cafb-0310-a4f2-bffc1f526a37Added initial cut at serialization framework, along with some basic tests and a stab at some docs.  This is all a bit rough right now, so expect some bumps.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3225 bcc190cf-cafb-0310-a4f2-bffc1f526a37Fine tune sanity (#53544)

* modify regex to use implicit charsets this should solve issues in py3 and unicode names
* fix issue with subgroups in yaml inventory
* clarify deprecation message
* separated per name warning from deprecation
* move noise to verbosity, simplify warnings
* fix docs to reflect actual 'good' practice
* change toggle to choice list to give users more optionsAdd toggle to control invalid character substitution in group names (#52748)

* make add_group return proper name
* ensure central transform/check
* added 'silent' option to avoid spamming current users
  those already using the plugins were used to the transformations, so no need to alert them
* centralized valid var names
* dont display dupes
* comment on regex
* added regex tests
  ini and script will now warn about deprecation
* more complete errormsg
Yaml inventory more tolerant (#48883)

* make yaml inv more tolerant to comments
* add tests for bad inventory processing

fixes #47254
inventory now errors for invalid group/host names (#45499)

* inventory now errors for invalid group/host names

also made yaml inventory slightly smarte

fixes #45493

* add some 'YAML protection' to ini plugin

* better msg

* avoid ranges as positive match

* pepe

* expand inherited instead of total overridehandle groups correctly when they are 'null' (#41698)

* handle groups correctly when they are 'null'

 - even if defined as mapping but having no keys, objects shoudl still be processed correctly
 - also add ansilbe_verbosity to vars not to display in ansible-inventory

fixes #41692only add group if properly defined

also corrected skip message as this has to do with type, not name

fixes #40850Do not silently skip YAML groups (#40660)
Revert "YAML inventory unit test: fix test inventory format (#33828)" (#33869)

This reverts commit dfb2f346d8141028ba8d4efd705671babc90ed3c.

https://github.com/ansible/ansible/pull/33828YAML inventory unit test: fix test inventory format (#33828)

* Fix YAML inventory unit test

* YAML inventory unit test: add checks

* YAML: add hosts without any group to ungroupedConfig continued (#31024)

* included inventory and callback in new config

allow inventory to be configurable
updated connection options settings
also updated winrm to work with new configs
removed now obsolete set_host_overrides
added notes for future bcoca, current one is just punting, it's future's problem
updated docs per feedback
added remove group/host methods to inv data
moved fact cache from data to constructed
cleaner/better options
fix when vars are added
extended ignore list to config dicts
updated paramiko connection docs
removed options from base that paramiko already handles
left the look option as it is used by other plugin types
resolve delegation
updated cache doc options
fixed test_script
better fragment merge for options
fixed proxy command
restore ini for proxy
normalized options
moved pipelining to class
updates for host_key_checking
restructured mixins

* fix typoFix exception upon display.warn() (#31876)

Fixes #31875warn on bad keys in grouphighlight dynamic parts of error msgcheck type to avoid typeerror tb

fixes #31290 by giving more meaningful messagedont validate group names in yaml pluginFix python3 and nonascii handling in inventory plugins

Fixes #30663allow for null values in yaml inventory (#26765)

* allow for null values in yaml inventory

* 3 dad3 dad3 dad3 dad3 dad3 dad3 dad3 dadfixed issue with null host varsbpo-33672: Fix Task.__repr__ crash with Cython's bogus coroutines (GH-7161)
bpo-32311: Implement asyncio.create_task() shortcut (#4848)

* Implement functionality
* Add documentationbpo-32262: Fix codestyle; use f-strings formatting where necessary. (#4775)
Merge 3.6 (asyncio)Merge 3.6 (issue #28372)Merge 3.6 (issue #26654)Merge (asyncio)Issue #28003: Implement PEP 525 -- Asynchronous Generators.merge 3.5Fix asyncio unittests in debug mode (Merge 3.5)Issue #24400: Fix CoroWrapper for 'async def' coroutinesAsyncio issue 222 / PR 231 (Victor Stinner) -- fix @coroutine functions without __name__. (Merged from 3.4 branch.)Merge 3.4 (asyncio)(Merge 3.4) asyncio: sync with Tulip

- CoroWrapper.__del__() now reuses repr(CoroWrapper) to log the "... was never
  yielded from" warning
- Improve CoroWrapper: copy also the qualified name on Python 3.4, not only on
  Python 3.5+(Merge 3.4) asyncio: sync with Tulip

- repr(Task) and repr(CoroWrapper) now also includes where these objects were
  created. If the coroutine is not a generator (don't use "yield from"), use
  the location of the function, not the location of the coro() wrapper.
- Fix create_task(): truncate the traceback to hide the call to create_task().(Merge 3.4) asyncio: sync with Tulip, add a new asyncio.coroutines moduleMerged revisions 69846 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r69846 | mark.dickinson | 2009-02-21 20:27:01 +0000 (Sat, 21 Feb 2009) | 2 lines

  Issue #5341: Fix a variety of spelling errors.
........Patch for issue 2848, mostly by Humberto Diogenes, with a couple of
small fixes by Barry.  This removes mimetools from the stdlib.Change some uses of cStringIO.StringIO to io.StringIO.
This is undoubtedly insufficient and in some cases just as broken as before.SF #515021, print the refused list to the DEBUGSTREAM, so the parameter is used
Note:  There is a TBD (aka FIXME) for how best to handle the refused addressesRemove unused import (PyChecker)Whitespace normalization.Issue #18922: Now The Lib/smtpd.py and Tools/i18n/msgfmt.py scripts write
their version strings to stdout, and not to sderr.Two bug fixes for problems reported by Sverre:

__getaddr(): Watch out for empty addresses that can happen when
something like "MAIL FROM:<CR>" is received.  This avoids the
IndexError and rightly returns an SMTP syntax error.

parseargs(): We didn't handle the 2-arg case where both the localspec
and the remotespec were provided on the command line.Script arguments localhost:localport and remotehost:remoteport are now
optional, and default to `localhost' and ports 8025 and 25
respectively.

SMTPChannel.__init__(): Calculate __fqdn using socket.getfqdn()
instead of gethostby*() and friends.  This allows us to run this
script even if we don't have access to dns (assuming the localhost is
configured properly).

Also, restore my precious page breaks.  Hands off, oh Whitespace
Normalizer!Merge pull request #3280 from pypa/feature/update-vendored-deps

Feature/update vendored depsMerge pull request #3259 from pypa/bugfix/resilient-parser

Update pythonfinder for resilient parsingMerge pull request #3254 from pypa/vendoring-update

Update requirementslib and pythonfinderbpo-36725: Refactor regrtest multiprocessing code (GH-12961)

Rewrite run_tests_multiprocess() function as a new MultiprocessRunner
class with multiple methods to better report errors and stop
immediately when needed.

Changes:

* Worker processes are now killed immediately if tests are
  interrupted or if a test does crash (CHILD_ERROR): worker
  processes are killed.
* Rewrite how errors in a worker thread are reported to
  the main thread. No longer ignore BaseException or parsing errors
  silently.
* Remove 'finished' variable: use worker.is_alive() instead
* Always compute omitted tests. Add Regrtest.get_executed() method.bpo-36725: regrtest: add TestResult type (GH-12960)

* Add TestResult and MultiprocessResult types to ensure that results
  always have the same fields.
* runtest() now handles KeyboardInterrupt
* accumulate_result() and format_test_result() now takes a TestResult
* cleanup_test_droppings() is now called by runtest() and mark the
  test as ENV_CHANGED if the test leaks support.TESTFN file.
* runtest() now includes code "around" the test in the test timing
* Add print_warning() in test.libregrtest.utils to standardize how
  libregrtest logs warnings to ease parsing the test output.
* support.unload() is now called with abstest rather than test_name
* Rename 'test' variable/parameter to 'test_name'
* dash_R(): remove unused the_module parameter
* Remove unused importsbpo-34279, regrtest: Issue a warning if no tests have been executed (GH-10150)
bpo-33718: regrtest keeps filters to re-run fails (GH-7291)

* No longer clear filters, like --match, to re-run failed tests in
  verbose mode (-w option).
* Tests result: always indicate if tests have been interrupted.
* Enhance tests summaryregrtest: repeat summary after re-run (GH-7159)

Using -w, when failing tests are re-run in verbose mode, display
again the tests results at the end.regrtest: add newlines in output for readabilityregrtest: nicer output for durations

Use milliseconds and minutes units, not only seconds.Merge from 3.5 for issue #25188.Issue #25220, libregrtest: Add runtest_ns() function

* Factorize code to run tests.
* run_test_in_subprocess() now pass the whole "ns" namespace to the child
  process.Issue #25220: Use print(flush=True) in libregrtest[redtube] Improve formats extraction and extract m3u8 formats (closes #25311, closes #25321)[redtube] Improve title extraction (#25208)
[redtube] Detect private videos (#23518)[redtube] Improve metadata extraction (closes #22492, closes #22615)[redtube] Fix duration extraction and update test
[redtube] Fix metadata extraction (closes #15472)[redtube] Fix formats extraction (closes #14122)[redtube] Add support for embed URLs[redtube] PEP 8[redtube] Extract all formats, duration, upload date and view count (Closes #9397)[redtube] Capture and output removed video message (#5281)[redtube] Modernize[redtube] Use unicode_literals[redtube] Add support for thumbnails

Signed-off-by: Philipp Hagemeister <phihag@phihag.de>[redtube] Fix search for title[redtube] add age_limit[redtube] pep8[redtube] Simplify[redtube] move into own filefeat(grouping): Added app matchers to fingerprints and grouping enhancers (#13161)
feat: Support Trimmed Function Names via raw_function (#12990)

Adds support for the new `raw_function` attribute.

Function for native now holds the trimmed function name and raw_function
holds the possibly truncated raw version. The legacy grouping strategy now
picks up the raw function name, newest newstyle works with the trimmed one.

This improves the user experience for heavily templated C++ code where one
can currently not actually currently tell what the name of a function in the
stacktrace is.feat(grouping): Add package matchers for grouping enhancers (#12731)

This adds matchers for frame "package" fields to grouping enhancers.feat(grouping): Support for grouping enhancements and fingerprinting (#12679)

This PR adds support for grouping enhancements and server side
fingerprinting. The former requires a newstyle grouping algorithm to be
selected, the former works for all grouping strategies. This also adds
UI to configure grouping enhancements and fingerprinting which is
feature flagged currently.

This UI is feature gated and likely never available to customers in the
current form except for testing purposes. A subset might become
available.feat(grouping): Support for grouping enhancements and fingerprinting (#12514)

This PR adds support for grouping enhancements and server side fingerprinting.
The former requires a newstyle grouping algorithm to be selected, the former
works for all grouping strategies. This also adds UI to configure grouping
enhancements and fingerprinting which is feature flagged currently.

This UI is feature gated and likely never available to customers in the current form
except for testing purposes. A subset might become available.

This rollup commit also includes some improvements to function trimming.[odnoklassniki] Detect paid videos
[ok] Add support for live streams[Odnoklassniki] fix api metadata request(fixes #14862)[odnoklassniki] extract m3u8 formats[odnoklassniki] fix format sorting for 1080p quality[ok] Extract start time[ok] Allow embeds without title (Closes #9303)[ok] Capture error message[ok] Sort formats[ok] Add support for youtube embeds[ok] Improve player regex[ok] Extract correct data-options (Closes #6726)[odnoklassniki] Fix extraction and extend _VALID_URL (closes #6726)[odnoklassniki] Use compat_urllib_parse_unquote[odnoklassniki] Make URL explicit[odnoklassniki] Support extraction from metadata URL (Closes #5813)[odnoklassniki] Fix extraction (Closes #5671)CI: unpin isort 5 (#35470)
D202 No blank lines allowed after function docstring (#31895)
pyperclip upgrade (#28471)
remove outdated gtk package from code (#26590)
DOC: Link to new PyPI instead legacy PyPI (#20872)
Update clipboard Qt-bindings for flexiblity and Python3 compatibility (#17723)
CLN: make submodules of pandas.util private (#16223)

* CLN: make submodules of pandas.util private

xref #13634

CLN: move pandas.util.*

validators, depr_module, decorators, print_versions

to _ leading

* CLN: move remaning extensions to _libs

* pandas.tools.hashing FutureWarning -> DeprecationWarningCLN: Remove "flake8: noqa" from even more files

Another round of house-cleaning that builds off #15867.  Likely to be
the last one for now.

Author: gfyoung <gfyoung17@gmail.com>

Closes #15872 from gfyoung/flake8-noqa-clean and squashes the following commits:

3e610f5 [gfyoung] CLN: Make pickle_compat.py flake8-able
05e067a [gfyoung] CLN: Make windows.py flake8-able
dc22c0a [gfyoung] CLN: Make clipboards.py flake8-able
90b00f0 [gfyoung] CLN: Make clipboard/__init__.py flake8-able
ccb44cc [gfyoung] CLN: Make engines.py flake8-ableBUG in clipboard (linux, python2) with unicode and separator (GH13747)

vendered updated version of Pyperclip

closes #13747
closes #14362
closes #12807
closes #12529

Author: Ajay Saxena <ajasaxen@Ajays-MacBook-Pro.local>
Author: Ajay Saxena <aileronajay@gmail.com>

Closes #14599 from aileronajay/master and squashes the following commits:

2aafb66 [Ajay Saxena] moved comment inside test and added github issue labels to test
b74fbc1 [Ajay Saxena] ignore lint test for pyperclip files
9db42d8 [Ajay Saxena] whatsnew conflict
1dca292 [Ajay Saxena] conflict resolution
98b61e8 [Ajay Saxena] merge conflict
cedb690 [Ajay Saxena] merge conflict in whats new file
7af95da [Ajay Saxena] merging lastest changes
ac8ae60 [Ajay Saxena] skip clipboard test if clipboard primitives are absent
b03ed56 [Ajay Saxena] changed whatsnew file
c0aafd7 [Ajay Saxena] Merge branch 'test_branch'
9946fb7 [Ajay Saxena] Merge branch 'master' of https://github.com/pandas-dev/pandas into test_branch
ed1375f [Ajay Saxena] Merge branch 'test_branch'
0665fd4 [Ajay Saxena] fixed linting and test case as per code review
d202fd0 [Ajay Saxena] added test for valid encoding, modified setup.py so that pandas/util/clipboard can be found
dd57ae3 [Ajay Saxena] code review changes and read clipboard invalid encoding test
71d58d0 [Ajay Saxena] testing encoding in kwargs to to_clipboard and test case for the same
02f87b0 [Ajay Saxena] removed duplicate files
825bbe2 [Ajay Saxena] all files related to pyperclip are under pandas.util.clipboard
c5a87d8 [Ajay Saxena] Merge branch 'test_branch' of https://github.com/aileronajay/pandas into test_branch
f708c2e [Ajay Saxena] Merge branch 'master' of https://github.com/aileronajay/pandas
d565b1f [Ajay Saxena] updated pyperclip to the latest version
14d94a0 [Ajay Saxena] changed the pandas util clipboard file to return unicode if the python version is 2, else str
66d8ebf [Ajay Saxena] removed the disabled tag for clipboard test so that we can check if they pass after this change
edb8553 [Ajay Saxena] refactored the new unicode test to be in sync with the rest of the file
c83d000 [Ajay Saxena] added test case for unicode round trip
fb922d6 [Ajay Saxena] changes for GH 13747Issue #16717: get rid of socket.error, replace with OSErrorFix Issue2244 - urllib unquotes user and password info multiple times - Patch by Theodore TurocySimplify the Request class.  The basic components of the parsed
Request are now available as public attributes, e.g. full_url and
host.  The accessor methods are deprecated.  The implementation
replace the complicated __getattr__ machinery with a _parse() method.

The response from an HTTP request is now an HTTPResponse instance
instead of an addinfourl() wrapper instance.  The wrapper provided
minimal extract functionality and was undocumented.  The API of
addinfourl() was preserved, except for close hooks, by adding a few
methods and public attributes to the HTTPResponse class.Merged revisions 77727 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r77727 | ezio.melotti | 2010-01-24 18:58:36 +0200 (Sun, 24 Jan 2010) | 1 line

  use assert[Not]IsInstance where appropriate
........Issue #7435:  Remove duplicate int/long tests, and other
references to long in py3k.  Patch provided by flox.Removed PyInt_GetMax and sys.maxint
I replaced sys.maxint with sys.maxsize in Lib/*.py. Does anybody see a problem with the change on Win 64bit platforms? Win 64's long is just 32bit but the sys.maxsize is now 2**63-1 on every 64bit platform.
Also added docs for sys.maxsize.Rip out 'long' and 'L'-suffixed integer literals.
(Rough first cut.)feat(sentry): Create 2nd Sentry client for frontend http reque… (#17180)

This was creating a lot of noise, and while I believe has some value, I think the noise outweighs its value. Lets move this to a separate project and maybe in the future we can evaluate if we can have APM transactions solve any needs.feat: Add rrweb to sentry staff sessionsfix: Make sure session is always defined

Fixes SENTRY-E0Zfeat(sdk): Add configurable self-tracingfeat(sdk): Improve JS SDK configuration

- Reuse existing environment / release configuration
- Add SENTRY_FRONTEND_WHITELIST_URLS settingfix: Only fetch public DSN oncefeat(api): Change `isSuperuser` for UI to disregard "active" s… (#15194)

Note: This intentionally does not use the "active" superuser flag as
the frontend should only ever use this flag as a hint that the user *can* be a superuser.
The API will always need to check to see if the superuser state is active for the user.

This is needed to support the case where you access a different org and get denied, but the UI
can open the sudo dialog if you are an "inactive" superuser so that you can authenticate yourself.fix(ui): Fix browser tracking in local environment (#14940)

This fixes Sentry tracking in local dev environments because by default, `whitelistUrls` == `settings.ALLOWED_HOSTS` == [*], but our browser SDK does not support globbing in `whitelistUrls`.feat(api): Add client-config API endpoint (#13922)

This anonymous API endpoint is used to hydrate a standalone sentry
frontend application.

This is the same data that is exposed in the `__initialData` window
variable when serving the app through django.Merge pull request #5146 from adrianeboyd/bugfix/assert-docs-equal-sents

Fix sents comparison in test utilSync Span __eq__ and __hash__ (#5005)

* Sync Span __eq__ and __hash__

Use the same tuple for `__eq__` and `__hash__`, including all attributes
except `vector` and `vector_norm`.

* Update entity comparison in tests

Update `assert_docs_equal()` test util to compare `Span` properties for
ents rather than `Span` objects.Revert #4334Move tests out of package (#4334)

* Move tests out of package

* Fix typoUpdate morphology branch from developMerge branch 'master' of ssh://github.com/explosion/spaCyREF: simplify core.algorithms, reshape.cut (#29385)
REF: implement module for shared constructor functions (#27551)
PERF/REF: improve performance of Series.searchsorted, PandasArray.searchsorted, collect functionality (#22034)
Merge pull request #5367 from adrianeboyd/feature/simplify-warnings-v2
Tidy up and auto-formatadd lemma option to displacy 'dep' visualiser (#5041)

* add lemma option to displacy 'dep' visualiser

* more compact list comprehension

* add option to doc

* fix test and add lemmas to util.get_doc

* fix capital

* remove lemma from get_doc

* cleanupMerge changes from masterMerge branch 'master' into feature/lemmatizerMerge master into develop. Big merge, many conflicts -- need to reviewDon't use deprecated Doc.merge call in displaCy

As reported here: https://stackoverflow.com/a/48464412/6400719Allow 'fine_grained' option in displaCy (see #1703)

Shows token.tag_ instead of token.pos_. Disabled by default, to not cause rendering issues for models with long fine-grained tags (e.g. merged morphological features).Merge branch 'master' of https://github.com/explosion/spaCyMerge pull request #1502 from explosion/develop

💫 Merge spaCy 2 into master 🎉Merge pull request #2807 from lzutao/fix-missing-space

Add blank space after linkmake missing pattern ansibleerror (#51397)

ansibleoptionserror should be limited to cli options
 (technically --limit makes this a bit grey but hosts: should not trigger the same error)add toggle for host pattern mismatch behaviour (#51199)

* add toggle for host pattern mismatch behaviour

	fixes #40030

* fixDon't display host pattern warning for empty groups (fixes #35255) (#39927)
dont warn on not matching 'all' (#32806)

* dont warn on not matching 'all'

the implicit localhost warning shoudl be enough

* centralized no hosts handling

also extended info on implicit onlyrestore hostpattern regex/glob behaviour

they are back to matching both groups and hosts when they are a glob/regex

fixes #32906allow implicit host to be grouped (#26614)

* allow implicit host to be grouped

also optimized patternmatching

fixes #24156

* resolved a great crimeUpdate vendored deps & prevent comparison of editable specifiers (#3750)

Update vendored deps & prevent comparison of editable specifierspython: Manually convert more percent-formatting to f-strings.

Signed-off-by: Anders Kaseorg <anders@zulip.com>python: Convert percent formatting to Python 3.6 f-strings.

Generated by pyupgrade --py36-plus.

Signed-off-by: Anders Kaseorg <anders@zulip.com>docs: Update URLs to use https://zulip.com.

We're migrating to using the cleaner zulip.com domain, which involves
changing all of our links from ReadTheDocs and other places to point
to the cleaner URL.register_server: Prompt for ToS inside the command.

This way, we don't need to tell new sysadmins how to rerun the script.register_server: Fix recommendation to run with python 2.

Since `python` is usually Python 2, this recommendation failed on most
systems.push bouncer: Fix instructions in register_server.py.register_server: Fix a typo.zilencer: Clean up logic around mobile push notifications signup.

This fixes exceptions when sending PMs in development (where we were
trying to connect to the localhost push bouncer, which we weren't
authorized for, but even if we were, it wouldn't work, since there's
no APNS/GCM certs).

At the same time, we also set and order of operations that ensures one
has the opportunity to adjust the server URL before submitting
anything to us.zilencer: Add automated signup system for push notifications.

Based on an initial version by Rishi Gupta.

Fixes #7325.[ndr:base:embed] Improve thumbnails extraction (closes #23731)[ndr:embed:base] Make separate formats extraction non fatal (closes #15203)[ndr:embed:base] Add missing ext for m3u8Merge branch 'remitamine-ndr'Fix typo of stderrConnection plugins network_cli and netconf (#32521)

* implements jsonrpc message passing for ansible-connection

* implements more generic mechanism for persistent connections
* starts persistent connection in task_executor if enabled and supported
* supports using network_cli as top level connection plugin
* enhances logging for persistent connection to stdout

* Update action plugins

* Fix Python3 RPC

* Fix Junos bytes<-->str issues

* supports using netconf as top level connection plugin

* Error message when running netconf on an unsupported platform
* Update tests

* Fix `authorize: yes` for `connection: local`

* Handle potentially JSON data in terminal

* Add clarifying detail if possible on ConnectionErrorMisc typo for Ansible

Signed-off-by: Abhijeet Kasurde <akasurde@redhat.com>Fix spelling mistakes (comments only) (#25564)

Original Author : klemens <ka7@github.com>

Taking over previous PR as per
https://github.com/ansible/ansible/pull/23644#issuecomment-307334525

Signed-off-by: Abhijeet Kasurde <akasurde@redhat.com>Be explicit about pickle protocol and encoding (#24454)

On Python3 and Python2 use pickle slightly differently so we need to be
explicit about some things.

If pickles could be shared between python2 and python3, as in
ansible-connection and the pickle cache, we need to specify the protocol
to use when dumping and the encoding to use for byte strings when
loading.

The dumping protocol needs to be no higher than 2 as python-2 only
supports up to protocol 2.  The encoding should usually be 'bytes' so
that python2 str type becomes python3 bytes type.  However, doing this
means that we must make sure that the objects being serialized properly
make their strings into text strings except when they're supposed to be
bytes.  If strings are improperly byte strings, they may cause
tracebacks on the receiving endcorrected some errors/typos and missing importfixed typoupdate shared services

added new daemonization function
documented existing functionsbpo-19610: Warn if distutils is provided something other than a list to some fields (#4685)

* Rather than raise TypeError, warn and call list() on the value.

* Fix tests, revise NEWS and whatsnew text.

* Revise documentation, a string is okay as well.

* Ensure 'requires' and 'obsoletes' are real lists.

* Test that requires and obsoletes are turned to lists.
Merged revisions 68415 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r68415 | tarek.ziade | 2009-01-09 00:56:31 +0100 (Fri, 09 Jan 2009) | 1 line

  fixed #4394 make the storage of the password optional in .pypirc
........Merged revisions 68033 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r68033 | tarek.ziade | 2008-12-29 23:23:53 +0100 (Mon, 29 Dec 2008) | 1 line

  fixed #4646 : distutils was choking on empty options arg in the setup function.
........Make dist_files a triple, with the Python target version included,
so that bdist_wininst can specify 'any'.Add the upload command. Make all dist commands register their
outputs with the distribution object.PEP 314 implementation (client side):
added support for the provides, requires, and obsoletes metadata fieldsoops. how did _that_ happen?Backing out the basic dependency checking (from pycon sprint).
This support was only a first cut, and doesn't deserve to be in
a released version (where we have to support it in an ongoing
manner)This allows additional commands to be provided for existing setup.py
scripts without modifying either the distutils installation or the
setup.py scripts of packages with which the new commands will be used.

Specifically, an option is added to distutils that allows additional
packages to be searched for command implementations in addition to
distutils.command.  The additional packages can be specified on the
command line or via the installation or personal configuration files
already loaded by distutils.

For discussion, see the thread starting with:

http://mail.python.org/pipermail/distutils-sig/2004-August/004112.html

This closes SF patch #102241.Whitespace normalization, via reindent.py.Add support for package data.

This is basically the support for package data from Phillip Eby's
setuptools package.  I've changed it only to fit it into the core
implementation rather than to live in subclasses, and added
documentation.Basic dependency checking. setup() has two new optional arguments
requires and provides. requires is a sequence of strings, of the
form 'packagename-version'. The dependency checking so far merely
does an '__import__(packagename)' and checks for packagename.__version__
You can also leave off the version, and any version of the package
will be installed.
There's a special case for the package 'python' - sys.version_info
is used, so
requires= ( 'python-2.3', )
just works.

Provides is of the same format as requires - but if it's not supplied,
a provides is generated by adding the version to each entry in packages,
or modules if packages isn't there.
Provides is currently only used in the PKG-INFO file. Shortly, PyPI
will grow the ability to accept these lines, and register will be
updated to send them.

There's a new command 'checkdep' command that runs these checks.
For this version, only greater-than-or-equal checking is done. We'll
add the ability to specify an optional operator later.[Bug #693470] 'licence' as an alias for 'license' doesn't work.
   This patch makes it work again.Make the Distribution() constructor forgiving of unknown keyword
arguments, triggering a warning instead of raising an exception.  (In
1.5.2/2.0, it will print to stderr.)

Bugfix candidate for all previous versions.  This changes behaviour,
but the old behaviour wasn't very useful.  If Distutils version X+1
adds a new keyword argument, using the new keyword means your setup.py
file won't work with Distutils version X any more.Don't use dir() to find instance attribute names.Add 'platforms' and 'keywords' attributes to the DistributionMetadata class,
    along with options to print them.
Add a finalize_options() method to Distribution to do final processing
    on the platform and keyword attributes
Add DistributionMetadata.write_pkg_info() method to write a PKG-INFO file
    into the release tree.Bug #409403: Signal an error if the distribution's metadata has no versionFix from Jack Jansen for the Mac and the Metrowerks compiler, posted
to the Distutils-SIG and archived at
http://mail.python.org/pipermail/distutils-sig/2000-November/001755.htmlJack Jansen: added 'get_command_list()' method, and Mac-specific code to
use it to generate a dialog for users to specify the command-line (because
providing a command-line with MacPython is so awkward).Fixed a grab-bag of typos spotted by Rob Hooft.Support for the "install_headers" command: distribution option 'headers'
and method 'has_headers()'.List data files are listed in the Distribution attribute 'data_files',
rather than 'data'.Patch from Bastien Kleineidam:
adds the 'install_data' and 'install_scripts' commands; these two
are trivial thanks to the 'install_misc' base class in cmd.py.
(Minor tweaks and commentary by me; the code is untested so far.)Preliminary support for config files:
  - added 'find_config_files()' and 'parse_config_files()' methods
  - added 'command_options' attribute
Comment/docstring updates.Fix how we generate the meta-data query methods to include 'get_fullname()'
and the other "composite meta-data" methods.Patch, originally from Bastian Kleineidam and savagely mutilated by me,
to add the "display metadata" options: --name, --version, --author,
and so forth.  Main changes:
  * added 'display_options' class attribute to list all the "display only"
    options (--help-commands plus the metadata options)
  * added DistributionMetadata class as a place to put the actual
    metadata information from the setup script (not to be confused with
    the metadata display options); the logic dealing with metadata
    (eg. return self.name or "UNKNOWN") is now  in this class
  * changed 'parse_command_line()' to use the new OO interface provided
    by fancy_getopt, mainly so we can get at the original order of
    options on the command line, so we can print multiple lines of
    distribution meta-data in the order specified by the user
  * added 'handle_display_options()' to handle display-only options
Also fixed some crufty old comments/docstrings.Cleaned up/simplified error-handling:
  - DistutilsOptionError is now documented as it's actually used, ie.
    to indicate bogus option values (usually user options, eg. from
    the command-line)
  - added DistutilsSetupError to indicate errors that definitely arise
    in the setup script
  - got rid of DistutilsValueError, and changed all usage of it to
    either DistutilsSetupError or ValueError as appropriate
  - simplified a bunch of option get/set methods in Command and
    Distribution classes -- just pass on AttributeError most of
    the time, rather than turning it into something elseRemoved global '--force' option -- just too vague a concept to be applicable
to all commands in the same way.  Several Command methods now either expect
'self.force' to be defined, or check if it is defined and assume it's
false if not.Reorganization: moved the Distribution class from core.py to dist.py, and
the Command class from core.py to cmd.py.  No other code needs changing
though; distutils.core still provides the Command and Distribution classes,
although indirectly now.Issue #27953: skip failing math and cmath tests for tan on OS X 10.4.Issue #26040: Improve test_math and test_cmath coverage and rigour. Thanks Jeff Allen.Merged revisions 74925 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r74925 | mark.dickinson | 2009-09-18 22:01:50 +0100 (Fri, 18 Sep 2009) | 2 lines

  Use skipUnless to skip math module tests on non-IEEE 754 platforms.
........Merged revisions 63542-63544,63546,63553,63563-63564,63567,63569,63576 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r63542 | mark.dickinson | 2008-05-22 20:35:30 -0500 (Thu, 22 May 2008) | 5 lines

  Issue #2819: Add math.sum, a function that sums a sequence of floats
  efficiently but with no intermediate loss of precision.  Based on
  Raymond Hettinger's ASPN recipe.  Thanks Jean Brouwers for the patch.
........
  r63543 | mark.dickinson | 2008-05-22 21:36:48 -0500 (Thu, 22 May 2008) | 2 lines

  Add tests for math.sum (Issue #2819)
........
  r63544 | mark.dickinson | 2008-05-22 22:30:01 -0500 (Thu, 22 May 2008) | 2 lines

  Better error reporting in test_math.py
........
  r63546 | raymond.hettinger | 2008-05-22 23:32:43 -0500 (Thu, 22 May 2008) | 1 line

  Tweak the comments and formatting.
........
  r63553 | mark.dickinson | 2008-05-23 07:07:36 -0500 (Fri, 23 May 2008) | 3 lines

  Skip math.sum tests on non IEEE 754 platforms, and on IEEE 754 platforms
  that exhibit the problem described in issue #2937.
........
  r63563 | martin.v.loewis | 2008-05-23 10:18:28 -0500 (Fri, 23 May 2008) | 3 lines

  Issue #1390: Raise ValueError in toxml when an invalid comment would
  otherwise be produced.
........
  r63564 | raymond.hettinger | 2008-05-23 12:21:44 -0500 (Fri, 23 May 2008) | 1 line

  Issue 2909: show how to name unpacked fields.
........
  r63567 | raymond.hettinger | 2008-05-23 12:34:34 -0500 (Fri, 23 May 2008) | 1 line

  Fix typo
........
  r63569 | martin.v.loewis | 2008-05-23 14:33:13 -0500 (Fri, 23 May 2008) | 3 lines

  Mention that the leaking of variables from list comprehensions
  is fixed in 3.0.
........
  r63576 | martin.v.loewis | 2008-05-24 04:36:45 -0500 (Sat, 24 May 2008) | 3 lines

  Don't try to get the window size if it was never set before.
  Fixes the test failure on Solaris.
........Make floating-point exception error messages slightly more verbose: in
particular, the error message now allows one to distinguish between a
ValueError arising from a singularity (e.g. log(0.)), which would
usually produce +-infinity in non-stop mode, and a ValueError resulting
from an invalid input (e.g. sqrt(-1.)), which would normally produce a
NaN in non-stop mode.Merged revisions 62386-62387,62389-62393,62396,62400-62402,62407,62409-62410,62412-62414,62418-62419 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r62386 | christian.heimes | 2008-04-19 04:23:57 +0200 (Sat, 19 Apr 2008) | 2 lines

  Added kill, terminate and send_signal to subprocess.Popen
  The bits and pieces for the Windows side were already in place. The POSIX side is trivial (as usual) and uses os.kill().
........
  r62387 | georg.brandl | 2008-04-19 10:23:59 +0200 (Sat, 19 Apr 2008) | 2 lines

  Fix-up docs for revision 62386.
........
  r62389 | georg.brandl | 2008-04-19 18:57:43 +0200 (Sat, 19 Apr 2008) | 2 lines

  #2369: clarify that copyfile() doesn't take a target directory.
........
  r62390 | georg.brandl | 2008-04-19 18:58:28 +0200 (Sat, 19 Apr 2008) | 2 lines

  #2634: clarify meaning of env parameter to spawn/exec*e.
........
  r62391 | georg.brandl | 2008-04-19 18:58:49 +0200 (Sat, 19 Apr 2008) | 2 lines

  #2633: clarify meaning of env parameter.
........
  r62392 | georg.brandl | 2008-04-19 18:59:16 +0200 (Sat, 19 Apr 2008) | 2 lines

  #2631: clarify IMPORT_NAME semantics.
........
  r62393 | georg.brandl | 2008-04-19 19:00:14 +0200 (Sat, 19 Apr 2008) | 2 lines

  :func: et al. should *not* include the parens.
........
  r62396 | mark.dickinson | 2008-04-19 20:51:48 +0200 (Sat, 19 Apr 2008) | 5 lines

  Additional tests for math.pow, and extra special-case
  handling code in math.pow, in the hope of making all
  tests pass on the alpha Tru64 buildbot.
........
  r62400 | mark.dickinson | 2008-04-19 21:41:52 +0200 (Sat, 19 Apr 2008) | 3 lines

  Additional special-case handling for math.pow.
  Windows/VS2008 doesn't like (-1)**(+-inf).
........
  r62401 | benjamin.peterson | 2008-04-19 21:47:34 +0200 (Sat, 19 Apr 2008) | 2 lines

  Complete documentation for errors argument of io's open and TextIOWrapper
........
  r62402 | mark.dickinson | 2008-04-19 22:31:16 +0200 (Sat, 19 Apr 2008) | 2 lines

  Document updates to math and cmath modules.
........
  r62407 | georg.brandl | 2008-04-19 23:28:38 +0200 (Sat, 19 Apr 2008) | 2 lines

  Update template for newest Sphinx.
........
  r62409 | mark.dickinson | 2008-04-19 23:35:35 +0200 (Sat, 19 Apr 2008) | 5 lines

  Correct documentation for math.pow;
  0**nan is nan, not 0.  (But nan**0 and 1**nan are 1.)

  Also fix minor typo: 'quite NaN' -> 'quiet NaN'
........
  r62410 | mark.dickinson | 2008-04-19 23:49:22 +0200 (Sat, 19 Apr 2008) | 4 lines

  Move asinh documentation to the proper place.
  Remove meaningless 'in radians' from inverse
  hyperbolic functions.
........
  r62412 | mark.dickinson | 2008-04-20 03:22:30 +0200 (Sun, 20 Apr 2008) | 5 lines

  Report additional diagnostic information in
  test_math, to help track down debian-alpha
  buildbot failure.
........
  r62413 | mark.dickinson | 2008-04-20 03:39:24 +0200 (Sun, 20 Apr 2008) | 3 lines

  FreeBSD doesn't follow C99 for modf(inf); so add explicit
  special-value handling to math.modf code.
........
  r62414 | mark.dickinson | 2008-04-20 06:13:13 +0200 (Sun, 20 Apr 2008) | 5 lines

  Yet more explicit special case handling to make
  math.pow behave on alpha Tru64.  All IEEE 754
  special values are now handled directly; only
  the finite**finite case is handled by libm.
........
  r62418 | mark.dickinson | 2008-04-20 18:13:17 +0200 (Sun, 20 Apr 2008) | 7 lines

  Issue 2662: Initialize special value tables dynamically (i.e. when
  cmath module is loaded) instead of statically. This fixes compile-time
  problems on platforms where HUGE_VAL is an extern variable rather than
  a constant.

  Thanks Hirokazu Yamamoto for the patch.
........
  r62419 | andrew.kuchling | 2008-04-20 18:54:02 +0200 (Sun, 20 Apr 2008) | 1 line

  Move description of math module changes; various edits to description of cmath changes
........Merged revisions 62380,62382-62383 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r62380 | christian.heimes | 2008-04-19 01:13:07 +0200 (Sat, 19 Apr 2008) | 3 lines

  I finally got the time to update and merge Mark's and my trunk-math branch. The patch is collaborated work of Mark Dickinson and me. It was mostly done a few months ago. The patch fixes a lot of loose ends and edge cases related to operations with NaN, INF, very small values and complex math.

  The patch also adds acosh, asinh, atanh, log1p and copysign to all platforms. Finally it fixes differences between platforms like different results or exceptions for edge cases. Have fun :)
........
  r62382 | christian.heimes | 2008-04-19 01:40:40 +0200 (Sat, 19 Apr 2008) | 2 lines

  Added new files to Windows project files
  More Windows related fixes are coming soon
........
  r62383 | christian.heimes | 2008-04-19 01:49:11 +0200 (Sat, 19 Apr 2008) | 1 line

  Stupid me. Py_RETURN_NAN should actually return something ...
........bpo-32155: Revert distutils.config change (#4618)

Revert distutils changes of the commit
696b501cd11dc429a0f661adeb598bfaf89e4112 and remove the realm
variable.bpo-32155: Bugfixes found by flake8 F841 warnings (#4608)

* distutils.config: Use the PyPIRCCommand.realm attribute if set
* turtledemo: wait until macOS osascript command completes to not
  create a zombie process
* Tools/scripts/treesync.py: declare 'default_answer' and
  'create_files' as globals to modify them with the command line
  arguments. Previously, -y, -n, -f and -a options had no effect.

flake8 warning: "F841 local variable 'p' is assigned to but never
used".Issue #20120: Merge with 3.5use the HTTPS for pypi uploadMerged revisions 76956 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r76956 | tarek.ziade | 2009-12-21 02:22:46 +0100 (Mon, 21 Dec 2009) | 1 line

  massive import cleaning in Distutils
........Merged revisions 63575 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r63575 | martin.v.loewis | 2008-05-24 11:00:04 +0200 (Sat, 24 May 2008) | 3 lines

  Use announce instead of print, to suppress output in
  the testsuite.
........Merged revisions 62998-63003,63005-63006,63009-63012,63014-63017,63019-63020,63022-63024,63026-63029,63031-63041,63043-63045,63047-63054,63056-63062 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r62998 | andrew.kuchling | 2008-05-10 15:51:55 -0400 (Sat, 10 May 2008) | 7 lines

  #1858 from Tarek Ziade:
  Allow multiple repositories in .pypirc; see http://wiki.python.org/moin/EnhancedPyPI
  for discussion.

  The patch is slightly revised from Tarek's last patch: I've simplified
  the PyPIRCCommand.finalize_options() method to not look at sys.argv.
  Tests still pass.
........
  r63000 | alexandre.vassalotti | 2008-05-10 15:59:16 -0400 (Sat, 10 May 2008) | 5 lines

  Cleaned up io._BytesIO.write().

  I am amazed that the old code, for inserting null-bytes, actually
  worked. Who wrote that thing? Oh, it is me... doh.
........
  r63002 | brett.cannon | 2008-05-10 16:52:01 -0400 (Sat, 10 May 2008) | 2 lines

  Revert r62998 as it broke the build (seems distutils.config is missing).
........
  r63014 | andrew.kuchling | 2008-05-10 18:12:38 -0400 (Sat, 10 May 2008) | 1 line

  #1858: add distutils.config module
........
  r63027 | brett.cannon | 2008-05-10 21:09:32 -0400 (Sat, 10 May 2008) | 2 lines

  Flesh out the 3.0 deprecation to suggest using the ctypes module.
........
  r63028 | skip.montanaro | 2008-05-10 22:59:30 -0400 (Sat, 10 May 2008) | 4 lines

  Copied two versions of the example from the interactive session.  Delete
  one.
........
  r63037 | georg.brandl | 2008-05-11 03:02:17 -0400 (Sun, 11 May 2008) | 2 lines

  reload() takes the module itself.
........
  r63038 | alexandre.vassalotti | 2008-05-11 03:06:04 -0400 (Sun, 11 May 2008) | 4 lines

  Added test framework for handling module renames.
  Factored the import guard in test_py3kwarn.TestStdlibRemovals into
  a context manager, namely test_support.CleanImport.
........
  r63039 | georg.brandl | 2008-05-11 03:06:05 -0400 (Sun, 11 May 2008) | 2 lines

  #2742: ``''`` is not converted to NULL in getaddrinfo.
........
  r63040 | alexandre.vassalotti | 2008-05-11 03:08:12 -0400 (Sun, 11 May 2008) | 2 lines

  Fixed typo in a comment of test_support.CleanImport.
........
  r63041 | alexandre.vassalotti | 2008-05-11 03:10:25 -0400 (Sun, 11 May 2008) | 2 lines

  Removed a dead line of code.
........
  r63043 | georg.brandl | 2008-05-11 04:47:53 -0400 (Sun, 11 May 2008) | 2 lines

  #2812: document property.getter/setter/deleter.
........
  r63049 | georg.brandl | 2008-05-11 05:06:30 -0400 (Sun, 11 May 2008) | 2 lines

  #1153769: document PEP 237 changes to string formatting.
........
  r63050 | georg.brandl | 2008-05-11 05:11:40 -0400 (Sun, 11 May 2008) | 2 lines

  #2809: elaborate str.split docstring a bit.
........
  r63051 | georg.brandl | 2008-05-11 06:13:59 -0400 (Sun, 11 May 2008) | 2 lines

  Fix typo.
........
  r63052 | georg.brandl | 2008-05-11 06:33:27 -0400 (Sun, 11 May 2008) | 2 lines

  #2709: clarification.
........
  r63053 | georg.brandl | 2008-05-11 06:42:28 -0400 (Sun, 11 May 2008) | 2 lines

  #2659: add ``break_on_hyphens`` to TextWrapper.
........
  r63057 | georg.brandl | 2008-05-11 06:59:39 -0400 (Sun, 11 May 2008) | 2 lines

  #2741: clarification of value range for address_family.
........
  r63058 | georg.brandl | 2008-05-11 07:09:35 -0400 (Sun, 11 May 2008) | 2 lines

  #2452: timeout is used for all blocking operations.
........
  r63059 | andrew.kuchling | 2008-05-11 09:33:56 -0400 (Sun, 11 May 2008) | 2 lines

  #1792: Improve performance of marshal.dumps() on large objects by increasing
  the size of the buffer more quickly.
........
  r63060 | andrew.kuchling | 2008-05-11 10:00:00 -0400 (Sun, 11 May 2008) | 1 line

  #1858: re-apply patch for this, adding the missing files
........
  r63061 | benjamin.peterson | 2008-05-11 10:13:25 -0400 (Sun, 11 May 2008) | 2 lines

  Add the "until" command to pdb
........
  r63062 | georg.brandl | 2008-05-11 10:17:13 -0400 (Sun, 11 May 2008) | 2 lines

  Add some sentence endings.
........Fixed configparser import in distutils.config.feat(Integrations): Unlink Slack identity (#19737)

Objective
We often see complaints from support that users get the error Sentry can't perform that action right now on your behalf when interacting with a Slack alert message (e.g. pressing ignore). The reason for the error is that the Slack identity is linked to a user that is not part of the organization for the Slack integration installation. Created an unlink identity view where the user can unlink their Slack identity.ref(slack): Add APM to Slack and use use ApiClient  (#18346)

* ref(slack): Add APM to Slack and use use ApiClientfeat(Slack): Instrument Slack to emit Datadog metrics (#17060)

* feat(Slack): Instrument Slack to emit Datadog metrics
fix(logging): prefix user_id to not conflict with other user_ids. (#16959)
logging(app-context): adds more logging context for slack api errors (#15557)
feat(api): Add url unfurls for incidents to slack integration (SEN-566)

Abstracted the unfurling code a little so that we can handle different types.ref(slack): Encapsulate Slack request logic outside endpoints (#8007)

There's a bunch of shared logic between the Slack Event and Action
endpoints. Particularly validating the request to ensure we have
everything needed to respond.

This pulls out a lot of that logic, along with some data access, into
separate objects to clean up the endpoint code a bit.feat(identity): Step 4 of removing org from IDP (#8571)

- Remove objects with org != 0
- Update reads/writes to be free of org
- Add unique constraint on (type, external_id)feat(identity): Double write/read IDP and Identity (#8540)

* feat(identity): Double write/read IDP and Identity

Step 2 of removing org from IdentityProvider.

- IDP get_or_create: replace with org=0
- IDP get: try org=0 first, then actual org
- Identity get_or_create: use whatever idp is given
- Identity get: try org=0 first, then actual org

This makes it so that new objects are created with org=0, and after bulk migrating the data to org=0 (using a script) all reads will go through org=0 objects.ref(identity): Change org to regular field in IdentityProvider (#8538)

* ref(identity): Change org to regular field in IdentityProvider

* Ignore sqlitefix(slack): Correctly respond to resolve errors
ref(slack): On response error, store full response
fix(slack): Use response_url to notify on link success

Using the chat.postEphemeral method doesn't guarantee that we can post
into a channel (it may be private where the bot has not yet been added).
Instead we can use the response_url given when the action was taken that
prompted the user to link their account, which is tied to the channel
they're linking from.

Fixes SENTRY-66Rfix(slack): Better use of ORM features (#7747)
feat(slack): Switch to workspace tokens
feat(slack): Add analytics to slack actions
fix(slack): Fix slack API discrepancy (#7092)
fix: Prefix slack logging keys

Some of these keys will already have been type-defined in kabana since
they're often used for sentry related data (event_id is a good example)
causing them to be rejected.feat(slack): Implement issue actions via slack

 * Implements Assign, Ignore, and Resolve (via dialog).

 * Refactor attachment generation to remove buttons when an action is
   completed on the issue from within slack.Replace KB unit with KiB (#4293)

kB (*kilo* byte) unit means 1000 bytes, whereas KiB ("kibibyte")
means 1024 bytes. KB was misused: replace kB or KB with KiB when
appropriate.

Same change for MB and GB which become MiB and GiB.

Change the output of Tools/iobench/iobench.py.

Round also the size of the documentation from 5.5 MB to 5 MiB.iobench.py: add more info in the header

Write the Python version, Unicode implementation and the platform.Fix a missing encoding argument when opening a text file in some of iobench's subtests.
(found by Georg)Merged revisions 77599-77601 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r77599 | antoine.pitrou | 2010-01-18 22:04:00 +0100 (lun., 18 janv. 2010) | 3 lines

  Add iobench to the Tools directory (see December python-dev discussion)
........
  r77600 | antoine.pitrou | 2010-01-18 22:10:31 +0100 (lun., 18 janv. 2010) | 3 lines

  Add ccbench to the Tools directory
........
  r77601 | antoine.pitrou | 2010-01-18 22:15:21 +0100 (lun., 18 janv. 2010) | 3 lines

  Add a NEWS entry for r77599 and r77600.
........deprecated the old urllib primitives in 3.3 urllib package - issue 10050merge from 3.2 - Fix Issue #13642: Unquote before b64encoding user:password during Basic Authentication.commit mergeSending the auth info as string. Fix BytesWarning: str() on a bytes instance Exception on buildbot.Fix Issue8123 - TypeError in urllib when trying to use HTTP authenticationMake urllib use HTTP/1.1.  It seems to work now, but hasn't been
carefully tested.Issue #4631: Fix urlopen() result when an HTTP response uses chunked encoding.Fixed #30750 -- Added support for check constraints on MySQL 8.0.16+.Refs #30593 -- Fixed introspection of check constraints columns on MariaDB.Refs #30593 -- Added _parse_constraint_columns() hook to introspection on MariaDB.Fixed #29480 -- Made MySQL backend retrieve constraint columns in their defined order.
Refs #27656 -- Updated django.db docstring verbs according to PEP 257.Fixed #27135 -- Made index introspection return Index.suffix.Fixed #27097 -- Added index type introspection to built-in db backends.Fixed #24653 -- Fixed MySQL database introspection when using read_default_file.Issue #10624: Use support.requires_IEEE_754 in all appropriate tests.Merged revisions 76948 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r76948 | mark.dickinson | 2009-12-20 20:34:44 +0000 (Sun, 20 Dec 2009) | 3 lines

  Issue #7554:  Various fixups in test_cmath.py:  remove code duplication,
  use new-style formatting.  Thanks Florent Xicluna for the patch.
........feat(api): Expand search capabilities on users

- Add is:superuser query
- Add permission:[permission] queryMerge pull request #5563 from getsentry/api/me

api: allow id:me on user query[api] improve user search capabilitiesapi: use UserEmail when searching for users (#4523)

Also spits out UserEmail information from User serializerAdd user list endpointpsrp - Fix raw and script tests for connection plugin (#55357)

* psrp - Fix raw and script tests for connection plugin

* Fix error propagation with raw in psrp

* uncomment testpsrp - fix unicode handling in Python 2 (#47461)

* psrp - fix unicode handling in Python 2

* skip psrp become test when on Server 2008Revert "WinRM/PSRP: Fix UTF-8 issue (#46998)" (#47447)

This reverts commit 1bb674034f78260d1cbe42b35c05cc462471a6f5.WinRM/PSRP: Fix UTF-8 issue (#46998)

* WinRM/PSRP: Fix UTF-8 issue

* added changelog fragmentinclude_vars: include main.yml (#51926)

Enhance the conditional check to include main.yml if it is not
from 'role/vars/'

Fixes: #29135

Signed-off-by: Abhijeet Kasurde <akasurde@redhat.com>Add ignore_unknown_extensions to include_vars for dir (#35809)

processing to ignore non-valid file extensions

Fixes #35745

Signed-off-by: Adam Miller <admiller@redhat.com>only validate extensions when using dir loading

fixes #18223Include vars updated to work with directories (#17207)

* New features for include_vars

include_vars.py now allows you to include an entire directory and its nested directories of variable files.

Added Features..

* Ignore by default *.md, *.py, and *.pyc
* Ignore any list of files.
* Only include files nested by depth (default=unlimited)
* Match only files matching (valid regex)
* Sort files alphabetically and load in that order.
* Sort directories alphabetically and load in that order.

```
    - include_vars: 'vars/all.yml'

    - name: include all.yml
      include_vars:
        file: 'vars/all.yml'

    - name: include all yml files in vars/all and all nested directories
      include_vars:
        dir: 'vars/all'

    - name: include all yml files in vars/all and all nested directories and save the output in test.
      include_vars:
        dir: 'vars/all'
        name: test

    - name: include all yml files in vars/services
      include_vars:
        dir: 'vars/services'
        depth: 1

    - name: include only bastion.yml files
      include_vars:
        dir: 'vars'
        files_matching: 'bastion.yml'

    - name: include only all yml files exception bastion.yml
      include_vars:
        dir: 'vars'
        ignore_files: 'bastion.yml'
```

* Added whitelist for file extensisions (yaml, yml, json)

* Removed unit tests in favor of integration testspython: Convert assignment type annotations to Python 3.6 style.

Commit split by tabbott; this has changes to scripts/, tools/, and
puppet/.

scripts/lib/hash_reqs.py, scripts/lib/setup_venv.py,
scripts/lib/zulip_tools.py, and tools/lib/provision.py are excluded so
tools/provision still gives the right error message on Ubuntu 16.04
with Python 3.5.

Generated by com2ann, with whitespace fixes and various manual fixes
for runtime issues:

-shebang_rules: List[Rule] = [
+shebang_rules: List["Rule"] = [

-trailing_whitespace_rule: Rule = {
+trailing_whitespace_rule: "Rule" = {

-whitespace_rules: List[Rule] = [
+whitespace_rules: List["Rule"] = [

-comma_whitespace_rule: List[Rule] = [
+comma_whitespace_rule: List["Rule"] = [

-prose_style_rules: List[Rule] = [
+prose_style_rules: List["Rule"] = [

-html_rules: List[Rule] = whitespace_rules + prose_style_rules + [
+html_rules: List["Rule"] = whitespace_rules + prose_style_rules + [

-    target_port: int = None
+    target_port: int

Signed-off-by: Anders Kaseorg <anders@zulipchat.com>python: Whitespace fixes from autopep8.

Generated by autopep8, with the setup.cfg configuration from #14532.
I’m not sure why pycodestyle didn’t already flag these.

Signed-off-by: Anders Kaseorg <anders@zulipchat.com>nagios: Fix use of wrong variable in check_rabbitmq_queue.

That was supposed to be queue_name, not queue - the latter leads to
nonsensical results.python: Further pyupgrade changes following merge conflict.

Signed-off-by: Anders Kaseorg <anders@zulipchat.com>check-rabbitmq-queue: Add a simple algorithm to analyze queue stats.

This new algorithm is designed to avoid monitoring paging when a queue
simply has bursty behavior.#19662: add decode_data to smtpd so you can get at DATA in bytes form.

Otherwise smtpd is restricted to 7bit clean data, since even if the
incoming data is actually utf-8, it will often break things to decode
it before parsing the message.

Patch by Maciej Szulik, with some adjustments (mostly the warning
support).#1745035: add limits for command and data size to smtpd; patch by Savio Sena.Avoid triggering DeprecationWarnings in test_smtpd and smtpd.Committing Py3k version of changelist 64080 and 64257, along with updated tests
for smtpd, which required updating with the new semantics.found_terminator(): Add a debug print showing the data.Use != instead of <>.  Sorry, Barry.Issue #3187: Better support for "undecodable" filenames.  Code by Victor
Stinner, with small tweaks by GvR.Fixed posixpath.normpath() to respect two leading slashes, but
turn three or more into a single slash. (This is in sync with POSIX
susv2 according to Fredrik.)Remove imports of string when string methods will do.added rewritten normpath from Moshe Zadka that does the right thing with
paths containing ..Patch suggested by Perry Stoll -- os.path.normpath(".//x") returned
"/x", should return "x".Added doc strings and reindented according to new standard, without tabs.
(Like ntpath.py, this was contributed by "Charles G. Waldman" <cgw@pgt.com>)* posixpath.py: Fix border cases in normpath ('/foo/..' should return '/')
* ftplib.py: made cwd() use 'CDUP' when dirname is '..'
* FL.py: added new constant FL_PLACE_FULLSCREEN* change default line numbers for 'list' in pdb.py
* changed eval() into getattr() in cmd.py
* added dirname(), basename() and (dummy) normath() to macpath.py
* renamed nntp.py to nntplib.py
* Made string.index() compatible with strop.index()
* Make string.atoi('') raise string.atoi_error rather than ValueError
* Added dirname() and normpath() to posixpath.STYLE: Specify target-version with black (#29607)
Fix matplotlib converter registering warning (#26770)
move late imports to top (#26750)
PLOT: Split matplotlib specific code from pandas plotting (#26414)
CLN: Replace comprehensions list/set/dict functions with corresponding symbols (#18383)
CLN: Lint for lists instead of generators in built-in Python functions (#18335)
Merge pull request #10370 from jreback/build

CI: use versioneer to have PEP440 versionsnot messing around

Signed-off-by: Kenneth Reitz <me@kennethreitz.org>Issue #27952: Merge fixcid.py from 3.5Use OESeeror instead of os.error (#16720)

Patch by Serhiy Storchaka.Merged revisions 55817-55961 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/branches/p3yk

................
  r55837 | guido.van.rossum | 2007-06-08 16:04:42 -0700 (Fri, 08 Jun 2007) | 2 lines

  PEP 3119 -- the abc module.
................
  r55838 | guido.van.rossum | 2007-06-08 17:38:55 -0700 (Fri, 08 Jun 2007) | 2 lines

  Implement part of PEP 3119 -- One Trick Ponies.
................
  r55847 | guido.van.rossum | 2007-06-09 08:28:06 -0700 (Sat, 09 Jun 2007) | 2 lines

  Different way to do one trick ponies, allowing registration (per PEP strawman).
................
  r55849 | guido.van.rossum | 2007-06-09 18:06:38 -0700 (Sat, 09 Jun 2007) | 3 lines

  Make sure that the magic looking for __hash__ (etc.) doesn't apply to
  real subclasses of Hashable.
................
  r55852 | guido.van.rossum | 2007-06-10 08:29:51 -0700 (Sun, 10 Jun 2007) | 2 lines

  Add some more examples, e.g. generators and dict views.
................
  r55853 | guido.van.rossum | 2007-06-10 08:31:59 -0700 (Sun, 10 Jun 2007) | 2 lines

  keys() and items() *are* containers -- just values() isn't.
................
  r55864 | georg.brandl | 2007-06-10 15:29:40 -0700 (Sun, 10 Jun 2007) | 2 lines

  PEP 3127: new octal literals, binary literals.
................
  r55865 | georg.brandl | 2007-06-10 15:31:37 -0700 (Sun, 10 Jun 2007) | 2 lines

  Some octal literal fixes in Tools.
................
  r55866 | georg.brandl | 2007-06-10 15:37:43 -0700 (Sun, 10 Jun 2007) | 2 lines

  Tokenizer changes for PEP 3127.
................
  r55867 | georg.brandl | 2007-06-10 15:37:55 -0700 (Sun, 10 Jun 2007) | 2 lines

  Some docs for PEP 3127.
................
  r55868 | georg.brandl | 2007-06-10 15:44:39 -0700 (Sun, 10 Jun 2007) | 2 lines

  Missed a place in intobject.c. Is that used anymore anyway?
................
  r55871 | neal.norwitz | 2007-06-10 18:31:49 -0700 (Sun, 10 Jun 2007) | 182 lines

  Merged revisions 55729-55868 via svnmerge from
  svn+ssh://pythondev@svn.python.org/python/trunk

  ........
    r55731 | neal.norwitz | 2007-06-01 00:29:12 -0700 (Fri, 01 Jun 2007) | 7 lines

    SF 1668596/1720897: distutils now copies data files
    even if package_dir is empty.

    This needs to be backported.  I'm too tired tonight.  It would be great
    if someone backports this if the buildbots are ok with it.  Otherwise,
    I will try to get to it tomorrow.
  ........
    r55732 | georg.brandl | 2007-06-01 04:33:33 -0700 (Fri, 01 Jun 2007) | 2 lines

    Bug #1722484: remove docstrings again when running with -OO.
  ........
    r55735 | georg.brandl | 2007-06-01 12:20:27 -0700 (Fri, 01 Jun 2007) | 2 lines

    Fix wrong issue number.
  ........
    r55739 | brett.cannon | 2007-06-01 20:02:29 -0700 (Fri, 01 Jun 2007) | 3 lines

    Have configure raise an error when building on AtheOS.  Code specific to AtheOS
    will be removed in Python 2.7.
  ........
    r55746 | neal.norwitz | 2007-06-02 11:33:53 -0700 (Sat, 02 Jun 2007) | 1 line

    Update expected birthday of 2.6
  ........
    r55751 | neal.norwitz | 2007-06-03 13:32:50 -0700 (Sun, 03 Jun 2007) | 10 lines

    Backout the original 'fix' to 1721309 which had no effect.
    Different versions of Berkeley DB handle this differently.
    The comments and bug report should have the details.  Memory is allocated
    in 4.4 (and presumably earlier), but not in 4.5.  Thus
    4.5 has the free error, but not earlier versions.

    Mostly update comments, plus make the free conditional.

    This fix was already applied to the 2.5 branch.
  ........
    r55752 | brett.cannon | 2007-06-03 16:13:41 -0700 (Sun, 03 Jun 2007) | 6 lines

    Make _strptime.TimeRE().pattern() use ``\s+`` for matching whitespace instead
    of ``\s*``.  This prevents patterns from "stealing" bits from other patterns in
    order to make a match work.

    Closes bug #1730389.  Will be backported.
  ........
    r55766 | hyeshik.chang | 2007-06-05 11:16:52 -0700 (Tue, 05 Jun 2007) | 4 lines

    Fix build on FreeBSD.  Bluetooth HCI API in FreeBSD is quite different
    from Linux's.  Just fix the build for now but the code doesn't
    support the complete capability of HCI on FreeBSD yet.
  ........
    r55770 | hyeshik.chang | 2007-06-05 11:58:51 -0700 (Tue, 05 Jun 2007) | 4 lines

    Bug #1728403: Fix a bug that CJKCodecs StreamReader hangs when it
    reads a file that ends with incomplete sequence and sizehint argument
    for .read() is specified.
  ........
    r55775 | hyeshik.chang | 2007-06-05 12:28:15 -0700 (Tue, 05 Jun 2007) | 2 lines

    Fix for Windows: close a temporary file before trying to delete it.
  ........
    r55783 | guido.van.rossum | 2007-06-05 14:24:47 -0700 (Tue, 05 Jun 2007) | 2 lines

    Patch by Tim Delany (missing DECREF). SF #1731330.
  ........
    r55785 | collin.winter | 2007-06-05 17:17:35 -0700 (Tue, 05 Jun 2007) | 3 lines

    Patch #1731049: make threading.py use a proper "raise" when checking internal state, rather than assert statements (which get stripped out by -O).
  ........
    r55786 | facundo.batista | 2007-06-06 08:13:37 -0700 (Wed, 06 Jun 2007) | 4 lines


    FTP.ntransfercmd method now uses create_connection when passive,
    using the timeout received in connection time.
  ........
    r55792 | facundo.batista | 2007-06-06 10:15:23 -0700 (Wed, 06 Jun 2007) | 7 lines


    Added an optional timeout parameter to function urllib2.urlopen,
    with tests in test_urllib2net.py (must have network resource
    enabled to execute them). Also modified test_urllib2.py because
    testing mock classes must take it into acount. Docs are also
    updated.
  ........
    r55793 | thomas.heller | 2007-06-06 13:19:19 -0700 (Wed, 06 Jun 2007) | 1 line

    Build _ctypes and _ctypes_test in the ReleaseAMD64 configuration.
  ........
    r55802 | georg.brandl | 2007-06-07 06:23:24 -0700 (Thu, 07 Jun 2007) | 3 lines

    Disallow function calls like foo(None=1).
    Backport from py3k rev. 55708 by Guido.
  ........
    r55804 | georg.brandl | 2007-06-07 06:30:24 -0700 (Thu, 07 Jun 2007) | 2 lines

    Make reindent.py executable.
  ........
    r55805 | georg.brandl | 2007-06-07 06:34:10 -0700 (Thu, 07 Jun 2007) | 2 lines

    Patch #1667860: Fix UnboundLocalError in urllib2.
  ........
    r55821 | kristjan.jonsson | 2007-06-07 16:53:49 -0700 (Thu, 07 Jun 2007) | 1 line

    Fixing changes to getbuildinfo.c that broke linux builds
  ........
    r55828 | thomas.heller | 2007-06-08 09:10:27 -0700 (Fri, 08 Jun 2007) | 1 line

    Make this test work with older Python releases where struct has no 't' format character.
  ........
    r55829 | martin.v.loewis | 2007-06-08 10:29:20 -0700 (Fri, 08 Jun 2007) | 3 lines

    Bug #1733488: Fix compilation of bufferobject.c on AIX.
    Will backport to 2.5.
  ........
    r55831 | thomas.heller | 2007-06-08 11:20:09 -0700 (Fri, 08 Jun 2007) | 2 lines

    [ 1715718 ] x64 clean compile patch for _ctypes, by Kristj?n Valur
    with small modifications.
  ........
    r55832 | thomas.heller | 2007-06-08 12:01:06 -0700 (Fri, 08 Jun 2007) | 1 line

    Fix gcc warnings intruduced by passing Py_ssize_t to PyErr_Format calls.
  ........
    r55833 | thomas.heller | 2007-06-08 12:08:31 -0700 (Fri, 08 Jun 2007) | 2 lines

    Fix wrong documentation, and correct the punktuation.
    Closes [1700455].
  ........
    r55834 | thomas.heller | 2007-06-08 12:14:23 -0700 (Fri, 08 Jun 2007) | 1 line

    Fix warnings by using proper function prototype.
  ........
    r55839 | neal.norwitz | 2007-06-08 20:36:34 -0700 (Fri, 08 Jun 2007) | 7 lines

    Prevent expandtabs() on string and unicode objects from causing a segfault when
    a large width is passed on 32-bit platforms.  Found by Google.

    It would be good for people to review this especially carefully and verify
    I don't have an off by one error and there is no other way to cause overflow.
  ........
    r55841 | neal.norwitz | 2007-06-08 21:48:22 -0700 (Fri, 08 Jun 2007) | 1 line

    Use macro version of GET_SIZE to avoid Coverity warning (#150) about a possible error.
  ........
    r55842 | martin.v.loewis | 2007-06-09 00:42:52 -0700 (Sat, 09 Jun 2007) | 3 lines

    Patch #1733960: Allow T_LONGLONG to accept ints.
    Will backport to 2.5.
  ........
    r55843 | martin.v.loewis | 2007-06-09 00:58:05 -0700 (Sat, 09 Jun 2007) | 2 lines

    Fix Windows build.
  ........
    r55845 | martin.v.loewis | 2007-06-09 03:10:26 -0700 (Sat, 09 Jun 2007) | 2 lines

    Provide LLONG_MAX for S390.
  ........
    r55854 | thomas.heller | 2007-06-10 08:59:17 -0700 (Sun, 10 Jun 2007) | 4 lines


    First version of build scripts for Windows/AMD64 (no external
    components are built yet, and 'kill_python' is disabled).
  ........
    r55855 | thomas.heller | 2007-06-10 10:55:51 -0700 (Sun, 10 Jun 2007) | 3 lines

    For now, disable the _bsddb, _sqlite3, _ssl, _testcapi, _tkinter
    modules in the ReleaseAMD64 configuration because they do not compile.
  ........
    r55856 | thomas.heller | 2007-06-10 11:27:54 -0700 (Sun, 10 Jun 2007) | 1 line

    Need to set the environment variables, otherwise devenv.com is not found.
  ........
    r55860 | thomas.heller | 2007-06-10 14:01:17 -0700 (Sun, 10 Jun 2007) | 1 line

    Revert commit 55855.
  ........
................
  r55880 | neal.norwitz | 2007-06-10 22:07:36 -0700 (Sun, 10 Jun 2007) | 5 lines

  Fix the refleak counter on test_collections.  The ABC metaclass creates
  a registry which must be cleared on each run.  Otherwise, there *seem*
  to be refleaks when there really aren't any.  (The class is held within
  the registry even though it's no longer needed.)
................
  r55884 | neal.norwitz | 2007-06-10 22:46:33 -0700 (Sun, 10 Jun 2007) | 1 line

  These tests have been removed, so they are no longer needed here
................
  r55886 | georg.brandl | 2007-06-11 00:26:37 -0700 (Mon, 11 Jun 2007) | 3 lines

  Optimize access to True and False in the compiler (if True)
  and the peepholer (LOAD_NAME True).
................
  r55905 | georg.brandl | 2007-06-11 10:02:26 -0700 (Mon, 11 Jun 2007) | 5 lines

  Remove __oct__ and __hex__ and use __index__ for converting
  non-ints before formatting in a base.

  Add a bin() builtin.
................
  r55906 | georg.brandl | 2007-06-11 10:04:44 -0700 (Mon, 11 Jun 2007) | 2 lines

  int(x, 0) does not "guess".
................
  r55907 | georg.brandl | 2007-06-11 10:05:47 -0700 (Mon, 11 Jun 2007) | 2 lines

  Add a comment to explain that nb_oct and nb_hex are nonfunctional.
................
  r55908 | guido.van.rossum | 2007-06-11 10:49:18 -0700 (Mon, 11 Jun 2007) | 2 lines

  Get rid of unused imports and comment.
................
  r55910 | guido.van.rossum | 2007-06-11 13:05:17 -0700 (Mon, 11 Jun 2007) | 2 lines

  _Abstract.__new__ now requires either no arguments or __init__ overridden.
................
  r55911 | guido.van.rossum | 2007-06-11 13:07:49 -0700 (Mon, 11 Jun 2007) | 7 lines

  Move the collections ABCs to a separate file, _abcoll.py, in order to avoid
  needing to import _collections.so during the bootstrap (this will become
  apparent in the next submit of os.py).

  Add (plain and mutable) ABCs for Set, Mapping, Sequence.
................
  r55912 | guido.van.rossum | 2007-06-11 13:09:31 -0700 (Mon, 11 Jun 2007) | 2 lines

  Rewrite the _Environ class to use the new collections ABCs.
................
  r55913 | guido.van.rossum | 2007-06-11 13:59:45 -0700 (Mon, 11 Jun 2007) | 72 lines

  Merged revisions 55869-55912 via svnmerge from
  svn+ssh://pythondev@svn.python.org/python/trunk

  ........
    r55869 | neal.norwitz | 2007-06-10 17:42:11 -0700 (Sun, 10 Jun 2007) | 1 line

    Add Atul Varma for patch # 1667860
  ........
    r55870 | neal.norwitz | 2007-06-10 18:22:03 -0700 (Sun, 10 Jun 2007) | 1 line

    Ignore valgrind problems on Ubuntu from ld
  ........
    r55872 | neal.norwitz | 2007-06-10 18:48:46 -0700 (Sun, 10 Jun 2007) | 2 lines

    Ignore config.status.lineno which seems new (new autoconf?)
  ........
    r55873 | neal.norwitz | 2007-06-10 19:14:39 -0700 (Sun, 10 Jun 2007) | 1 line

    Prevent these tests from running on Win64 since they don\'t apply there either
  ........
    r55874 | neal.norwitz | 2007-06-10 19:16:10 -0700 (Sun, 10 Jun 2007) | 5 lines

    Fix a bug when there was a newline in the string expandtabs was called on.
    This also catches another condition that can overflow.

    Will backport.
  ........
    r55879 | neal.norwitz | 2007-06-10 21:52:37 -0700 (Sun, 10 Jun 2007) | 1 line

    Prevent hang if the port cannot be opened.
  ........
    r55881 | neal.norwitz | 2007-06-10 22:28:45 -0700 (Sun, 10 Jun 2007) | 4 lines

    Add all of the distuils modules that don't seem to have explicit tests. :-(
    Move an import in mworkscompiler so that this module can be imported on
    any platform.  Hopefully this works on all platforms.
  ........
    r55882 | neal.norwitz | 2007-06-10 22:35:10 -0700 (Sun, 10 Jun 2007) | 4 lines

    SF #1734732, lower case the module names per PEP 8.

    Will backport.
  ........
    r55885 | neal.norwitz | 2007-06-10 23:16:48 -0700 (Sun, 10 Jun 2007) | 4 lines

    Not sure why this only fails sometimes on Unix machines. Better
    to disable it and only import msvccompiler on Windows since that's
    the only place it can work anyways.
  ........
    r55887 | neal.norwitz | 2007-06-11 00:29:43 -0700 (Mon, 11 Jun 2007) | 4 lines

    Bug #1734723: Fix repr.Repr() so it doesn't ignore the maxtuple attribute.

    Will backport
  ........
    r55889 | neal.norwitz | 2007-06-11 00:36:24 -0700 (Mon, 11 Jun 2007) | 1 line

    Reflow long line
  ........
    r55896 | thomas.heller | 2007-06-11 08:58:33 -0700 (Mon, 11 Jun 2007) | 3 lines

    Use "O&" in calls to PyArg_Parse when we need a 'void*' instead of "k"
    or "K" codes.
  ........
    r55901 | facundo.batista | 2007-06-11 09:27:08 -0700 (Mon, 11 Jun 2007) | 5 lines


    Added versionchanged flag to all the methods which received
    a new optional timeout parameter, and a versionadded flag to
    the socket.create_connection function.
  ........
................
  r55914 | guido.van.rossum | 2007-06-11 14:19:50 -0700 (Mon, 11 Jun 2007) | 3 lines

  New super() implementation, for PEP 3135 (though the PEP is not yet updated
  to this design, and small tweaks may still be made later).
................
  r55923 | guido.van.rossum | 2007-06-11 21:15:24 -0700 (Mon, 11 Jun 2007) | 4 lines

  I'm guessing this module broke when Neal ripped out the types module --
  it used 'list' both as a local variable and as the built-in list type.
  Renamed the local variable since that was easier.
................
  r55924 | guido.van.rossum | 2007-06-11 21:20:05 -0700 (Mon, 11 Jun 2007) | 5 lines

  Change all occurrences of super(<thisclass>, <firstarg>) to super().
  Seems to have worked, all the tests still pass.
  Exception: test_descr and test_descrtut, which have tons of these
  and are there to test the various usages.
................
  r55939 | collin.winter | 2007-06-12 13:57:33 -0700 (Tue, 12 Jun 2007) | 1 line

  Patch #1735485: remove StandardError from the exception hierarchy.
................
  r55954 | neal.norwitz | 2007-06-12 21:56:32 -0700 (Tue, 12 Jun 2007) | 51 lines

  Merged revisions 55913-55950 via svnmerge from
  svn+ssh://pythondev@svn.python.org/python/trunk

  ........
    r55926 | marc-andre.lemburg | 2007-06-12 02:09:58 -0700 (Tue, 12 Jun 2007) | 3 lines

    Apply patch #1734945 to support TurboLinux as distribution.
  ........
    r55927 | marc-andre.lemburg | 2007-06-12 02:26:49 -0700 (Tue, 12 Jun 2007) | 3 lines

    Add patch #1726668: Windows Vista support.
  ........
    r55929 | thomas.heller | 2007-06-12 08:36:22 -0700 (Tue, 12 Jun 2007) | 1 line

    Checkout, but do not yet try to build, exernal sources.
  ........
    r55930 | thomas.heller | 2007-06-12 09:08:27 -0700 (Tue, 12 Jun 2007) | 6 lines

    Add bufferoverflowU.lib to the libraries needed by _ssl (is this the
    right thing to do?).

    Set the /XP64 /RETAIL build enviroment in the makefile when building
    ReleaseAMD64.
  ........
    r55931 | thomas.heller | 2007-06-12 09:23:19 -0700 (Tue, 12 Jun 2007) | 5 lines

    Revert this change, since it breaks the win32 build:

    Add bufferoverflowU.lib to the libraries needed by _ssl (is this the
    right thing to do?).
  ........
    r55934 | thomas.heller | 2007-06-12 10:28:31 -0700 (Tue, 12 Jun 2007) | 3 lines

    Specify the bufferoverflowU.lib to the makefile on the command line
    (for ReleaseAMD64 builds).
  ........
    r55937 | thomas.heller | 2007-06-12 12:02:59 -0700 (Tue, 12 Jun 2007) | 3 lines

    Add bufferoverflowU.lib to PCBuild\_bsddb.vcproj.
    Build sqlite3.dll and bsddb.
  ........
    r55938 | thomas.heller | 2007-06-12 12:56:12 -0700 (Tue, 12 Jun 2007) | 2 lines

    Don't rebuild Berkeley DB if not needed (this was committed by accident).
  ........
    r55948 | martin.v.loewis | 2007-06-12 20:42:19 -0700 (Tue, 12 Jun 2007) | 3 lines

    Provide PY_LLONG_MAX on all systems having long long.
    Will backport to 2.5.
  ........
................
  r55959 | guido.van.rossum | 2007-06-13 09:22:41 -0700 (Wed, 13 Jun 2007) | 2 lines

  Fix a compilation warning.
................Hand repair of cases where reindent changed lines of the form

\t\t\t\t\treal code
##\t\t\t\t\tunused code
\t\t\t\t\treal code

via untabifying and shifting the real code left.  Semantically the
same but made the intent of the commented-out-in-column-0 unused code
unclear.  The exact same unused code appears to have gotten copied from
file to file over the years.Various changes, andded -c optionInitial revision[MRG] Monotonic constraints for GBDT (#15582)
FIX  max_leaf_node and max_depth interaction in GBDT (#16183)

* fix max_leaf_node max_depth interaction

* Added test

* comment

* what's new

* simpler solution

* moved and simplified test

* typoENH Native support for missing values in GBDTs (#13911)

* Added NaN support in mapper

* pep

* WIP

* some more

* WIP

* WIP

* bug fix

* basic tests

* some doc

* avoid some interactions

* Added tag

* better test

* decent test + fix bug

* add missing_fraction param to benchmark

* bin training and validation data separately

* shorter test

* Map missing values to first bin instead of last

* pep8

* Added whats new entry

* avoid some python interactions

* make predict_binned work

* fixed bug due to offset in bin_thresholds_ attribute

* more sensible binning strat

* typo

* user name

* Add small test

* convert to fortran array in tests

* some doc

* Added function test

* pep8

* Bin validation data using binmaper of training data

* Allocate first bin for missing entries based on the whole data, not just
training data.

* Addressed Thomas' comments

* Update sklearn/ensemble/_hist_gradient_boosting/tests/test_grower.py

* Addressed Guillaume's comments

* always allocate first bin for missing values

* reduce diff

* minor more consistent test

* typo

* WIP

* some doc

* reduce diff

* pep8

* minor

* remove prints

* towards nan only splits

* don't check right to left on split_on_nan

* cleaups

* format and comment

* Fixed bug + added more tests

* refactor tests

* put back n_threads to max value

* minor changes

* minor cleaning

* Add (failing) test that checks equivalence with min max imputation

* Decrease the likelihood of ties when training the trees

* More robust test

* Fix pytest parametrization

* Check bin thresholds in test

* Try to make the test even easier to see if the Linux 32bit build would pass in this case

* Don't check last non-missing bin if there's no nan

* Improve min-max imputation test

* FIX: _find_best_bin_to_split_right_to_left is still required even when left to right wants to split on nans

* comments

* remove split_on_nan

* ooops deleted useless files

* Got rid of individual checks in predictor code

+inf thresholds are only allowed in a split on nan situation.
Thresholds that are computed as +inf are capped to a very high constant
value

* can also remove special case in binning code

* minor typos + more consistent test

* renamed types -> common

* 1e300 -> almost inf

* added user guide section on missing values

* Addressed Olivier's comment + updated whatsnew

* addressed comments

* Fix doctest formatting

* Fix nan predictive doctest[MRG+2] Faster Gradient Boosting Decision Trees with binned features (#12807)
[swfinterp] Improve undefined representation[swfinterp] Implement bitand and pushshort operators[swfinterp] Implement charCodeAt[swfinterp] Formalize built-in classes[swfinterp] Implement various opcodes[swfinterp] Add support for void methods[swfinterp] Implement pushtrue and pushfalse opcodes[swfinterp] Implement equals opcode[swfinterp] Implement String basics[swfinterp] Interpret yet more opcodes[swfinterp] Better error messagebpo-22831: Use "with" to avoid possible fd leaks in tools (part 2). (GH-10927)
bpo-32217: Correct usage of ABI tags in freeze. (GH-4719)

Check for sys.abiflags before using since not all platforms have it defined.bpo-35471: Remove the macpath module (GH-11129)

Python 2.4 dropped MacOS 9 support. The macpath module was deprecated
in Python 3.7. This change removes it.Issue #27355: Removed support for Windows CE.  It was never finished,
and Windows CE is no longer a relevant platform for Python.Issue #27626: Merge spelling fixes from 3.5Issue #25985: sys.version_info is now used instead of sys.version
to format short Python version.Issue #23911: Move path-based bootstrap code to a separate frozen module.Issue #22826: The result of open() in Tools/freeze/bkfile.py is now better
compatible with regular files (in particular it now supports the context
management protocol).Merge 3.4 (#16047)Merge 3.4: Issue #11824: Consider ABI tags in freeze. Patch by Meador Inge.#16135: Removal of OS/2 support (C code and Docs)Minimum fixes to make freeze.py do something useful.More 2to3 fixes in the Tools directory. Fixes #2893.some RiscOS stuff I missed before (was only looking for "RISCOS")Minimal changes to make the "freeze" tool work again.
There are other issues left, but these were basics (e.g. keys().sort()).Fix test_frozen.Remove apply()Small fixes in freeze.py.replace obsolete 'exceptions' implicit by 'warnings'[ 684677 ] Allow freeze to exclude implicitsUpdated freeze.py to the new Makefile symbol layout.
Fixed a few compiler warnings.

freeze.py now produces binaries which can import shared
modules (unlike before).Part 2/2 of SF patch #416704: More robust freeze, by Toby Dickenson.

(With slight cosmetic improvements to shorten lines and a grammar fix
to a docstring.)

This addes -X and -E options to freeze.  From the docstring:

-X module     Like -x, except the module can never be imported by
              the frozen binary.

-E:           Freeze will fail if any modules can't be found (that
              were not excluded using -x or -X).Separate CFLAGS and CPPFLAGS.  CFLAGS should not contain preprocessor
directives, which is the role of CPPFLAGS.  Closes SF patch #414991.Lawrence Hudson, SF #401702: Modify co_filename in frozen programs

  This patch was developed primarily to reduce the size of the
  frozen binary.  It is particularly useful when freezing for 'small'
  platforms, such as Palm OS, where you really want to save that
  last miserable byte.

  A limitation of this patch is that it does not provide any feedback
  about the replacements being made.  As the path matching
  is case-sensitive this may lead to unexpected behaviour for DOS
  and Windows people, eg
      > freeze.py -r C:\Python\Lib\=py\ goats.py
  should probably be:
      > freeze.py -r c:\python\lib\=py\ goats.pyPatch by Toby Dickenson, mentored by Mark Hammond, to support
automatically finding (most of) the standard PYD extensions, and to
remove the hardcoded Python version.Toby Dickenson:

Fix for problem with freeze when both "-m" and "-s service" options
are used.

(Blessed by MarkH)Bug submitted by Wayne Knowles, who writes:

   Under Windows, python freeze.py -o hello hello.py
   creates all the correct files in the hello subdirectory, but the
   Makefile has the directory prefix in it for frozen_extensions.c
   nmake fails because it tries to locate hello/frozen_extensions.c

(His fix adds a call to os.path.basename() in the appropriate place.)New version, with contributions from Sjoerd Mullender and Mark Hammond.
Sjoerd writes:

This version of freeze creates one file per Python module, instead of
one humongous file for all Python modules.
bkfile: new module to used to write files with backups.  No new file
is produced if the new contents is identical to the old.
New option "-x excluded-module" for modulefinder test program.
New option "-i filename" for freeze main program to include a list of
options in place of the -i option.Minor change for windows; set extensions_c later and set
frozendllmain_c at the right place.Jonathan Giddy:

The first one only shows up if $prefix != $exec_prefix, and the problem
is caused by the recent change in location for config.h.Add a feature to support specifying an additional search directory for
packages.  (Mark Hammond)

Folded some long lines.Freeze assumes that all built-in modules are part of the Python core.
This is not necessarily the case.  It is possible to create a Python
binary which contains built-in extension modules.  Therefore
checkextensions should be used for all unknown and builtin modules.
(Sjoerd Mullender)Big changes by Mark Hammond to support freezing with DLLs on Windows.Rearrange some stuff so that the warning for unknown modules is also
issued on Windows.When writing the Windows Makefile, don't forget to strip some filenames
of their output directory prefix.Fix typo -- -e takes a flag, -h doesn't.  Somehow the colon and the h
got transposed.Unfold some lines that were previously folded but don't need to be
now we're reindented.

Remove files before renaming something to them -- for Windows.

Change check for Python home directory so it works correct on Windows.Some nits...

Add the script directory to the path.

Fix the sanity checks on the arguments so they don't mess up the -m
option; remove the requirement that the script must have a .py
extension.Added support for packages.
We have a whole new module finder that uses the actual Python
parser and scans the bytecode for IMPORT_NAME and IMPORT_FROM.
This requires some support in import.c (that hasn't been checked in).
New command line options for this: -d, -q, -m.Untested changes to make the '-s windows' option
work on Windows.Add special handling for Python modules that are imported implicitly
by the Python runtime: 'site' and 'exceptions'.os2 patch by Jeff RushChanges for building under windows.Changed indents to 4 *spaces*; added Emacs variables to avoid
inserting tabs.  All this (and the previous patch) in preparation for
porting to NT.Support using -p/-P to point to the source/build directory instead of
the install directory.  Added -h option to print the full usage
message; by default, only two lines are now printed for errors.Updated for new style build/install; much simpler!OK, now it uses sys.[exec_]prefix and supports
a -o option to specify an output directory.  *Much* more convenient.
Removed a whole lot of hullabaloo from the README file, too.Changes for 1.4 install targetsAdd test that script name ends in .py.
Cosmetic changes to usage message (refer to "make install" now).added getpath.c; added -P exec_prefix; added explanatory notebackup Makefile tooLots of things added.  README written (mostly).Add check for unknown modulesTotally new "freeze" program.Jack's last version (now I'm supposed to get it working :-)Merge pull request #4385 from pypa/vendor/update

Update requirementslib to 1.5.12Merge pull request #4302 from pypa/vendors/update
Merge pull request #4196 from pypa/bugfix/4188
Update vendor packages (#3853)

Update vendor packagesEnsure we always respect --site-packages (#3836)

Ensure we always respect --site-packagesBugfix/3786 (#3787)

Bugfix/3786Fix keyerror in keep_outdated when using VCS dependencies (#3768)

Fix keyerror in keep_outdated when using VCS dependenciesbpo-41521: Replace whitelist/blacklist with allowlist/denylist (GH-21822)



Automerge-Triggered-By: @tiranbpo-38787: C API for module state access from extension methods (PEP 573) (GH-19936)

Module C state is now accessible from C-defined heap type methods (PEP 573).
Patch by Marcel Plch and Petr Viktorin.

Co-authored-by: Marcel Plch <mplch@redhat.com>
Co-authored-by: Victor Stinner <vstinner@python.org>bpo-37206: Unrepresentable default values no longer represented as None. (GH-13933)

In ArgumentClinic, value "NULL" should now be used only for unrepresentable default values
(like in the optional third parameter of getattr). "None" should be used if None is accepted
as argument and passing None has the same effect as not passing the argument at all.bpo-32892: Use ast.Constant instead of specific constant AST types. (GH-9445)
Issue #24001: Argument Clinic converters now use accept={type}
instead of types={'type'} to specify the types the converter accepts.#Issue 20456: Several improvements and bugfixes for Argument Clinic,
including correctly generating code for Clinic blocks inside C
preprocessor conditional blocks.Issue #20390: Small fixes and improvements for Argument Clinic.Issue #20381: Fix sanity checking on default arguments when c_default is
also specified.Issue #20189: Four additional builtin types (PyTypeObject,
PyMethodDescr_Type, _PyMethodWrapper_Type, and PyWrapperDescr_Type)
have been modified to provide introspection information for builtins.
Also: many additional Lib, test suite, and Argument Clinic fixes.Issue #20292: Small bug fix for Argument Clinic supporting format units
for strings with explicit encodings.Issue #20287: Argument Clinic's output is now configurable, allowing
delaying its output or even redirecting it to a separate file.Issue #20226: Major improvements to Argument Clinic.

* You may now specify an expression as the default value for a
  parameter!  Example: "sys.maxsize - 1".  This support is
  intentionally quite limited; you may only use values that
  can be represented as static C values.
* Removed "doc_default", simplified support for "c_default"
  and "py_default".  (I'm not sure we still even need
  "py_default", but I'm leaving it in for now in case a
  use presents itself.)
* Parameter lines support a trailing '\\' as a line
  continuation character, allowing you to break up long lines.
* The argument parsing code generated when supporting optional
  groups now uses PyTuple_GET_SIZE instead of PyTuple_GetSize,
  leading to a 850% speedup in parsing.  (Just kidding, this
  is an unmeasurable difference.)
* A bugfix for the recent regression where the generated
  prototype from pydoc for builtins would be littered with
  unreadable "=<object ...>"" default values for parameters
  that had no default value.
* Converted some asserts into proper failure messages.
* Many doc improvements and fixes.Issue #20214: Fixed a number of small issues and documentation errors in
Argument Clinic (see issue for details).Issue #20144: Argument Clinic now supports simple constants as parameter
default values.  inspect.Signature correspondingly supports them in
__text_signature__ fields for builtins.Issue #19730: Argument Clinic now supports all the existing PyArg
"format units" as legacy converters, as well as two new features:
"self converters" and the "version" directive.Two small, quick bugfixes for Argument Clinic.Issue #16612: Add "Argument Clinic", a compile-time preprocessor
for C files to generate argument parsing code.  (See PEP 436.)bpo-38787: Fix Argument Clinic defining_class_converter (GH-20074)

Don't hardcode defining_class parameter name to "cls":

* Define CConverter.set_template_dict(): do nothing by default
* CLanguage.render_function() now calls set_template_dict() on all
  converters.bpo-37034: Display argument name on errors with keyword arguments with Argument Clinic. (GH-13593)
bpo-36127: Argument Clinic: inline parsing code for keyword parameters. (GH-12058)
bpo-35582: Argument Clinic: Optimize the "all boring objects" case. (GH-11520)

Use _PyArg_CheckPositional() and inlined code instead of
PyArg_UnpackTuple() and _PyArg_UnpackStack() if all parameters
are positional and use the "object" converter.bpo-35582: Argument Clinic: inline parsing code for positional parameters. (GH-11313)
bpo-23867: Argument Clinic: inline parsing code for a single positional parameter. (GH-9689)
bpo-33012: Fix invalid function cast warnings with gcc 8 in Argument Clinic. (GH-6748)

Fix invalid function cast warnings with gcc 8
for method conventions different from METH_NOARGS, METH_O and
METH_VARARGS in Argument Clinic generated code.bpo-32240: Add the const qualifier to declarations of PyObject* array arguments. (#4746)
bpo-31926: fix missing *_METHODDEF statements by argument clinic (#4230)

When a single .c file contains several functions and/or methods with
the same name, a safety _METHODDEF #define statement is generated
only for one of them.

This fixes the bug by using the full name of the function to avoid
duplicates rather than just the name.bpo-29464: Rename METH_FASTCALL to METH_FASTCALL|METH_KEYWORDS and make (#1955)

the bare METH_FASTCALL be used for functions with positional-only
parameters.bpo-30600: Fix error messages (condition order in Argument Clinic) (#2051)

The function '_PyArg_ParseStack()' and
'_PyArg_UnpackStack' were failing (with error
"XXX() takes Y argument (Z given)") before
the function '_PyArg_NoStackKeywords()' was called.
Thus, the latter did not raise its more meaningful
error : "XXX() takes no keyword arguments".Argument Clinic: Use METH_FASTCALL for boring positionals

Issue #29286. Use METH_FASTCALL calling convention instead of METH_VARARGS to
parse "boring" position arguments. METH_FASTCALL is faster since it avoids the
creation of a temporary tuple to pass positional arguments.

Replace PyArg_UnpackTuple() with _PyArg_UnpackStack()+_PyArg_NoStackKeywords().Argument Clinic: Use METH_FASTCALL for positionals

Issue #29286. Use METH_FASTCALL calling convention instead of METH_VARARGS to
parse position arguments. METH_FASTCALL is faster since it avoids the creation
of a temporary tuple to pass positional arguments.Rename _PyArg_ParseStack to _PyArg_ParseStackAndKeywords

Issue #29286.Emit METH_FASTCALL code in Argument Clinic

Issue #27810:

* Modify vgetargskeywordsfast() to work on a C array of PyObject* rather than
  working on a tuple directly.
* Add _PyArg_ParseStack()
* Argument Clinic now emits code using the new METH_FASTCALL calling conventionIssue #27574: Decreased an overhead of parsing keyword arguments in functions
implemented with using Argument Clinic.Issue #26282: PyArg_ParseTupleAndKeywords() and Argument Clinic now support
positional-only and keyword parameters in the same function.Issue #26305: Argument Clinic now uses braces in C code as required by PEP 7.Issue #24007: Argument Clinic now writes the format of PyArg_Parse*() at the
same line as function name.Issue #23492: Argument Clinic now generates argument parsing code with
PyArg_Parse instead of PyArg_ParseTuple if possible.Issue #23500: Argument Clinic is now smarter about generating the "#ifndef"
(empty) definition of the methoddef macro: it's only generated once, even
if Argument Clinic processes the same symbol multiple times, and it's emitted
at the end of all processing rather than immediately after the first use.Issue #20294: Argument Clinic now supports argument parsing for __new__ and
__init__ functions.bpo-40126: Fix reverting multiple patches in unittest.mock. (GH-19351)

Patcher's __exit__() is now never called if its __enter__() is failed.
Returning true from __exit__() silences now the exception.bpo-26467: Adds AsyncMock for asyncio Mock library support (GH-9296)
unittest.mock: a mock created by patch with a spec as the list argument will be callable if __call__ is in the specAddition of docstrings to unittest.mock helpersSupport subclassing unittest.mock._patch and fix various obscure bugs around patcher spec argumentsPEP 417: Adding unittest.mockFix ansible-test self-test change classification.

Changes to sanity and unit tests now trigger the ansible-test self-test integration tests.

No changelog entry since this only affects tests for ansible itself and not collections.Remove `test/legacy/` directory. (#67786)

* Remove `test/legacy/` directory.

* Remove references to `test/legacy/` directory.

* Update the remaining valid legacy reference.

* Remove outdated legacy references.Support private test plugins in ansible-test. (#67660)

* Support private test plugins in ansible-test.

This feature is exclusively used for testing Ansible itself and is not available to collections.

Content in the newly supported directories will be added in follow-up PRs.

* Add new directory to path classification.

* Support new paths in shebang test.

* Add new directory to manifest.Relocate Shippable tools. (#67556)

* Move Shippable tools to hacking directory.

These limits the `test/utils/shippable/` directory to scripts required for CI.

* Fix `test/utils/shippable/` file classification.

* Update package-data sanity test.Code cleanup and refactoring in ansible-test. (#67063)

* Code cleanup in ansible-test.
* Split out encoding functions.
* Consoldate loading of JSON files.
* Split out disk IO functions.
* Simplify file access.
* Add functions for opening files.
* Replace open calls with appropriate functions.
* Expose more types from typing module.
* Support writing compact JSON.
* Add verbosity argument to display.warning.
* Add changelog entry.
* Update files overlooked during rebase.
* Use `io.open` instead of `open`.
* Fix file opening for imp.load_module.
* Remove use of `r+` mode to access files.
* Add missing import.
* Fix httptester on Python 2.x.
* Clarify changelog fragment.
* Consolidate imports. Remove extra newlines.
* Fix indirect imports.More ansible-test path handling updates. (#61484)

* Move test results vars into layout.

* Add test_path to layout.

* Add sanity_path to layout.

* Clean up layout.

* Update change classification.

* Improve classification layout.

* Relocate common classification code.

* Use is_subdir for relocated code.

* Relocate ansible test/units/compat/ hack.

* Fix variable shadowing.

* Remove unused code.

* Fix ordering of path tests.

* Clean up ansible classification.

* Fix hard-coded plugin paths in classification.

* Relocate more common classification.

* Fix logic.

* Fix pylint issue.

* Add missing licenses classification.Simplify flags checks in sre_compile.py. (GH-9718)

Flags SRE_FLAG_UNICODE and SRE_FLAG_ASCII are mutually exclusive.bpo-31690: Allow the inline flags "a", "L", and "u" to be used as group flags for RE. (#3885)
bpo-30340: Enhanced regular expressions optimization. (#1542)

This increased the performance of matching some patterns up to 25 times.bpo-30285: Optimize case-insensitive matching and searching (#1482)

of regular expressions.bpo-30277: Replace _sre.getlower() with _sre.ascii_tolower() and _sre.unicode_tolower(). (#1468)
bpo-30215: Make re.compile() locale agnostic. (#1361)

Compiled regular expression objects with the re.LOCALE flag no longer
depend on the locale at compile time.  Only the locale at matching
time affects the result of matching.Issue #433028: Added support of modifier spans in regular expressions.Issue #22364: Improved some re error messages using regex for hints.Minor code clean up and improvements in the re module.Issue #12728: Different Unicode characters having the same uppercase but
different lowercase are now matched in case-insensitive regular expressions.Issue #22434: Constants in sre_constants are now named constants (enum-like).Issue #17381: Fixed handling of case-insensitive ranges in regular expressions.
Added new opcode RANGE_IGNORE.Issue #17516: remove dead code[Bug #1177831] Fix generation of code for GROUPREF_EXISTS.  Thanks to Andre Malo for the fix.Complete the previous effort to factor out constant expressions
and improve the speed of the if/elif/else blocks.Simple optimizations:
* pre-build a single identity function for the fixup function
* pre-build membership tests in dictionaries instead of in-line tuples
* assign len() to a local variable
* assign append() methods to a local variable
* use xrange() instead of range()
* replace "x<<1" with "x+x"Implemented non-recursive SRE matching.SF patch #720991 by Gary Herron:
A small fix for bug #545855 and Greg Chapman's
addition of op code SRE_OP_MIN_REPEAT_ONE for
eliminating recursion on simple uses of pattern '*?' on a
long string.sre 2.1b2 update:

- take locale into account for word boundary anchors (#410271)
- restored 2.0's *? behaviour (#233283, #408936 and others)
- speed up re.sub/re.subnfrom the really-stupid-bug department: uppercase literals should match
uppercase strings also when the IGNORECASE flag is set (bug #128899)

(also added test cases for recently fixed bugs to the regression suite
-- or in other words, check in re_tests.py too...)-- reset marks if repeat_one tail doesn't match
   (this should fix Sjoerd's xmllib problem)
-- added skip field to INFO header
-- changed compiler to generate charset INFO header
-- changed trace messages to support post-mortem analysisfinal 0.9.8 updates:

-- added REPEAT_ONE operator
-- added ANY_ALL operator (used to represent "(?s).")SRE 0.9.8: passes the entire test suite

-- reverted REPEAT operator to use "repeat context" strategy
   (from 0.8.X), but done right this time.
-- got rid of backtracking stack; use nested SRE_MATCH calls
   instead (should probably put it back again in 0.9.9 ;-)
-- properly reset state in scanner mode
-- don't use aggressive inlining by default-- SRE 0.9.6 sync.  this includes:

 + added "regs" attribute
 + fixed "pos" and "endpos" attributes
 + reset "lastindex" and "lastgroup" in scanner methods
 + removed (?P#id) syntax; the "lastindex" and "lastgroup"
   attributes are now always set
 + removed string module dependencies in sre_parse
 + better debugging support in sre_parse
 + various tweaks to build under 1.5.2- fixed grouping error bug

- changed "group" operator to "groupref"- added lookbehind support (?<=pattern), (?<!pattern).
  the pattern must have a fixed width.

- got rid of array-module dependencies; the match pro-
  gram is now stored inside the pattern object, rather
  than in an extra string buffer.

- cleaned up a various of potential leaks, api abuses,
  and other minors in the engine module.

- use mal's new isalnum macro, rather than my own work-
  around.

- untabified test_sre.py.  seems like I removed a couple
  of trailing spaces in the process...- actually enabled charset anchors in the engine (still not
  used by the code generator)

- changed max repeat value in engine (to match earlier array fix)

- added experimental "which part matched?" mechanism to sre; see
  http://hem.passagen.se/eff/2000_07_01_bot-archive.htm#416954
  or python-dev for details.-- use charset bitmaps where appropriate.  this gives a 5-10%
   speedup for some tests, including the python tokenizer.

-- added support for an optional charset anchor to the engine
   (currently unused by the code generator).

-- removed workaround for array module bug.- fixed code generation error in multiline mode

- fixed parser flag propagation (of all stupid bugs...)- reverted to "\x is binary byte"

- removed evil tabs from sre_parse and sre_compilethe mad patcher strikes again:

-- added pickling support (only works if sre is imported)

-- fixed wordsize problems in engine
   (instead of casting literals down to the character size,
   cast characters up to the literal size (same as the code
   word size).  this prevents false hits when you're matching
   a unicode pattern against an 8-bit string. (unfortunately,
   this broke another test, but I think the test should be
   changed in this case; more on that on python-dev)

-- added sre.purge function
   (unofficial, clears the cache)- fixed lookahead assertions (#10, #11, #12)

- untabified sre_constants.py- pedantic: make sure "python -t" doesn't complain...- fixed split behaviour on empty matches

- fixed compiler problems when using locale/unicode flags

- fixed group/octal code parsing in sub/subn templatesstill trying to figure out how to fix the remaining
group reset problem.  in the meantime, I added some
optimizations:

- added "inline" directive to LOCAL

  (this assumes that AC_C_INLINE does what it's
  supposed to do).  to compile SRE on a non-unix
  platform that doesn't support inline, you have
  to add a "#define inline" somewhere...

- added code to generate a SRE_OP_INFO primitive

- added code to do fast prefix search

  (enabled by the USE_FAST_SEARCH define; default
  is on, in this release)- fixed split
  (test_sre still complains about split, but that's caused by
  the group reset bug, not split itself)

- added more mark slots
  (should be dynamically allocated, but 100 is better than 32.
  and checking for the upper limit is better than overwriting
  the memory ;-)

- internal: renamed the cursor helper class

- internal: removed some bloat from sre_compiletowards 1.6b1Fredrik Lundh: new snapshot.  Mostly reindented.
This one should work with unicode expressions, and compile
a bit more silently.This patch looks large, but it just deletes the ^M characters and
   untabifies the files.  No actual code changes were made.Added Fredrik Lundh's sre module and its supporting cast.

NOTE: THIS IS VERY ROUGH ALPHA CODE!Revert "bpo-37322: Fix test_ssl.test_pha_required_nocert() ResourceWarning (GH-14662)" (GH-14669)

This reverts commit cf9c41c422de3774862db964fe3153086bad3f61.bpo-37322: Fix test_ssl.test_pha_required_nocert() ResourceWarning (GH-14662)

Close the TLS connection in test_pha_required_nocert() of test_ssl to
fix a ResourceWarning.bpo-35926: Add support for OpenSSL 1.1.1b on Windows (GH-11779)
bpo-34670: Add TLS 1.3 post handshake auth (GH-9460)



Add SSLContext.post_handshake_auth and
SSLSocket.verify_client_post_handshake for TLS 1.3 post-handshake
authentication.

Signed-off-by: Christian Heimes <christian@python.org>q


https://bugs.python.org/issue34670bpo-33618: Enable TLS 1.3 in tests (GH-7079)

TLS 1.3 behaves slightly different than TLS 1.2. Session tickets and TLS
client cert auth are now handled after the initialy handshake. Tests now
either send/recv data to trigger session and client certs. Or tests
ignore ConnectionResetError / BrokenPipeError on the server side to
handle clients that force-close the socket fd.

To test TLS 1.3, OpenSSL 1.1.1-pre7-dev (git master + OpenSSL PR
https://github.com/openssl/openssl/pull/6340) is required.

Signed-off-by: Christian Heimes <christian@python.org>bpo-31370: Remove support for threads-less builds (#3385)

* Remove Setup.config
* Always define WITH_THREAD for compatibility.
Merge the trunk changes in. Breaks socket.ssl for now.

Merged revisions 57392-57619 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r57395 | georg.brandl | 2007-08-24 19:23:23 +0200 (Fri, 24 Aug 2007) | 2 lines

  Bug #1011: fix rfc822.Message.getheader docs.
........
  r57397 | georg.brandl | 2007-08-24 19:38:49 +0200 (Fri, 24 Aug 2007) | 2 lines

  Patch #1006: port test_winreg to unittest.
........
  r57398 | georg.brandl | 2007-08-24 19:46:54 +0200 (Fri, 24 Aug 2007) | 2 lines

  Fix #1012: wrong URL to :mod:`site` in install/index.rst.
........
  r57399 | georg.brandl | 2007-08-24 20:07:52 +0200 (Fri, 24 Aug 2007) | 2 lines

  Patch #1008: port test_signal to unittest.
........
  r57400 | georg.brandl | 2007-08-24 20:22:54 +0200 (Fri, 24 Aug 2007) | 2 lines

  Port test_frozen to unittest.
........
  r57401 | georg.brandl | 2007-08-24 20:27:43 +0200 (Fri, 24 Aug 2007) | 2 lines

  Document new utility functions in test_support.
........
  r57402 | georg.brandl | 2007-08-24 20:30:06 +0200 (Fri, 24 Aug 2007) | 2 lines

  Remove test_rgbimg output file, there is no test_rgbimg.py.
........
  r57403 | georg.brandl | 2007-08-24 20:35:27 +0200 (Fri, 24 Aug 2007) | 2 lines

  Remove output file for test_ossaudiodev, also properly close the dsp object.
........
  r57404 | georg.brandl | 2007-08-24 20:46:27 +0200 (Fri, 24 Aug 2007) | 2 lines

  Convert test_linuxaudiodev to unittest. Fix a wrong finally clause in test_ossaudiodev.
........
  r57406 | collin.winter | 2007-08-24 21:13:58 +0200 (Fri, 24 Aug 2007) | 1 line

  Convert test_pkg to use unittest.
........
  r57408 | georg.brandl | 2007-08-24 21:22:34 +0200 (Fri, 24 Aug 2007) | 2 lines

  Catch the correct errors.
........
  r57409 | georg.brandl | 2007-08-24 21:33:53 +0200 (Fri, 24 Aug 2007) | 2 lines

  Port test_class to unittest. Patch #1671298.
........
  r57415 | collin.winter | 2007-08-24 23:09:42 +0200 (Fri, 24 Aug 2007) | 1 line

  Make test_structmembers pass when run with regrtests's -R flag.
........
  r57455 | nick.coghlan | 2007-08-25 06:32:07 +0200 (Sat, 25 Aug 2007) | 1 line

  Revert misguided attempt at fixing incompatibility between -m and -i switches (better fix coming soon)
........
  r57456 | nick.coghlan | 2007-08-25 06:35:54 +0200 (Sat, 25 Aug 2007) | 1 line

  Revert compile.c changes that shouldn't have been included in previous checkin
........
  r57461 | nick.coghlan | 2007-08-25 12:50:41 +0200 (Sat, 25 Aug 2007) | 1 line

  Fix bug 1764407 - the -i switch now does the right thing when using the -m switch
........
  r57464 | guido.van.rossum | 2007-08-25 17:08:43 +0200 (Sat, 25 Aug 2007) | 4 lines

  Server-side SSL and certificate validation, by Bill Janssen.
  While cleaning up Bill's C style, I may have cleaned up some code
  he didn't touch as well (in _ssl.c).
........
  r57465 | neal.norwitz | 2007-08-25 18:41:36 +0200 (Sat, 25 Aug 2007) | 3 lines

  Try to get this to build with Visual Studio by moving all the variable
  declarations to the beginning of a scope.
........
  r57466 | neal.norwitz | 2007-08-25 18:54:38 +0200 (Sat, 25 Aug 2007) | 1 line

  Fix test so it is skipped properly if there is no SSL support.
........
  r57467 | neal.norwitz | 2007-08-25 18:58:09 +0200 (Sat, 25 Aug 2007) | 2 lines

  Fix a few more variables to try to get this to compile with Visual Studio.
........
  r57473 | neal.norwitz | 2007-08-25 19:25:17 +0200 (Sat, 25 Aug 2007) | 1 line

  Try to get this test to pass for systems that do not have SO_REUSEPORT
........
  r57482 | gregory.p.smith | 2007-08-26 02:26:00 +0200 (Sun, 26 Aug 2007) | 7 lines

  keep setup.py from listing unneeded hash modules (_md5, _sha*) as
  missing when they were not built because _hashlib with openssl provided
  their functionality instead.

  don't build bsddb185 if bsddb was built.
........
  r57483 | neal.norwitz | 2007-08-26 03:08:16 +0200 (Sun, 26 Aug 2007) | 1 line

  Fix typo in docstring (missing c in reacquire)
........
  r57484 | neal.norwitz | 2007-08-26 03:42:03 +0200 (Sun, 26 Aug 2007) | 2 lines

  Spell check (also americanify behaviour, it's almost 3 times as common)
........
  r57503 | neal.norwitz | 2007-08-26 08:29:57 +0200 (Sun, 26 Aug 2007) | 4 lines

  Reap children before the test starts so hopefully SocketServer
  won't find any old children left around which causes an exception
  in collect_children() and the test to fail.
........
  r57510 | neal.norwitz | 2007-08-26 20:50:39 +0200 (Sun, 26 Aug 2007) | 1 line

  Fail gracefully if the cert files cannot be created
........
  r57513 | guido.van.rossum | 2007-08-26 21:35:09 +0200 (Sun, 26 Aug 2007) | 4 lines

  Bill Janssen wrote:
  Here's a patch which makes test_ssl a better player in the buildbots
  environment.  I deep-ended on "try-except-else" clauses.
........
  r57518 | neal.norwitz | 2007-08-26 23:40:16 +0200 (Sun, 26 Aug 2007) | 1 line

  Get the test passing by commenting out some writes (should they be removed?)
........
  r57522 | neal.norwitz | 2007-08-27 00:16:23 +0200 (Mon, 27 Aug 2007) | 3 lines

  Catch IOError for when the device file doesn't exist or the user doesn't have
  permission to write to the device.
........
  r57524 | neal.norwitz | 2007-08-27 00:20:03 +0200 (Mon, 27 Aug 2007) | 5 lines

  Another patch from Bill Janssen that:
  1)  Fixes the bug that two class names are initial-lower-case.
  2)  Replaces the poll waiting for the server to become ready with
      a threading.Event signal.
........
  r57536 | neal.norwitz | 2007-08-27 02:58:33 +0200 (Mon, 27 Aug 2007) | 1 line

  Stop using string.join (from the module) to ease upgrade to py3k
........
  r57537 | neal.norwitz | 2007-08-27 03:03:18 +0200 (Mon, 27 Aug 2007) | 1 line

  Make a utility function for handling (printing) an error
........
  r57538 | neal.norwitz | 2007-08-27 03:15:33 +0200 (Mon, 27 Aug 2007) | 4 lines

  If we can't create a certificate, print a warning, but don't fail the test.
  Modified patch from what Bill Janssen sent on python-3000.
........
  r57539 | facundo.batista | 2007-08-27 03:15:34 +0200 (Mon, 27 Aug 2007) | 7 lines


  Ignore test failures caused by 'resource temporarily unavailable'
  exceptions raised in the test server thread, since SimpleXMLRPCServer
  does not gracefully handle them.  Changed number of requests handled
  by tests server thread to one (was 2) because no tests require more
  than one request. [GSoC - Alan McIntyre]
........
  r57561 | guido.van.rossum | 2007-08-27 19:19:42 +0200 (Mon, 27 Aug 2007) | 8 lines

  > Regardless, building a fixed test certificate and checking it in sounds like
  > the better option.  Then the openssl command in the test code can be turned
  > into a comment describing how the test data was pregenerated.

  Here's a patch that does that.

  Bill
........
  r57568 | guido.van.rossum | 2007-08-27 20:42:23 +0200 (Mon, 27 Aug 2007) | 26 lines

  > Some of the code sets the error string in this directly before
  > returning NULL, and other pieces of the code call PySSL_SetError,
  > which creates the error string.  I think some of the places which set
  > the string directly probably shouldn't; instead, they should call
  > PySSL_SetError to cons up the error name directly from the err code.
  > However, PySSL_SetError only works after the construction of an ssl
  > object, which means it can't be used there...  I'll take a longer look
  > at it and see if there's a reasonable fix.

  Here's a patch which addresses this.  It also fixes the indentation in
  PySSL_SetError, bringing it into line with PEP 7, fixes a compile warning
  about one of the OpenSSL macros, and makes the namespace a bit more
  consistent.  I've tested it on FC 7 and OS X 10.4.

  % ./python ./Lib/test/regrtest.py -R :1: -u all test_ssl
  test_ssl
  beginning 6 repetitions
  123456
  ......
  1 test OK.
  [29244 refs]
  %

  [GvR: slightly edited to enforce 79-char line length, even if it required
   violating the style guide.]
........
  r57570 | guido.van.rossum | 2007-08-27 21:11:11 +0200 (Mon, 27 Aug 2007) | 2 lines

  Patch 10124 by Bill Janssen, docs for the new ssl code.
........
  r57574 | guido.van.rossum | 2007-08-27 22:51:00 +0200 (Mon, 27 Aug 2007) | 3 lines

  Patch # 1739906 by Christian Heimes -- add reduce to functools (importing
  it from __builtin__).
........
  r57575 | guido.van.rossum | 2007-08-27 22:52:10 +0200 (Mon, 27 Aug 2007) | 2 lines

  News about functools.reduce.
........
  r57611 | georg.brandl | 2007-08-28 10:29:08 +0200 (Tue, 28 Aug 2007) | 2 lines

  Document rev. 57574.
........
  r57612 | sean.reifschneider | 2007-08-28 11:07:54 +0200 (Tue, 28 Aug 2007) | 2 lines

  Adding basic imputil documentation.
........
  r57614 | georg.brandl | 2007-08-28 12:48:18 +0200 (Tue, 28 Aug 2007) | 2 lines

  Fix some glitches.
........
  r57616 | lars.gustaebel | 2007-08-28 14:31:09 +0200 (Tue, 28 Aug 2007) | 5 lines

  TarFile.__init__() no longer fails if no name argument is passed and
  the fileobj argument has no usable name attribute (e.g. StringIO).

  (will backport to 2.5)
........
  r57619 | thomas.wouters | 2007-08-28 17:28:19 +0200 (Tue, 28 Aug 2007) | 22 lines


  Improve extended slicing support in builtin types and classes. Specifically:

   - Specialcase extended slices that amount to a shallow copy the same way as
     is done for simple slices, in the tuple, string and unicode case.

   - Specialcase step-1 extended slices to optimize the common case for all
     involved types.

   - For lists, allow extended slice assignment of differing lengths as long
     as the step is 1. (Previously, 'l[:2:1] = []' failed even though
     'l[:2] = []' and 'l[:2:None] = []' do not.)

   - Implement extended slicing for buffer, array, structseq, mmap and
     UserString.UserString.

   - Implement slice-object support (but not non-step-1 slice assignment) for
     UserString.MutableString.

   - Add tests for all new functionality.
........bpo-39930: Convert error to warning for more silent failure (GH-18921)

Makes it an error to create a layout without vcruntime DLLbpo-38519: Internal include files missing on Windows (GH-16921)
Remove versioned executables from non-APPX packages (GH-15237)
bpo-37734: Fix use of registry values to launch Python from Microsoft Store app (GH-15146)
bpo-37672: Switch Windows Store package to use pip.ini for user mode (GH-14939)
Implement Windows release builds in Azure Pipelines (GH-14065)
bpo-35683: Improve Azure Pipelines steps (GH-11493)

bpo-34977: Add Windows App Store package (GH-11027)

Also adds the PC/layout script for generating layouts on Windows.bpo-40094: CGIHTTPRequestHandler logs exit code (GH-19285)

CGIHTTPRequestHandler of http.server now logs the CGI script exit
code, rather than the CGI script exit status of os.waitpid().

For example, if the script is killed by signal 11, it now logs:
"CGI script exit code -11."Issues #25232, #24657: Merge two CGI server fixes from 3.5Issue #21793: Added http.HTTPStatus enums (i.e. HTTPStatus.OK,
HTTPStatus.NOT_FOUND).  Patch by Demian Brecht.Issue #21323: Fix http.server to again handle scripts in CGI subdirectories,
broken by the fix for security issue #19435.  Patch by Zach Byrne.merge 3.3 (#19435)Fix Issue6085 - SimpleHTTPServer address_string to return client ip instead of client hostnameClose #12289: Fix "is executable?" test in the CGI server

Use os.access(path, os.X_OK) instead of (os.stat(path).st_mode & 0o111 != 0),
and ignore the test on Windows.Issue #3709: a flush_headers method to BaseHTTPRequestHandler which manages the
sending of headers to output stream and flushing the internal headers buffer.
Patch contribution by Andrew SchaafClose subprocess pipes in the non-UNIX section of run_cgi.
Clears a number of ResourceWarnings in test_httpservers.Fix Issue9272 - Change CGIHTTPServer to give the child program a copy of os.environ#8292: Fix three instances of truth tests on return values of filter() (which is always true in Python 3).Merged revisions 76208 via svnmerge from
svn+ssh://pythondev@svn.python.org/python/trunk

........
  r76208 | senthil.kumaran | 2009-11-11 07:04:44 +0530 (Wed, 11 Nov 2009) | 3 lines

  CGIHTTPRequestHandler.run_cgi() to use subprocess for Non Unix platforms. Fix
  based on Issue1235.
........More codestring -> codebytes.Issue3113: tests for CGIHTTPRequestHandler failed on windows:
replace the now-invalid popen2 with a call to subprocess.Popen.Create http package. #2883.Issue #20268: Argument Clinic now supports cloning the parameters
and return converter from existing functions.Replace assert with a proper errorIssue #20228: Argument Clinic now has special support for class special
methods.Issue #19390: Argument Clinic no longer accepts malformed Python and C ids.Issue #20586: Argument Clinic now ensures signatures on functions without docstrings.Issue #22186: Fix typos in Lib/.

Patch by Févry Thibault.Issue #20530: Argument Clinic's signature format has been revised again.
The new syntax is highly human readable while still preventing false
positives.  The syntax also extends Python syntax to denote "self" and
positional-only parameters, allowing inspect.Signature objects to be
totally accurate for all supported builtins in Python 3.4.Issue #20326: Argument Clinic now uses a simple, unique signature to
annotate text signatures in docstrings, resulting in fewer false
positives.  "self" parameters are also explicitly marked, allowing
inspect.Signature() to authoritatively detect (and skip) said parameters.

Issue #20326: Argument Clinic now generates separate checksums for the
input and output sections of the block, allowing external tools to verify
that the input has not changed (and thus the output is not out-of-date).Two minor Argument Clinic bugfixes: use the name of the class in the
docstring for __new__ and __init__, and always use "goto exit" instead of
returning "NULL" for failure to parse (as _new__ and __init__ return ints).Improve fix for issue #20300.Issue #20300: Fix exception when setting conversion class member "default"
to None.Issue #19674: inspect.signature() now produces a correct signature
for some builtins.[jsinterp] Add support for quoted names and indexers (closes #13123, closes #13130)Merge pull request #11122 from kasper93/openload

[openload] Fix extraction.Revert "[jsinterp] Avoid double key lookup for setting new key"

This reverts commit 7c05097633138459e9bdf7e10738e021b04689a7.[jsinterp] Avoid double key lookup for setting new key

In order to add a new key to both __objects and __functions dicts on jsinterp.py, it is
necessary to first verify if a key was present and if not, create the key and
assign it to a value.

However, this can be done with a single step using dict setdefault method.[jsinterp] Beef up and add tests

In preparation for #4822, extend jsinterp by a lot. (We may even have to/want to write a proper interpreter with actual parsing)Merge pull request #4261 from tinybug/patch-4

Update jsinterp.py[jsinterp] Fix slice[jsinterp] Allow uppercase object names[jsinterp] Do not expect dot in simple function call[jsinterp] 'reverse' modifies the array in place (fixes #3334)[jsinterp] Implement splice and general improvement

I still get 403s on YouTube though.[youtube & jsinterp] Fix signature extraction (fixes #3255)

Some functions are defined now inside an object, the jsinterp will search its definition if the variable is not defined in the local namespace.[jsinterp] Remove superfluous u[youtube] Move JavaScript interpreter into its own moduleintroduce fact "ansible_processor_nproc": number of usable vcpus (#66569)

This fact reflects the number of usable vcpus (which might be different
from ansible_processor_vcpus, e.g., in containers with limits). See
also #51504.

* Add fixture data and update unit tests

Co-authored-by: Sam Doran <sdoran@redhat.com>facts: fix double-counting of CPUs on POWER systems (#58360)

On POWER systems, /proc/cpuinfo provides a 'processor' entry as a
counter, and a 'cpu' entry with a description (similar to 'model name'
on x86). Support for POWER in get_cpu_facts was added via the 'cpu'
entry in commit 8746e692c121d7081e5c545de8e98908a95b510b.  Subsequent
support for ARM64 in commit ce4ada93f9daae4e1806c612b5c2f96727dc3de5
used the 'processor' entry, resulting in double-counting of cores on
POWER systems.

When unit tests were later written for this code in
commit 55306906cf7577cc5a666bf6f3d0486dcf937c03, the erroneous values
were just accepted in the test instead of being diagnosed.

Signed-off-by: Yaakov Selkowitz <yselkowi@redhat.com>Handle situation where ansible_architecure may not be defined when gathering facts (#55466)

facts: correctly detect xen paravirt vs hvm cpuinfo (#49320)

* facts: correctly detect xen paravirt vs hvm cpuinfo

Fixes #49039

Signed-off-by: Adam Miller <admiller@redhat.com>

* provide default val if we IndexError

Signed-off-by: Adam Miller <admiller@redhat.com>Correctly count processors on ARM systems. (#52884)

- Add unit tests for Linux CPU info
- Add cpuinfo output from several systems for unit tests

Co-authored-by: Abhijeet Kasurde <akasurde@redhat.com>facts: fix SPARC cpu count on linux (#30261)

On sparc64, /proc/cpuinfo has no usual 'model name', 'Processor', 'vendor_id', 'Vendor',
as a result "ansible_processor_vcpus" is always 1.
Add check element "ncpus active" to fix the issue.facts: fix arm64 ansible_processor_vcpus = 0

On arm64, /proc/cpuinfo has no 'model name', 'Processor', 'vendor_id', 'cpu', 'Vendor',
as a resul "ansible_processor_count": 0 & "ansible_processor_vcpus": 0
Add checking element "processor" to fix the issue.

$ ansible -i ~/all-in-one  -m setup all | grep proc
	"ansible_processor": [],
	"ansible_processor_cores": 1,
	"ansible_processor_count": 0,
	"ansible_processor_threads_per_core": 1,
	"ansible_processor_vcpus": 0,

$ cat /proc/cpuinfo
processor	: 0
BogoMIPS	: 100.00
Features	: fp asimd evtstrm aes pmull sha1 sha2 crc32
CPU implementer	: 0x41
CPU architecture: 8
CPU variant	: 0x1
CPU part	: 0xd07
CPU revision	: 1

$ ansible --version
ansible 2.3.1.0
config file =
configured module search path = Default w/o overrides
python version = 2.7.9 (default, Aug 13 2016, 16:27:01) [GCC 4.9.2]

With fix, checking processor as well:
$ ansible -i ~/all-in-one  -m setup all | grep proc
	"ansible_processor": [
	"ansible_processor_cores": 1,
	"ansible_processor_count": 16,
	"ansible_processor_threads_per_core": 1,
	"ansible_processor_vcpus": 16,

Signed-off-by: Zhangfei Gao <zhangfei.gao@linaro.org>